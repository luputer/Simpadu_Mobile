{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/objectWithoutPropertiesLoose","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"HFkXuFcBAqfzGtqyPj8g62MKT0M=","exportNames":["*"]}},{"name":"@react-navigation/routers","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":58,"index":73}}],"key":"TumjUqgKkj40CL5/as2VxzLfO54=","exportNames":["*"]}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":74},"end":{"line":4,"column":31,"index":105}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"]}},{"name":"react-is","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":106},"end":{"line":5,"column":46,"index":152}}],"key":"nMRUu046PLZz3vjxw7Fgw3UH3xY=","exportNames":["*"]}},{"name":"use-latest-callback","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":153},"end":{"line":6,"column":52,"index":205}}],"key":"2ER/r3Agt+5SFwaFR8HXg24Rpu4=","exportNames":["*"]}},{"name":"./deepFreeze.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":206},"end":{"line":7,"column":45,"index":251}}],"key":"rNxrvQaXjK4/vUvPksJpbMJ5u+4=","exportNames":["*"]}},{"name":"./Group.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":252},"end":{"line":8,"column":35,"index":287}}],"key":"81XLedmR1ugWwxXMAacEe45V43M=","exportNames":["*"]}},{"name":"./isArrayEqual.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":288},"end":{"line":9,"column":49,"index":337}}],"key":"0Xv+Jf6vWjo3/vKyf7CxgrGRylo=","exportNames":["*"]}},{"name":"./isRecordEqual.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":10,"column":0,"index":338},"end":{"line":10,"column":51,"index":389}}],"key":"E5lU3h554k94C0V5puhR219BWnU=","exportNames":["*"]}},{"name":"./NavigationHelpersContext.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":390},"end":{"line":11,"column":73,"index":463}}],"key":"UPnefzBCahUrTRoOWw51hXJ7z+A=","exportNames":["*"]}},{"name":"./NavigationRouteContext.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":12,"column":0,"index":464},"end":{"line":12,"column":69,"index":533}}],"key":"AWXnpGNA5UkH1qQUM7hLv2L9KzI=","exportNames":["*"]}},{"name":"./NavigationStateContext.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":13,"column":0,"index":534},"end":{"line":13,"column":69,"index":603}}],"key":"vPXNy6i2DuFIp7nHtHgSOvNmS+U=","exportNames":["*"]}},{"name":"./PreventRemoveProvider.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":14,"column":0,"index":604},"end":{"line":14,"column":67,"index":671}}],"key":"A/nq9Y/xSFBE06OzxjBtNMD9uQU=","exportNames":["*"]}},{"name":"./Screen.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":15,"column":0,"index":672},"end":{"line":15,"column":37,"index":709}}],"key":"YbGte4vf40k4Yjb9DRJvUiBpPUk=","exportNames":["*"]}},{"name":"./types.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":16,"column":0,"index":710},"end":{"line":16,"column":47,"index":757}}],"key":"yJvqu7zVoaSgx/LOxsKU/6eppkQ=","exportNames":["*"]}},{"name":"./useChildListeners.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":17,"column":0,"index":758},"end":{"line":17,"column":59,"index":817}}],"key":"+uLQCjZF6jwjpLbZFDGLy8MVJhc=","exportNames":["*"]}},{"name":"./useComponent.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":18,"column":0,"index":818},"end":{"line":18,"column":49,"index":867}}],"key":"b66LKsk9Jf3uaP2v5j6OCNwoJlU=","exportNames":["*"]}},{"name":"./useCurrentRender.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":19,"column":0,"index":868},"end":{"line":19,"column":57,"index":925}}],"key":"McuG59KD5h0BHxEULOXCoLs/e2E=","exportNames":["*"]}},{"name":"./useDescriptors.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":20,"column":0,"index":926},"end":{"line":20,"column":53,"index":979}}],"key":"G1CfJySCSkhPC7rH5rQhaqLaTI0=","exportNames":["*"]}},{"name":"./useEventEmitter.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":21,"column":0,"index":980},"end":{"line":21,"column":55,"index":1035}}],"key":"f/gs/fnvuaPtRHedK9bCgn238kE=","exportNames":["*"]}},{"name":"./useFocusedListenersChildrenAdapter.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":22,"column":0,"index":1036},"end":{"line":22,"column":93,"index":1129}}],"key":"OygHMRn4bEenld73jIuOxQ+gu9U=","exportNames":["*"]}},{"name":"./useFocusEvents.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":23,"column":0,"index":1130},"end":{"line":23,"column":53,"index":1183}}],"key":"8zqWYqMNSd/k9LIqrmfq1M3LrQU=","exportNames":["*"]}},{"name":"./useIsomorphicLayoutEffect","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":24,"column":0,"index":1184},"end":{"line":24,"column":72,"index":1256}}],"key":"9rkYAq1XBrVxY+kZsCUj0T3q4rg=","exportNames":["*"]}},{"name":"./useKeyedChildListeners.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":25,"column":0,"index":1257},"end":{"line":25,"column":69,"index":1326}}],"key":"uvEgxGYPcoeW+RryvJ51Glj8+aw=","exportNames":["*"]}},{"name":"./useLazyValue.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":26,"column":0,"index":1327},"end":{"line":26,"column":49,"index":1376}}],"key":"4aMiFZmnD/ZJbzJTaYI7ECYTV2s=","exportNames":["*"]}},{"name":"./useNavigationHelpers.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":27,"column":0,"index":1377},"end":{"line":27,"column":65,"index":1442}}],"key":"c9g7geoBBHpEed2xjMQ2EV7DCFE=","exportNames":["*"]}},{"name":"./useOnAction.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":28,"column":0,"index":1443},"end":{"line":28,"column":47,"index":1490}}],"key":"oVCZ93YyJFpAvJlQLQH3T1CuCCk=","exportNames":["*"]}},{"name":"./useOnGetState.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":29,"column":0,"index":1491},"end":{"line":29,"column":51,"index":1542}}],"key":"/XMjJjmKD4ejBJNDiIDjXKDJRFk=","exportNames":["*"]}},{"name":"./useOnRouteFocus.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":30,"column":0,"index":1543},"end":{"line":30,"column":55,"index":1598}}],"key":"5V4g0kBeeaIrUwTen4o2q6oj60U=","exportNames":["*"]}},{"name":"./useRegisterNavigator.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":31,"column":0,"index":1599},"end":{"line":31,"column":65,"index":1664}}],"key":"KZzTt58Kkr/mzgiCdvRDRowLya8=","exportNames":["*"]}},{"name":"./useScheduleUpdate.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":32,"column":0,"index":1665},"end":{"line":32,"column":59,"index":1724}}],"key":"FnFZL3NH40gExc7dikLfREzDCec=","exportNames":["*"]}},{"name":"react/jsx-runtime","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":36,"column":0,"index":1840},"end":{"line":36,"column":48,"index":1888}}],"key":"rKAWVuQOSSDHxC6IWcmkeWszaWg=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.useNavigationBuilder = useNavigationBuilder;\n  var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\n  var _routers = require(_dependencyMap[2], \"@react-navigation/routers\");\n  var React = _interopRequireWildcard(require(_dependencyMap[3], \"react\"));\n  var _reactIs = require(_dependencyMap[4], \"react-is\");\n  var _useLatestCallback = _interopRequireDefault(require(_dependencyMap[5], \"use-latest-callback\"));\n  var _deepFreeze = require(_dependencyMap[6], \"./deepFreeze.js\");\n  var _Group = require(_dependencyMap[7], \"./Group.js\");\n  var _isArrayEqual = require(_dependencyMap[8], \"./isArrayEqual.js\");\n  var _isRecordEqual = require(_dependencyMap[9], \"./isRecordEqual.js\");\n  var _NavigationHelpersContext = require(_dependencyMap[10], \"./NavigationHelpersContext.js\");\n  var _NavigationRouteContext = require(_dependencyMap[11], \"./NavigationRouteContext.js\");\n  var _NavigationStateContext = require(_dependencyMap[12], \"./NavigationStateContext.js\");\n  var _PreventRemoveProvider = require(_dependencyMap[13], \"./PreventRemoveProvider.js\");\n  var _Screen = require(_dependencyMap[14], \"./Screen.js\");\n  var _types = require(_dependencyMap[15], \"./types.js\");\n  var _useChildListeners = require(_dependencyMap[16], \"./useChildListeners.js\");\n  var _useComponent = require(_dependencyMap[17], \"./useComponent.js\");\n  var _useCurrentRender = require(_dependencyMap[18], \"./useCurrentRender.js\");\n  var _useDescriptors = require(_dependencyMap[19], \"./useDescriptors.js\");\n  var _useEventEmitter = require(_dependencyMap[20], \"./useEventEmitter.js\");\n  var _useFocusedListenersChildrenAdapter = require(_dependencyMap[21], \"./useFocusedListenersChildrenAdapter.js\");\n  var _useFocusEvents = require(_dependencyMap[22], \"./useFocusEvents.js\");\n  var _useIsomorphicLayoutEffect = require(_dependencyMap[23], \"./useIsomorphicLayoutEffect\");\n  var _useKeyedChildListeners = require(_dependencyMap[24], \"./useKeyedChildListeners.js\");\n  var _useLazyValue = require(_dependencyMap[25], \"./useLazyValue.js\");\n  var _useNavigationHelpers = require(_dependencyMap[26], \"./useNavigationHelpers.js\");\n  var _useOnAction = require(_dependencyMap[27], \"./useOnAction.js\");\n  var _useOnGetState = require(_dependencyMap[28], \"./useOnGetState.js\");\n  var _useOnRouteFocus = require(_dependencyMap[29], \"./useOnRouteFocus.js\");\n  var _useRegisterNavigator = require(_dependencyMap[30], \"./useRegisterNavigator.js\");\n  var _useScheduleUpdate = require(_dependencyMap[31], \"./useScheduleUpdate.js\");\n  var _jsxRuntime = require(_dependencyMap[32], \"react/jsx-runtime\");\n  const _excluded = [\"children\", \"layout\", \"screenOptions\", \"screenLayout\", \"screenListeners\", \"UNSTABLE_router\"]; // This is to make TypeScript compiler happy\n  // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n  function _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (const t in e) \"default\" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]); return f; })(e, t); }\n  _types.PrivateValueStore;\n  const isScreen = child => {\n    return child.type === _Screen.Screen;\n  };\n  const isGroup = child => {\n    return child.type === React.Fragment || child.type === _Group.Group;\n  };\n  const isValidKey = key => key === undefined || typeof key === 'string' && key !== '';\n\n  /**\n   * Extract route config object from React children elements.\n   *\n   * @param children React Elements to extract the config from.\n   */\n  const getRouteConfigsFromChildren = (children, groupKey, groupOptions, groupLayout) => {\n    const configs = React.Children.toArray(children).reduce((acc, child) => {\n      if (/*#__PURE__*/React.isValidElement(child)) {\n        if (isScreen(child)) {\n          // We can only extract the config from `Screen` elements\n          // If something else was rendered, it's probably a bug\n\n          if (typeof child.props !== 'object' || child.props === null) {\n            throw new Error(`Got an invalid element for screen.`);\n          }\n          if (typeof child.props.name !== 'string' || child.props.name === '') {\n            throw new Error(`Got an invalid name (${JSON.stringify(child.props.name)}) for the screen. It must be a non-empty string.`);\n          }\n          if (child.props.navigationKey !== undefined && (typeof child.props.navigationKey !== 'string' || child.props.navigationKey === '')) {\n            throw new Error(`Got an invalid 'navigationKey' prop (${JSON.stringify(child.props.navigationKey)}) for the screen '${child.props.name}'. It must be a non-empty string or 'undefined'.`);\n          }\n          acc.push({\n            keys: [groupKey, child.props.navigationKey],\n            options: groupOptions,\n            layout: groupLayout,\n            props: child.props\n          });\n          return acc;\n        }\n        if (isGroup(child)) {\n          if (!isValidKey(child.props.navigationKey)) {\n            throw new Error(`Got an invalid 'navigationKey' prop (${JSON.stringify(child.props.navigationKey)}) for the group. It must be a non-empty string or 'undefined'.`);\n          }\n\n          // When we encounter a fragment or group, we need to dive into its children to extract the configs\n          // This is handy to conditionally define a group of screens\n          acc.push(...getRouteConfigsFromChildren(child.props.children, child.props.navigationKey,\n          // FIXME\n          // @ts-expect-error: add validation\n          child.type !== _Group.Group ? groupOptions : groupOptions != null ? [...groupOptions, child.props.screenOptions] : [child.props.screenOptions], typeof child.props.screenLayout === 'function' ? child.props.screenLayout : groupLayout));\n          return acc;\n        }\n      }\n      throw new Error(`A navigator can only contain 'Screen', 'Group' or 'React.Fragment' as its direct children (found ${/*#__PURE__*/ /*#__PURE__*/React.isValidElement(child) ? `'${typeof child.type === 'string' ? child.type : child.type?.name}'${child.props != null && typeof child.props === 'object' && 'name' in child.props && child.props?.name ? ` for the screen '${child.props.name}'` : ''}` : typeof child === 'object' ? JSON.stringify(child) : `'${String(child)}'`}). To render this component in the navigator, pass it in the 'component' prop to 'Screen'.`);\n    }, []);\n    if (process.env.NODE_ENV !== 'production') {\n      configs.forEach(config => {\n        const {\n          name,\n          children,\n          component,\n          getComponent\n        } = config.props;\n        if (children != null || component !== undefined || getComponent !== undefined) {\n          if (children != null && component !== undefined) {\n            throw new Error(`Got both 'component' and 'children' props for the screen '${name}'. You must pass only one of them.`);\n          }\n          if (children != null && getComponent !== undefined) {\n            throw new Error(`Got both 'getComponent' and 'children' props for the screen '${name}'. You must pass only one of them.`);\n          }\n          if (component !== undefined && getComponent !== undefined) {\n            throw new Error(`Got both 'component' and 'getComponent' props for the screen '${name}'. You must pass only one of them.`);\n          }\n          if (children != null && typeof children !== 'function') {\n            throw new Error(`Got an invalid value for 'children' prop for the screen '${name}'. It must be a function returning a React Element.`);\n          }\n          if (component !== undefined && !(0, _reactIs.isValidElementType)(component)) {\n            throw new Error(`Got an invalid value for 'component' prop for the screen '${name}'. It must be a valid React Component.`);\n          }\n          if (getComponent !== undefined && typeof getComponent !== 'function') {\n            throw new Error(`Got an invalid value for 'getComponent' prop for the screen '${name}'. It must be a function returning a React Component.`);\n          }\n          if (typeof component === 'function') {\n            if (component.name === 'component') {\n              // Inline anonymous functions passed in the `component` prop will have the name of the prop\n              // It's relatively safe to assume that it's not a component since it should also have PascalCase name\n              // We won't catch all scenarios here, but this should catch a good chunk of incorrect use.\n              console.warn(`Looks like you're passing an inline function for 'component' prop for the screen '${name}' (e.g. component={() => <SomeComponent />}). Passing an inline function will cause the component state to be lost on re-render and cause perf issues since it's re-created every render. You can pass the function as children to 'Screen' instead to achieve the desired behaviour.`);\n            } else if (/^[a-z]/.test(component.name)) {\n              console.warn(`Got a component with the name '${component.name}' for the screen '${name}'. React Components must start with an uppercase letter. If you're passing a regular function and not a component, pass it as children to 'Screen' instead. Otherwise capitalize your component's name.`);\n            }\n          }\n        } else {\n          throw new Error(`Couldn't find a 'component', 'getComponent' or 'children' prop for the screen '${name}'. This can happen if you passed 'undefined'. You likely forgot to export your component from the file it's defined in, or mixed up default import and named import when importing.`);\n        }\n      });\n    }\n    return configs;\n  };\n\n  /**\n   * Hook for building navigators.\n   *\n   * @param createRouter Factory method which returns router object.\n   * @param options Options object containing `children` and additional options for the router.\n   * @returns An object containing `state`, `navigation`, `descriptors` objects.\n   */\n  function useNavigationBuilder(createRouter, options) {\n    const navigatorKey = (0, _useRegisterNavigator.useRegisterNavigator)();\n    const route = React.useContext(_NavigationRouteContext.NavigationRouteContext);\n    const {\n        children,\n        layout,\n        screenOptions,\n        screenLayout,\n        screenListeners,\n        UNSTABLE_router\n      } = options,\n      rest = (0, _objectWithoutPropertiesLoose2.default)(options, _excluded);\n    const routeConfigs = getRouteConfigsFromChildren(children);\n    const router = (0, _useLazyValue.useLazyValue)(() => {\n      if (rest.initialRouteName != null && routeConfigs.every(config => config.props.name !== rest.initialRouteName)) {\n        throw new Error(`Couldn't find a screen named '${rest.initialRouteName}' to use as 'initialRouteName'.`);\n      }\n      const original = createRouter(rest);\n      if (UNSTABLE_router != null) {\n        const overrides = UNSTABLE_router(original);\n        return Object.assign({}, original, overrides);\n      }\n      return original;\n    });\n    const screens = routeConfigs.reduce((acc, config) => {\n      if (config.props.name in acc) {\n        throw new Error(`A navigator cannot contain multiple 'Screen' components with the same name (found duplicate screen named '${config.props.name}')`);\n      }\n      acc[config.props.name] = config;\n      return acc;\n    }, {});\n    const routeNames = routeConfigs.map(config => config.props.name);\n    const routeKeyList = routeNames.reduce((acc, curr) => {\n      acc[curr] = screens[curr].keys.map(key => key ?? '').join(':');\n      return acc;\n    }, {});\n    const routeParamList = routeNames.reduce((acc, curr) => {\n      const {\n        initialParams\n      } = screens[curr].props;\n      acc[curr] = initialParams;\n      return acc;\n    }, {});\n    const routeGetIdList = routeNames.reduce((acc, curr) => Object.assign(acc, {\n      [curr]: screens[curr].props.getId\n    }), {});\n    if (!routeNames.length) {\n      throw new Error(\"Couldn't find any screens for the navigator. Have you defined any screens as its children?\");\n    }\n    const isStateValid = React.useCallback(state => state.type === undefined || state.type === router.type, [router.type]);\n    const isStateInitialized = React.useCallback(state => state !== undefined && state.stale === false && isStateValid(state), [isStateValid]);\n    const {\n      state: currentState,\n      getState: getCurrentState,\n      setState: setCurrentState,\n      setKey,\n      getKey,\n      getIsInitial\n    } = React.useContext(_NavigationStateContext.NavigationStateContext);\n    const stateCleanedUp = React.useRef(false);\n    const setState = (0, _useLatestCallback.default)(state => {\n      if (stateCleanedUp.current) {\n        // State might have been already cleaned up due to unmount\n        // We do not want to expose API allowing to override this\n        // This would lead to old data preservation on main navigator unmount\n        return;\n      }\n      setCurrentState(state);\n    });\n    const [initializedState, isFirstStateInitialization] = React.useMemo(() => {\n      const initialRouteParamList = routeNames.reduce((acc, curr) => {\n        const {\n          initialParams\n        } = screens[curr].props;\n        const initialParamsFromParams = route?.params?.state == null && route?.params?.initial !== false && route?.params?.screen === curr ? route.params.params : undefined;\n        acc[curr] = initialParams !== undefined || initialParamsFromParams !== undefined ? Object.assign({}, initialParams, initialParamsFromParams) : undefined;\n        return acc;\n      }, {});\n\n      // If the current state isn't initialized on first render, we initialize it\n      // We also need to re-initialize it if the state passed from parent was changed (maybe due to reset)\n      // Otherwise assume that the state was provided as initial state\n      // So we need to rehydrate it to make it usable\n      if ((currentState === undefined || !isStateValid(currentState)) && route?.params?.state == null && !(typeof route?.params?.screen === 'string' && route?.params?.initial !== false)) {\n        return [router.getInitialState({\n          routeNames,\n          routeParamList: initialRouteParamList,\n          routeGetIdList\n        }), true];\n      } else {\n        let stateFromParams;\n        if (route?.params?.state != null) {\n          stateFromParams = route.params.state;\n        } else if (typeof route?.params?.screen === 'string' && route?.params?.initial !== false) {\n          stateFromParams = {\n            index: 0,\n            routes: [{\n              name: route.params.screen,\n              params: route.params.params,\n              path: route.params.path\n            }]\n          };\n        }\n        return [router.getRehydratedState(stateFromParams ?? currentState, {\n          routeNames,\n          routeParamList: initialRouteParamList,\n          routeGetIdList\n        }), false];\n      }\n      // We explicitly don't include routeNames, route.params etc. in the dep list\n      // below. We want to avoid forcing a new state to be calculated in those cases\n      // Instead, we handle changes to these in the nextState code below. Note\n      // that some changes to routeConfigs are explicitly ignored, such as changes\n      // to initialParams\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [currentState, router, isStateValid]);\n    const previousRouteKeyListRef = React.useRef(routeKeyList);\n    React.useEffect(() => {\n      previousRouteKeyListRef.current = routeKeyList;\n    });\n    const previousRouteKeyList = previousRouteKeyListRef.current;\n    let state =\n    // If the state isn't initialized, or stale, use the state we initialized instead\n    // The state won't update until there's a change needed in the state we have initialized locally\n    // So it'll be `undefined` or stale until the first navigation event happens\n    isStateInitialized(currentState) ? currentState : initializedState;\n    let nextState = state;\n    if (!(0, _isArrayEqual.isArrayEqual)(state.routeNames, routeNames) || !(0, _isRecordEqual.isRecordEqual)(routeKeyList, previousRouteKeyList)) {\n      // When the list of route names change, the router should handle it to remove invalid routes\n      nextState = router.getStateForRouteNamesChange(state, {\n        routeNames,\n        routeParamList,\n        routeGetIdList,\n        routeKeyChanges: Object.keys(routeKeyList).filter(name => name in previousRouteKeyList && routeKeyList[name] !== previousRouteKeyList[name])\n      });\n    }\n    const previousNestedParamsRef = React.useRef(route?.params);\n    React.useEffect(() => {\n      previousNestedParamsRef.current = route?.params;\n    }, [route?.params]);\n    if (route?.params) {\n      const previousParams = previousNestedParamsRef.current;\n      let action;\n      if (typeof route.params.state === 'object' && route.params.state != null && route.params !== previousParams) {\n        // If the route was updated with new state, we should reset to it\n        action = _routers.CommonActions.reset(route.params.state);\n      } else if (typeof route.params.screen === 'string' && (route.params.initial === false && isFirstStateInitialization || route.params !== previousParams)) {\n        // If the route was updated with new screen name and/or params, we should navigate there\n        action = _routers.CommonActions.navigate({\n          name: route.params.screen,\n          params: route.params.params,\n          path: route.params.path,\n          pop: route.params.pop\n        });\n      }\n\n      // The update should be limited to current navigator only, so we call the router manually\n      const updatedState = action ? router.getStateForAction(nextState, action, {\n        routeNames,\n        routeParamList,\n        routeGetIdList\n      }) : null;\n      nextState = updatedState !== null ? router.getRehydratedState(updatedState, {\n        routeNames,\n        routeParamList,\n        routeGetIdList\n      }) : nextState;\n    }\n    const shouldUpdate = state !== nextState;\n    (0, _useScheduleUpdate.useScheduleUpdate)(() => {\n      if (shouldUpdate) {\n        // If the state needs to be updated, we'll schedule an update\n        setState(nextState);\n      }\n    });\n\n    // The up-to-date state will come in next render, but we don't need to wait for it\n    // We can't use the outdated state since the screens have changed, which will cause error due to mismatched config\n    // So we override the state object we return to use the latest state as soon as possible\n    state = nextState;\n    React.useEffect(() => {\n      // In strict mode, React will double-invoke effects.\n      // So we need to reset the flag if component was not unmounted\n      stateCleanedUp.current = false;\n      setKey(navigatorKey);\n      if (!getIsInitial()) {\n        // If it's not initial render, we need to update the state\n        // This will make sure that our container gets notifier of state changes due to new mounts\n        // This is necessary for proper screen tracking, URL updates etc.\n        setState(nextState);\n      }\n      return () => {\n        // We need to clean up state for this navigator on unmount\n        if (getCurrentState() !== undefined && getKey() === navigatorKey) {\n          setCurrentState(undefined);\n          stateCleanedUp.current = true;\n        }\n      };\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    // In some cases (e.g. route names change), internal state might have changed\n    // But it hasn't been committed yet, so hasn't propagated to the sync external store\n    // During this time, we need to return the internal state in `getState`\n    // Otherwise it can result in inconsistent state during render in children\n    // To avoid this, we use a ref for render phase, and immediately clear it on commit\n    const stateRef = React.useRef(state);\n    stateRef.current = state;\n    (0, _useIsomorphicLayoutEffect.useIsomorphicLayoutEffect)(() => {\n      stateRef.current = null;\n    });\n    const getState = (0, _useLatestCallback.default)(() => {\n      const currentState = getCurrentState();\n      return (0, _deepFreeze.deepFreeze)(isStateInitialized(currentState) ? currentState : initializedState);\n    });\n    const emitter = (0, _useEventEmitter.useEventEmitter)(e => {\n      const routeNames = [];\n      let route;\n      if (e.target) {\n        route = state.routes.find(route => route.key === e.target);\n        if (route?.name) {\n          routeNames.push(route.name);\n        }\n      } else {\n        route = state.routes[state.index];\n        routeNames.push(...Object.keys(screens).filter(name => route?.name === name));\n      }\n      if (route == null) {\n        return;\n      }\n      const navigation = descriptors[route.key].navigation;\n      const listeners = [].concat(\n      // Get an array of listeners for all screens + common listeners on navigator\n      ...[screenListeners, ...routeNames.map(name => {\n        const {\n          listeners\n        } = screens[name].props;\n        return listeners;\n      })].map(listeners => {\n        const map = typeof listeners === 'function' ? listeners({\n          route: route,\n          navigation\n        }) : listeners;\n        return map ? Object.keys(map).filter(type => type === e.type).map(type => map?.[type]) : undefined;\n      }))\n      // We don't want same listener to be called multiple times for same event\n      // So we remove any duplicate functions from the array\n      .filter((cb, i, self) => cb && self.lastIndexOf(cb) === i);\n      listeners.forEach(listener => listener?.(e));\n    });\n    (0, _useFocusEvents.useFocusEvents)({\n      state,\n      emitter\n    });\n    React.useEffect(() => {\n      emitter.emit({\n        type: 'state',\n        data: {\n          state\n        }\n      });\n    }, [emitter, state]);\n    const {\n      listeners: childListeners,\n      addListener\n    } = (0, _useChildListeners.useChildListeners)();\n    const {\n      keyedListeners,\n      addKeyedListener\n    } = (0, _useKeyedChildListeners.useKeyedChildListeners)();\n    const onAction = (0, _useOnAction.useOnAction)({\n      router,\n      getState,\n      setState,\n      key: route?.key,\n      actionListeners: childListeners.action,\n      beforeRemoveListeners: keyedListeners.beforeRemove,\n      routerConfigOptions: {\n        routeNames,\n        routeParamList,\n        routeGetIdList\n      },\n      emitter\n    });\n    const onRouteFocus = (0, _useOnRouteFocus.useOnRouteFocus)({\n      router,\n      key: route?.key,\n      getState,\n      setState\n    });\n    const navigation = (0, _useNavigationHelpers.useNavigationHelpers)({\n      id: options.id,\n      onAction,\n      getState,\n      emitter,\n      router,\n      stateRef\n    });\n    (0, _useFocusedListenersChildrenAdapter.useFocusedListenersChildrenAdapter)({\n      navigation,\n      focusedListeners: childListeners.focus\n    });\n    (0, _useOnGetState.useOnGetState)({\n      getState,\n      getStateListeners: keyedListeners.getState\n    });\n    const {\n      describe,\n      descriptors\n    } = (0, _useDescriptors.useDescriptors)({\n      state,\n      screens,\n      navigation,\n      screenOptions,\n      screenLayout,\n      onAction,\n      getState,\n      setState,\n      onRouteFocus,\n      addListener,\n      addKeyedListener,\n      router,\n      // @ts-expect-error: this should have both core and custom events, but too much work right now\n      emitter\n    });\n    (0, _useCurrentRender.useCurrentRender)({\n      state,\n      navigation,\n      descriptors\n    });\n    const NavigationContent = (0, _useComponent.useComponent)(children => {\n      const element = layout != null ? layout({\n        state,\n        descriptors,\n        navigation,\n        children\n      }) : children;\n      return /*#__PURE__*/(0, _jsxRuntime.jsx)(_NavigationHelpersContext.NavigationHelpersContext.Provider, {\n        value: navigation,\n        children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_PreventRemoveProvider.PreventRemoveProvider, {\n          children: element\n        })\n      });\n    });\n    return {\n      state,\n      navigation,\n      describe,\n      descriptors,\n      NavigationContent\n    };\n  }\n});","lineCount":502,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_interopRequireDefault"],[4,28,1,13],[4,31,1,13,"require"],[4,38,1,13],[4,39,1,13,"_dependencyMap"],[4,53,1,13],[5,2,1,13,"Object"],[5,8,1,13],[5,9,1,13,"defineProperty"],[5,23,1,13],[5,24,1,13,"exports"],[5,31,1,13],[6,4,1,13,"value"],[6,9,1,13],[7,2,1,13],[8,2,1,13,"exports"],[8,9,1,13],[8,10,1,13,"useNavigationBuilder"],[8,30,1,13],[8,33,1,13,"useNavigationBuilder"],[8,53,1,13],[9,2,1,13],[9,6,1,13,"_objectWithoutPropertiesLoose2"],[9,36,1,13],[9,39,1,13,"_interopRequireDefault"],[9,61,1,13],[9,62,1,13,"require"],[9,69,1,13],[9,70,1,13,"_dependencyMap"],[9,84,1,13],[10,2,3,0],[10,6,3,0,"_routers"],[10,14,3,0],[10,17,3,0,"require"],[10,24,3,0],[10,25,3,0,"_dependencyMap"],[10,39,3,0],[11,2,4,0],[11,6,4,0,"React"],[11,11,4,0],[11,14,4,0,"_interopRequireWildcard"],[11,37,4,0],[11,38,4,0,"require"],[11,45,4,0],[11,46,4,0,"_dependencyMap"],[11,60,4,0],[12,2,5,0],[12,6,5,0,"_reactIs"],[12,14,5,0],[12,17,5,0,"require"],[12,24,5,0],[12,25,5,0,"_dependencyMap"],[12,39,5,0],[13,2,6,0],[13,6,6,0,"_useLatestCallback"],[13,24,6,0],[13,27,6,0,"_interopRequireDefault"],[13,49,6,0],[13,50,6,0,"require"],[13,57,6,0],[13,58,6,0,"_dependencyMap"],[13,72,6,0],[14,2,7,0],[14,6,7,0,"_deepFreeze"],[14,17,7,0],[14,20,7,0,"require"],[14,27,7,0],[14,28,7,0,"_dependencyMap"],[14,42,7,0],[15,2,8,0],[15,6,8,0,"_Group"],[15,12,8,0],[15,15,8,0,"require"],[15,22,8,0],[15,23,8,0,"_dependencyMap"],[15,37,8,0],[16,2,9,0],[16,6,9,0,"_isArrayEqual"],[16,19,9,0],[16,22,9,0,"require"],[16,29,9,0],[16,30,9,0,"_dependencyMap"],[16,44,9,0],[17,2,10,0],[17,6,10,0,"_isRecordEqual"],[17,20,10,0],[17,23,10,0,"require"],[17,30,10,0],[17,31,10,0,"_dependencyMap"],[17,45,10,0],[18,2,11,0],[18,6,11,0,"_NavigationHelpersContext"],[18,31,11,0],[18,34,11,0,"require"],[18,41,11,0],[18,42,11,0,"_dependencyMap"],[18,56,11,0],[19,2,12,0],[19,6,12,0,"_NavigationRouteContext"],[19,29,12,0],[19,32,12,0,"require"],[19,39,12,0],[19,40,12,0,"_dependencyMap"],[19,54,12,0],[20,2,13,0],[20,6,13,0,"_NavigationStateContext"],[20,29,13,0],[20,32,13,0,"require"],[20,39,13,0],[20,40,13,0,"_dependencyMap"],[20,54,13,0],[21,2,14,0],[21,6,14,0,"_PreventRemoveProvider"],[21,28,14,0],[21,31,14,0,"require"],[21,38,14,0],[21,39,14,0,"_dependencyMap"],[21,53,14,0],[22,2,15,0],[22,6,15,0,"_Screen"],[22,13,15,0],[22,16,15,0,"require"],[22,23,15,0],[22,24,15,0,"_dependencyMap"],[22,38,15,0],[23,2,16,0],[23,6,16,0,"_types"],[23,12,16,0],[23,15,16,0,"require"],[23,22,16,0],[23,23,16,0,"_dependencyMap"],[23,37,16,0],[24,2,17,0],[24,6,17,0,"_useChildListeners"],[24,24,17,0],[24,27,17,0,"require"],[24,34,17,0],[24,35,17,0,"_dependencyMap"],[24,49,17,0],[25,2,18,0],[25,6,18,0,"_useComponent"],[25,19,18,0],[25,22,18,0,"require"],[25,29,18,0],[25,30,18,0,"_dependencyMap"],[25,44,18,0],[26,2,19,0],[26,6,19,0,"_useCurrentRender"],[26,23,19,0],[26,26,19,0,"require"],[26,33,19,0],[26,34,19,0,"_dependencyMap"],[26,48,19,0],[27,2,20,0],[27,6,20,0,"_useDescriptors"],[27,21,20,0],[27,24,20,0,"require"],[27,31,20,0],[27,32,20,0,"_dependencyMap"],[27,46,20,0],[28,2,21,0],[28,6,21,0,"_useEventEmitter"],[28,22,21,0],[28,25,21,0,"require"],[28,32,21,0],[28,33,21,0,"_dependencyMap"],[28,47,21,0],[29,2,22,0],[29,6,22,0,"_useFocusedListenersChildrenAdapter"],[29,41,22,0],[29,44,22,0,"require"],[29,51,22,0],[29,52,22,0,"_dependencyMap"],[29,66,22,0],[30,2,23,0],[30,6,23,0,"_useFocusEvents"],[30,21,23,0],[30,24,23,0,"require"],[30,31,23,0],[30,32,23,0,"_dependencyMap"],[30,46,23,0],[31,2,24,0],[31,6,24,0,"_useIsomorphicLayoutEffect"],[31,32,24,0],[31,35,24,0,"require"],[31,42,24,0],[31,43,24,0,"_dependencyMap"],[31,57,24,0],[32,2,25,0],[32,6,25,0,"_useKeyedChildListeners"],[32,29,25,0],[32,32,25,0,"require"],[32,39,25,0],[32,40,25,0,"_dependencyMap"],[32,54,25,0],[33,2,26,0],[33,6,26,0,"_useLazyValue"],[33,19,26,0],[33,22,26,0,"require"],[33,29,26,0],[33,30,26,0,"_dependencyMap"],[33,44,26,0],[34,2,27,0],[34,6,27,0,"_useNavigationHelpers"],[34,27,27,0],[34,30,27,0,"require"],[34,37,27,0],[34,38,27,0,"_dependencyMap"],[34,52,27,0],[35,2,28,0],[35,6,28,0,"_useOnAction"],[35,18,28,0],[35,21,28,0,"require"],[35,28,28,0],[35,29,28,0,"_dependencyMap"],[35,43,28,0],[36,2,29,0],[36,6,29,0,"_useOnGetState"],[36,20,29,0],[36,23,29,0,"require"],[36,30,29,0],[36,31,29,0,"_dependencyMap"],[36,45,29,0],[37,2,30,0],[37,6,30,0,"_useOnRouteFocus"],[37,22,30,0],[37,25,30,0,"require"],[37,32,30,0],[37,33,30,0,"_dependencyMap"],[37,47,30,0],[38,2,31,0],[38,6,31,0,"_useRegisterNavigator"],[38,27,31,0],[38,30,31,0,"require"],[38,37,31,0],[38,38,31,0,"_dependencyMap"],[38,52,31,0],[39,2,32,0],[39,6,32,0,"_useScheduleUpdate"],[39,24,32,0],[39,27,32,0,"require"],[39,34,32,0],[39,35,32,0,"_dependencyMap"],[39,49,32,0],[40,2,36,0],[40,6,36,0,"_jsxRuntime"],[40,17,36,0],[40,20,36,0,"require"],[40,27,36,0],[40,28,36,0,"_dependencyMap"],[40,42,36,0],[41,2,36,48],[41,8,36,48,"_excluded"],[41,17,36,48],[41,115,34,0],[42,2,35,0],[43,2,35,0],[43,11,35,0,"_interopRequireWildcard"],[43,35,35,0,"e"],[43,36,35,0],[43,38,35,0,"t"],[43,39,35,0],[43,68,35,0,"WeakMap"],[43,75,35,0],[43,81,35,0,"r"],[43,82,35,0],[43,89,35,0,"WeakMap"],[43,96,35,0],[43,100,35,0,"n"],[43,101,35,0],[43,108,35,0,"WeakMap"],[43,115,35,0],[43,127,35,0,"_interopRequireWildcard"],[43,150,35,0],[43,162,35,0,"_interopRequireWildcard"],[43,163,35,0,"e"],[43,164,35,0],[43,166,35,0,"t"],[43,167,35,0],[43,176,35,0,"t"],[43,177,35,0],[43,181,35,0,"e"],[43,182,35,0],[43,186,35,0,"e"],[43,187,35,0],[43,188,35,0,"__esModule"],[43,198,35,0],[43,207,35,0,"e"],[43,208,35,0],[43,214,35,0,"o"],[43,215,35,0],[43,217,35,0,"i"],[43,218,35,0],[43,220,35,0,"f"],[43,221,35,0],[43,226,35,0,"__proto__"],[43,235,35,0],[43,243,35,0,"default"],[43,250,35,0],[43,252,35,0,"e"],[43,253,35,0],[43,270,35,0,"e"],[43,271,35,0],[43,294,35,0,"e"],[43,295,35,0],[43,320,35,0,"e"],[43,321,35,0],[43,330,35,0,"f"],[43,331,35,0],[43,337,35,0,"o"],[43,338,35,0],[43,341,35,0,"t"],[43,342,35,0],[43,345,35,0,"n"],[43,346,35,0],[43,349,35,0,"r"],[43,350,35,0],[43,358,35,0,"o"],[43,359,35,0],[43,360,35,0,"has"],[43,363,35,0],[43,364,35,0,"e"],[43,365,35,0],[43,375,35,0,"o"],[43,376,35,0],[43,377,35,0,"get"],[43,380,35,0],[43,381,35,0,"e"],[43,382,35,0],[43,385,35,0,"o"],[43,386,35,0],[43,387,35,0,"set"],[43,390,35,0],[43,391,35,0,"e"],[43,392,35,0],[43,394,35,0,"f"],[43,395,35,0],[43,411,35,0,"t"],[43,412,35,0],[43,416,35,0,"e"],[43,417,35,0],[43,433,35,0,"t"],[43,434,35,0],[43,441,35,0,"hasOwnProperty"],[43,455,35,0],[43,456,35,0,"call"],[43,460,35,0],[43,461,35,0,"e"],[43,462,35,0],[43,464,35,0,"t"],[43,465,35,0],[43,472,35,0,"i"],[43,473,35,0],[43,477,35,0,"o"],[43,478,35,0],[43,481,35,0,"Object"],[43,487,35,0],[43,488,35,0,"defineProperty"],[43,502,35,0],[43,507,35,0,"Object"],[43,513,35,0],[43,514,35,0,"getOwnPropertyDescriptor"],[43,538,35,0],[43,539,35,0,"e"],[43,540,35,0],[43,542,35,0,"t"],[43,543,35,0],[43,550,35,0,"i"],[43,551,35,0],[43,552,35,0,"get"],[43,555,35,0],[43,559,35,0,"i"],[43,560,35,0],[43,561,35,0,"set"],[43,564,35,0],[43,568,35,0,"o"],[43,569,35,0],[43,570,35,0,"f"],[43,571,35,0],[43,573,35,0,"t"],[43,574,35,0],[43,576,35,0,"i"],[43,577,35,0],[43,581,35,0,"f"],[43,582,35,0],[43,583,35,0,"t"],[43,584,35,0],[43,588,35,0,"e"],[43,589,35,0],[43,590,35,0,"t"],[43,591,35,0],[43,602,35,0,"f"],[43,603,35,0],[43,608,35,0,"e"],[43,609,35,0],[43,611,35,0,"t"],[43,612,35,0],[44,2,37,0,"PrivateValueStore"],[44,26,37,17],[45,2,38,0],[45,8,38,6,"isScreen"],[45,16,38,14],[45,19,38,17,"child"],[45,24,38,22],[45,28,38,26],[46,4,39,2],[46,11,39,9,"child"],[46,16,39,14],[46,17,39,15,"type"],[46,21,39,19],[46,26,39,24,"Screen"],[46,40,39,30],[47,2,40,0],[47,3,40,1],[48,2,41,0],[48,8,41,6,"isGroup"],[48,15,41,13],[48,18,41,16,"child"],[48,23,41,21],[48,27,41,25],[49,4,42,2],[49,11,42,9,"child"],[49,16,42,14],[49,17,42,15,"type"],[49,21,42,19],[49,26,42,24,"React"],[49,31,42,29],[49,32,42,30,"Fragment"],[49,40,42,38],[49,44,42,42,"child"],[49,49,42,47],[49,50,42,48,"type"],[49,54,42,52],[49,59,42,57,"Group"],[49,71,42,62],[50,2,43,0],[50,3,43,1],[51,2,44,0],[51,8,44,6,"isValidKey"],[51,18,44,16],[51,21,44,19,"key"],[51,24,44,22],[51,28,44,26,"key"],[51,31,44,29],[51,36,44,34,"undefined"],[51,45,44,43],[51,49,44,47],[51,56,44,54,"key"],[51,59,44,57],[51,64,44,62],[51,72,44,70],[51,76,44,74,"key"],[51,79,44,77],[51,84,44,82],[51,86,44,84],[53,2,46,0],[54,0,47,0],[55,0,48,0],[56,0,49,0],[57,0,50,0],[58,2,51,0],[58,8,51,6,"getRouteConfigsFromChildren"],[58,35,51,33],[58,38,51,36,"getRouteConfigsFromChildren"],[58,39,51,37,"children"],[58,47,51,45],[58,49,51,47,"groupKey"],[58,57,51,55],[58,59,51,57,"groupOptions"],[58,71,51,69],[58,73,51,71,"groupLayout"],[58,84,51,82],[58,89,51,87],[59,4,52,2],[59,10,52,8,"configs"],[59,17,52,15],[59,20,52,18,"React"],[59,25,52,23],[59,26,52,24,"Children"],[59,34,52,32],[59,35,52,33,"toArray"],[59,42,52,40],[59,43,52,41,"children"],[59,51,52,49],[59,52,52,50],[59,53,52,51,"reduce"],[59,59,52,57],[59,60,52,58],[59,61,52,59,"acc"],[59,64,52,62],[59,66,52,64,"child"],[59,71,52,69],[59,76,52,74],[60,6,53,4],[60,10,53,8],[60,23,53,21,"React"],[60,28,53,26],[60,29,53,27,"isValidElement"],[60,43,53,41],[60,44,53,42,"child"],[60,49,53,47],[60,50,53,48],[60,52,53,50],[61,8,54,6],[61,12,54,10,"isScreen"],[61,20,54,18],[61,21,54,19,"child"],[61,26,54,24],[61,27,54,25],[61,29,54,27],[62,10,55,8],[63,10,56,8],[65,10,58,8],[65,14,58,12],[65,21,58,19,"child"],[65,26,58,24],[65,27,58,25,"props"],[65,32,58,30],[65,37,58,35],[65,45,58,43],[65,49,58,47,"child"],[65,54,58,52],[65,55,58,53,"props"],[65,60,58,58],[65,65,58,63],[65,69,58,67],[65,71,58,69],[66,12,59,10],[66,18,59,16],[66,22,59,20,"Error"],[66,27,59,25],[66,28,59,26],[66,64,59,62],[66,65,59,63],[67,10,60,8],[68,10,61,8],[68,14,61,12],[68,21,61,19,"child"],[68,26,61,24],[68,27,61,25,"props"],[68,32,61,30],[68,33,61,31,"name"],[68,37,61,35],[68,42,61,40],[68,50,61,48],[68,54,61,52,"child"],[68,59,61,57],[68,60,61,58,"props"],[68,65,61,63],[68,66,61,64,"name"],[68,70,61,68],[68,75,61,73],[68,77,61,75],[68,79,61,77],[69,12,62,10],[69,18,62,16],[69,22,62,20,"Error"],[69,27,62,25],[69,28,62,26],[69,52,62,50,"JSON"],[69,56,62,54],[69,57,62,55,"stringify"],[69,66,62,64],[69,67,62,65,"child"],[69,72,62,70],[69,73,62,71,"props"],[69,78,62,76],[69,79,62,77,"name"],[69,83,62,81],[69,84,62,82],[69,134,62,132],[69,135,62,133],[70,10,63,8],[71,10,64,8],[71,14,64,12,"child"],[71,19,64,17],[71,20,64,18,"props"],[71,25,64,23],[71,26,64,24,"navigationKey"],[71,39,64,37],[71,44,64,42,"undefined"],[71,53,64,51],[71,58,64,56],[71,65,64,63,"child"],[71,70,64,68],[71,71,64,69,"props"],[71,76,64,74],[71,77,64,75,"navigationKey"],[71,90,64,88],[71,95,64,93],[71,103,64,101],[71,107,64,105,"child"],[71,112,64,110],[71,113,64,111,"props"],[71,118,64,116],[71,119,64,117,"navigationKey"],[71,132,64,130],[71,137,64,135],[71,139,64,137],[71,140,64,138],[71,142,64,140],[72,12,65,10],[72,18,65,16],[72,22,65,20,"Error"],[72,27,65,25],[72,28,65,26],[72,68,65,66,"JSON"],[72,72,65,70],[72,73,65,71,"stringify"],[72,82,65,80],[72,83,65,81,"child"],[72,88,65,86],[72,89,65,87,"props"],[72,94,65,92],[72,95,65,93,"navigationKey"],[72,108,65,106],[72,109,65,107],[72,130,65,128,"child"],[72,135,65,133],[72,136,65,134,"props"],[72,141,65,139],[72,142,65,140,"name"],[72,146,65,144],[72,196,65,194],[72,197,65,195],[73,10,66,8],[74,10,67,8,"acc"],[74,13,67,11],[74,14,67,12,"push"],[74,18,67,16],[74,19,67,17],[75,12,68,10,"keys"],[75,16,68,14],[75,18,68,16],[75,19,68,17,"groupKey"],[75,27,68,25],[75,29,68,27,"child"],[75,34,68,32],[75,35,68,33,"props"],[75,40,68,38],[75,41,68,39,"navigationKey"],[75,54,68,52],[75,55,68,53],[76,12,69,10,"options"],[76,19,69,17],[76,21,69,19,"groupOptions"],[76,33,69,31],[77,12,70,10,"layout"],[77,18,70,16],[77,20,70,18,"groupLayout"],[77,31,70,29],[78,12,71,10,"props"],[78,17,71,15],[78,19,71,17,"child"],[78,24,71,22],[78,25,71,23,"props"],[79,10,72,8],[79,11,72,9],[79,12,72,10],[80,10,73,8],[80,17,73,15,"acc"],[80,20,73,18],[81,8,74,6],[82,8,75,6],[82,12,75,10,"isGroup"],[82,19,75,17],[82,20,75,18,"child"],[82,25,75,23],[82,26,75,24],[82,28,75,26],[83,10,76,8],[83,14,76,12],[83,15,76,13,"isValidKey"],[83,25,76,23],[83,26,76,24,"child"],[83,31,76,29],[83,32,76,30,"props"],[83,37,76,35],[83,38,76,36,"navigationKey"],[83,51,76,49],[83,52,76,50],[83,54,76,52],[84,12,77,10],[84,18,77,16],[84,22,77,20,"Error"],[84,27,77,25],[84,28,77,26],[84,68,77,66,"JSON"],[84,72,77,70],[84,73,77,71,"stringify"],[84,82,77,80],[84,83,77,81,"child"],[84,88,77,86],[84,89,77,87,"props"],[84,94,77,92],[84,95,77,93,"navigationKey"],[84,108,77,106],[84,109,77,107],[84,173,77,171],[84,174,77,172],[85,10,78,8],[87,10,80,8],[88,10,81,8],[89,10,82,8,"acc"],[89,13,82,11],[89,14,82,12,"push"],[89,18,82,16],[89,19,82,17],[89,22,82,20,"getRouteConfigsFromChildren"],[89,49,82,47],[89,50,82,48,"child"],[89,55,82,53],[89,56,82,54,"props"],[89,61,82,59],[89,62,82,60,"children"],[89,70,82,68],[89,72,82,70,"child"],[89,77,82,75],[89,78,82,76,"props"],[89,83,82,81],[89,84,82,82,"navigationKey"],[89,97,82,95],[90,10,83,8],[91,10,84,8],[92,10,85,8,"child"],[92,15,85,13],[92,16,85,14,"type"],[92,20,85,18],[92,25,85,23,"Group"],[92,37,85,28],[92,40,85,31,"groupOptions"],[92,52,85,43],[92,55,85,46,"groupOptions"],[92,67,85,58],[92,71,85,62],[92,75,85,66],[92,78,85,69],[92,79,85,70],[92,82,85,73,"groupOptions"],[92,94,85,85],[92,96,85,87,"child"],[92,101,85,92],[92,102,85,93,"props"],[92,107,85,98],[92,108,85,99,"screenOptions"],[92,121,85,112],[92,122,85,113],[92,125,85,116],[92,126,85,117,"child"],[92,131,85,122],[92,132,85,123,"props"],[92,137,85,128],[92,138,85,129,"screenOptions"],[92,151,85,142],[92,152,85,143],[92,154,85,145],[92,161,85,152,"child"],[92,166,85,157],[92,167,85,158,"props"],[92,172,85,163],[92,173,85,164,"screenLayout"],[92,185,85,176],[92,190,85,181],[92,200,85,191],[92,203,85,194,"child"],[92,208,85,199],[92,209,85,200,"props"],[92,214,85,205],[92,215,85,206,"screenLayout"],[92,227,85,218],[92,230,85,221,"groupLayout"],[92,241,85,232],[92,242,85,233],[92,243,85,234],[93,10,86,8],[93,17,86,15,"acc"],[93,20,86,18],[94,8,87,6],[95,6,88,4],[96,6,89,4],[96,12,89,10],[96,16,89,14,"Error"],[96,21,89,19],[96,22,89,20],[96,122,89,120],[96,135,89,133],[96,149,89,133,"React"],[96,154,89,138],[96,155,89,139,"isValidElement"],[96,169,89,153],[96,170,89,154,"child"],[96,175,89,159],[96,176,89,160],[96,179,89,163],[96,183,89,167],[96,190,89,174,"child"],[96,195,89,179],[96,196,89,180,"type"],[96,200,89,184],[96,205,89,189],[96,213,89,197],[96,216,89,200,"child"],[96,221,89,205],[96,222,89,206,"type"],[96,226,89,210],[96,229,89,213,"child"],[96,234,89,218],[96,235,89,219,"type"],[96,239,89,223],[96,241,89,225,"name"],[96,245,89,229],[96,249,89,233,"child"],[96,254,89,238],[96,255,89,239,"props"],[96,260,89,244],[96,264,89,248],[96,268,89,252],[96,272,89,256],[96,279,89,263,"child"],[96,284,89,268],[96,285,89,269,"props"],[96,290,89,274],[96,295,89,279],[96,303,89,287],[96,307,89,291],[96,313,89,297],[96,317,89,301,"child"],[96,322,89,306],[96,323,89,307,"props"],[96,328,89,312],[96,332,89,316,"child"],[96,337,89,321],[96,338,89,322,"props"],[96,343,89,327],[96,345,89,329,"name"],[96,349,89,333],[96,352,89,336],[96,372,89,356,"child"],[96,377,89,361],[96,378,89,362,"props"],[96,383,89,367],[96,384,89,368,"name"],[96,388,89,372],[96,391,89,375],[96,394,89,378],[96,396,89,380],[96,398,89,382],[96,401,89,385],[96,408,89,392,"child"],[96,413,89,397],[96,418,89,402],[96,426,89,410],[96,429,89,413,"JSON"],[96,433,89,417],[96,434,89,418,"stringify"],[96,443,89,427],[96,444,89,428,"child"],[96,449,89,433],[96,450,89,434],[96,453,89,437],[96,457,89,441,"String"],[96,463,89,447],[96,464,89,448,"child"],[96,469,89,453],[96,470,89,454],[96,473,89,457],[96,565,89,549],[96,566,89,550],[97,4,90,2],[97,5,90,3],[97,7,90,5],[97,9,90,7],[97,10,90,8],[98,4,91,2],[98,8,91,6,"process"],[98,15,91,13],[98,16,91,14,"env"],[98,19,91,17],[98,20,91,18,"NODE_ENV"],[98,28,91,26],[98,33,91,31],[98,45,91,43],[98,47,91,45],[99,6,92,4,"configs"],[99,13,92,11],[99,14,92,12,"forEach"],[99,21,92,19],[99,22,92,20,"config"],[99,28,92,26],[99,32,92,30],[100,8,93,6],[100,14,93,12],[101,10,94,8,"name"],[101,14,94,12],[102,10,95,8,"children"],[102,18,95,16],[103,10,96,8,"component"],[103,19,96,17],[104,10,97,8,"getComponent"],[105,8,98,6],[105,9,98,7],[105,12,98,10,"config"],[105,18,98,16],[105,19,98,17,"props"],[105,24,98,22],[106,8,99,6],[106,12,99,10,"children"],[106,20,99,18],[106,24,99,22],[106,28,99,26],[106,32,99,30,"component"],[106,41,99,39],[106,46,99,44,"undefined"],[106,55,99,53],[106,59,99,57,"getComponent"],[106,71,99,69],[106,76,99,74,"undefined"],[106,85,99,83],[106,87,99,85],[107,10,100,8],[107,14,100,12,"children"],[107,22,100,20],[107,26,100,24],[107,30,100,28],[107,34,100,32,"component"],[107,43,100,41],[107,48,100,46,"undefined"],[107,57,100,55],[107,59,100,57],[108,12,101,10],[108,18,101,16],[108,22,101,20,"Error"],[108,27,101,25],[108,28,101,26],[108,89,101,87,"name"],[108,93,101,91],[108,129,101,127],[108,130,101,128],[109,10,102,8],[110,10,103,8],[110,14,103,12,"children"],[110,22,103,20],[110,26,103,24],[110,30,103,28],[110,34,103,32,"getComponent"],[110,46,103,44],[110,51,103,49,"undefined"],[110,60,103,58],[110,62,103,60],[111,12,104,10],[111,18,104,16],[111,22,104,20,"Error"],[111,27,104,25],[111,28,104,26],[111,92,104,90,"name"],[111,96,104,94],[111,132,104,130],[111,133,104,131],[112,10,105,8],[113,10,106,8],[113,14,106,12,"component"],[113,23,106,21],[113,28,106,26,"undefined"],[113,37,106,35],[113,41,106,39,"getComponent"],[113,53,106,51],[113,58,106,56,"undefined"],[113,67,106,65],[113,69,106,67],[114,12,107,10],[114,18,107,16],[114,22,107,20,"Error"],[114,27,107,25],[114,28,107,26],[114,93,107,91,"name"],[114,97,107,95],[114,133,107,131],[114,134,107,132],[115,10,108,8],[116,10,109,8],[116,14,109,12,"children"],[116,22,109,20],[116,26,109,24],[116,30,109,28],[116,34,109,32],[116,41,109,39,"children"],[116,49,109,47],[116,54,109,52],[116,64,109,62],[116,66,109,64],[117,12,110,10],[117,18,110,16],[117,22,110,20,"Error"],[117,27,110,25],[117,28,110,26],[117,88,110,86,"name"],[117,92,110,90],[117,145,110,143],[117,146,110,144],[118,10,111,8],[119,10,112,8],[119,14,112,12,"component"],[119,23,112,21],[119,28,112,26,"undefined"],[119,37,112,35],[119,41,112,39],[119,42,112,40],[119,46,112,40,"isValidElementType"],[119,73,112,58],[119,75,112,59,"component"],[119,84,112,68],[119,85,112,69],[119,87,112,71],[120,12,113,10],[120,18,113,16],[120,22,113,20,"Error"],[120,27,113,25],[120,28,113,26],[120,89,113,87,"name"],[120,93,113,91],[120,133,113,131],[120,134,113,132],[121,10,114,8],[122,10,115,8],[122,14,115,12,"getComponent"],[122,26,115,24],[122,31,115,29,"undefined"],[122,40,115,38],[122,44,115,42],[122,51,115,49,"getComponent"],[122,63,115,61],[122,68,115,66],[122,78,115,76],[122,80,115,78],[123,12,116,10],[123,18,116,16],[123,22,116,20,"Error"],[123,27,116,25],[123,28,116,26],[123,92,116,90,"name"],[123,96,116,94],[123,151,116,149],[123,152,116,150],[124,10,117,8],[125,10,118,8],[125,14,118,12],[125,21,118,19,"component"],[125,30,118,28],[125,35,118,33],[125,45,118,43],[125,47,118,45],[126,12,119,10],[126,16,119,14,"component"],[126,25,119,23],[126,26,119,24,"name"],[126,30,119,28],[126,35,119,33],[126,46,119,44],[126,48,119,46],[127,14,120,12],[128,14,121,12],[129,14,122,12],[130,14,123,12,"console"],[130,21,123,19],[130,22,123,20,"warn"],[130,26,123,24],[130,27,123,25],[130,112,123,110,"name"],[130,116,123,114],[130,395,123,393],[130,396,123,394],[131,12,124,10],[131,13,124,11],[131,19,124,17],[131,23,124,21],[131,31,124,29],[131,32,124,30,"test"],[131,36,124,34],[131,37,124,35,"component"],[131,46,124,44],[131,47,124,45,"name"],[131,51,124,49],[131,52,124,50],[131,54,124,52],[132,14,125,12,"console"],[132,21,125,19],[132,22,125,20,"warn"],[132,26,125,24],[132,27,125,25],[132,61,125,59,"component"],[132,70,125,68],[132,71,125,69,"name"],[132,75,125,73],[132,96,125,94,"name"],[132,100,125,98],[132,301,125,299],[132,302,125,300],[133,12,126,10],[134,10,127,8],[135,8,128,6],[135,9,128,7],[135,15,128,13],[136,10,129,8],[136,16,129,14],[136,20,129,18,"Error"],[136,25,129,23],[136,26,129,24],[136,108,129,106,"name"],[136,112,129,110],[136,293,129,291],[136,294,129,292],[137,8,130,6],[138,6,131,4],[138,7,131,5],[138,8,131,6],[139,4,132,2],[140,4,133,2],[140,11,133,9,"configs"],[140,18,133,16],[141,2,134,0],[141,3,134,1],[143,2,136,0],[144,0,137,0],[145,0,138,0],[146,0,139,0],[147,0,140,0],[148,0,141,0],[149,0,142,0],[150,2,143,7],[150,11,143,16,"useNavigationBuilder"],[150,31,143,36,"useNavigationBuilder"],[150,32,143,37,"createRouter"],[150,44,143,49],[150,46,143,51,"options"],[150,53,143,58],[150,55,143,60],[151,4,144,2],[151,10,144,8,"navigatorKey"],[151,22,144,20],[151,25,144,23],[151,29,144,23,"useRegisterNavigator"],[151,71,144,43],[151,73,144,44],[151,74,144,45],[152,4,145,2],[152,10,145,8,"route"],[152,15,145,13],[152,18,145,16,"React"],[152,23,145,21],[152,24,145,22,"useContext"],[152,34,145,32],[152,35,145,33,"NavigationRouteContext"],[152,81,145,55],[152,82,145,56],[153,4,146,2],[153,10,146,8],[154,8,147,4,"children"],[154,16,147,12],[155,8,148,4,"layout"],[155,14,148,10],[156,8,149,4,"screenOptions"],[156,21,149,17],[157,8,150,4,"screenLayout"],[157,20,150,16],[158,8,151,4,"screenListeners"],[158,23,151,19],[159,8,152,4,"UNSTABLE_router"],[160,6,154,2],[160,7,154,3],[160,10,154,6,"options"],[160,17,154,13],[161,6,153,7,"rest"],[161,10,153,11],[161,17,153,11,"_objectWithoutPropertiesLoose2"],[161,47,153,11],[161,48,153,11,"default"],[161,55,153,11],[161,57,154,6,"options"],[161,64,154,13],[161,66,154,13,"_excluded"],[161,75,154,13],[162,4,155,2],[162,10,155,8,"routeConfigs"],[162,22,155,20],[162,25,155,23,"getRouteConfigsFromChildren"],[162,52,155,50],[162,53,155,51,"children"],[162,61,155,59],[162,62,155,60],[163,4,156,2],[163,10,156,8,"router"],[163,16,156,14],[163,19,156,17],[163,23,156,17,"useLazyValue"],[163,49,156,29],[163,51,156,30],[163,57,156,36],[164,6,157,4],[164,10,157,8,"rest"],[164,14,157,12],[164,15,157,13,"initialRouteName"],[164,31,157,29],[164,35,157,33],[164,39,157,37],[164,43,157,41,"routeConfigs"],[164,55,157,53],[164,56,157,54,"every"],[164,61,157,59],[164,62,157,60,"config"],[164,68,157,66],[164,72,157,70,"config"],[164,78,157,76],[164,79,157,77,"props"],[164,84,157,82],[164,85,157,83,"name"],[164,89,157,87],[164,94,157,92,"rest"],[164,98,157,96],[164,99,157,97,"initialRouteName"],[164,115,157,113],[164,116,157,114],[164,118,157,116],[165,8,158,6],[165,14,158,12],[165,18,158,16,"Error"],[165,23,158,21],[165,24,158,22],[165,57,158,55,"rest"],[165,61,158,59],[165,62,158,60,"initialRouteName"],[165,78,158,76],[165,111,158,109],[165,112,158,110],[166,6,159,4],[167,6,160,4],[167,12,160,10,"original"],[167,20,160,18],[167,23,160,21,"createRouter"],[167,35,160,33],[167,36,160,34,"rest"],[167,40,160,38],[167,41,160,39],[168,6,161,4],[168,10,161,8,"UNSTABLE_router"],[168,25,161,23],[168,29,161,27],[168,33,161,31],[168,35,161,33],[169,8,162,6],[169,14,162,12,"overrides"],[169,23,162,21],[169,26,162,24,"UNSTABLE_router"],[169,41,162,39],[169,42,162,40,"original"],[169,50,162,48],[169,51,162,49],[170,8,163,6],[170,15,163,6,"Object"],[170,21,163,6],[170,22,163,6,"assign"],[170,28,163,6],[170,33,164,11,"original"],[170,41,164,19],[170,43,165,11,"overrides"],[170,52,165,20],[171,6,167,4],[172,6,168,4],[172,13,168,11,"original"],[172,21,168,19],[173,4,169,2],[173,5,169,3],[173,6,169,4],[174,4,170,2],[174,10,170,8,"screens"],[174,17,170,15],[174,20,170,18,"routeConfigs"],[174,32,170,30],[174,33,170,31,"reduce"],[174,39,170,37],[174,40,170,38],[174,41,170,39,"acc"],[174,44,170,42],[174,46,170,44,"config"],[174,52,170,50],[174,57,170,55],[175,6,171,4],[175,10,171,8,"config"],[175,16,171,14],[175,17,171,15,"props"],[175,22,171,20],[175,23,171,21,"name"],[175,27,171,25],[175,31,171,29,"acc"],[175,34,171,32],[175,36,171,34],[176,8,172,6],[176,14,172,12],[176,18,172,16,"Error"],[176,23,172,21],[176,24,172,22],[176,133,172,131,"config"],[176,139,172,137],[176,140,172,138,"props"],[176,145,172,143],[176,146,172,144,"name"],[176,150,172,148],[176,154,172,152],[176,155,172,153],[177,6,173,4],[178,6,174,4,"acc"],[178,9,174,7],[178,10,174,8,"config"],[178,16,174,14],[178,17,174,15,"props"],[178,22,174,20],[178,23,174,21,"name"],[178,27,174,25],[178,28,174,26],[178,31,174,29,"config"],[178,37,174,35],[179,6,175,4],[179,13,175,11,"acc"],[179,16,175,14],[180,4,176,2],[180,5,176,3],[180,7,176,5],[180,8,176,6],[180,9,176,7],[180,10,176,8],[181,4,177,2],[181,10,177,8,"routeNames"],[181,20,177,18],[181,23,177,21,"routeConfigs"],[181,35,177,33],[181,36,177,34,"map"],[181,39,177,37],[181,40,177,38,"config"],[181,46,177,44],[181,50,177,48,"config"],[181,56,177,54],[181,57,177,55,"props"],[181,62,177,60],[181,63,177,61,"name"],[181,67,177,65],[181,68,177,66],[182,4,178,2],[182,10,178,8,"routeKeyList"],[182,22,178,20],[182,25,178,23,"routeNames"],[182,35,178,33],[182,36,178,34,"reduce"],[182,42,178,40],[182,43,178,41],[182,44,178,42,"acc"],[182,47,178,45],[182,49,178,47,"curr"],[182,53,178,51],[182,58,178,56],[183,6,179,4,"acc"],[183,9,179,7],[183,10,179,8,"curr"],[183,14,179,12],[183,15,179,13],[183,18,179,16,"screens"],[183,25,179,23],[183,26,179,24,"curr"],[183,30,179,28],[183,31,179,29],[183,32,179,30,"keys"],[183,36,179,34],[183,37,179,35,"map"],[183,40,179,38],[183,41,179,39,"key"],[183,44,179,42],[183,48,179,46,"key"],[183,51,179,49],[183,55,179,53],[183,57,179,55],[183,58,179,56],[183,59,179,57,"join"],[183,63,179,61],[183,64,179,62],[183,67,179,65],[183,68,179,66],[184,6,180,4],[184,13,180,11,"acc"],[184,16,180,14],[185,4,181,2],[185,5,181,3],[185,7,181,5],[185,8,181,6],[185,9,181,7],[185,10,181,8],[186,4,182,2],[186,10,182,8,"routeParamList"],[186,24,182,22],[186,27,182,25,"routeNames"],[186,37,182,35],[186,38,182,36,"reduce"],[186,44,182,42],[186,45,182,43],[186,46,182,44,"acc"],[186,49,182,47],[186,51,182,49,"curr"],[186,55,182,53],[186,60,182,58],[187,6,183,4],[187,12,183,10],[188,8,184,6,"initialParams"],[189,6,185,4],[189,7,185,5],[189,10,185,8,"screens"],[189,17,185,15],[189,18,185,16,"curr"],[189,22,185,20],[189,23,185,21],[189,24,185,22,"props"],[189,29,185,27],[190,6,186,4,"acc"],[190,9,186,7],[190,10,186,8,"curr"],[190,14,186,12],[190,15,186,13],[190,18,186,16,"initialParams"],[190,31,186,29],[191,6,187,4],[191,13,187,11,"acc"],[191,16,187,14],[192,4,188,2],[192,5,188,3],[192,7,188,5],[192,8,188,6],[192,9,188,7],[192,10,188,8],[193,4,189,2],[193,10,189,8,"routeGetIdList"],[193,24,189,22],[193,27,189,25,"routeNames"],[193,37,189,35],[193,38,189,36,"reduce"],[193,44,189,42],[193,45,189,43],[193,46,189,44,"acc"],[193,49,189,47],[193,51,189,49,"curr"],[193,55,189,53],[193,60,189,58,"Object"],[193,66,189,64],[193,67,189,65,"assign"],[193,73,189,71],[193,74,189,72,"acc"],[193,77,189,75],[193,79,189,77],[194,6,190,4],[194,7,190,5,"curr"],[194,11,190,9],[194,14,190,12,"screens"],[194,21,190,19],[194,22,190,20,"curr"],[194,26,190,24],[194,27,190,25],[194,28,190,26,"props"],[194,33,190,31],[194,34,190,32,"getId"],[195,4,191,2],[195,5,191,3],[195,6,191,4],[195,8,191,6],[195,9,191,7],[195,10,191,8],[195,11,191,9],[196,4,192,2],[196,8,192,6],[196,9,192,7,"routeNames"],[196,19,192,17],[196,20,192,18,"length"],[196,26,192,24],[196,28,192,26],[197,6,193,4],[197,12,193,10],[197,16,193,14,"Error"],[197,21,193,19],[197,22,193,20],[197,114,193,112],[197,115,193,113],[198,4,194,2],[199,4,195,2],[199,10,195,8,"isStateValid"],[199,22,195,20],[199,25,195,23,"React"],[199,30,195,28],[199,31,195,29,"useCallback"],[199,42,195,40],[199,43,195,41,"state"],[199,48,195,46],[199,52,195,50,"state"],[199,57,195,55],[199,58,195,56,"type"],[199,62,195,60],[199,67,195,65,"undefined"],[199,76,195,74],[199,80,195,78,"state"],[199,85,195,83],[199,86,195,84,"type"],[199,90,195,88],[199,95,195,93,"router"],[199,101,195,99],[199,102,195,100,"type"],[199,106,195,104],[199,108,195,106],[199,109,195,107,"router"],[199,115,195,113],[199,116,195,114,"type"],[199,120,195,118],[199,121,195,119],[199,122,195,120],[200,4,196,2],[200,10,196,8,"isStateInitialized"],[200,28,196,26],[200,31,196,29,"React"],[200,36,196,34],[200,37,196,35,"useCallback"],[200,48,196,46],[200,49,196,47,"state"],[200,54,196,52],[200,58,196,56,"state"],[200,63,196,61],[200,68,196,66,"undefined"],[200,77,196,75],[200,81,196,79,"state"],[200,86,196,84],[200,87,196,85,"stale"],[200,92,196,90],[200,97,196,95],[200,102,196,100],[200,106,196,104,"isStateValid"],[200,118,196,116],[200,119,196,117,"state"],[200,124,196,122],[200,125,196,123],[200,127,196,125],[200,128,196,126,"isStateValid"],[200,140,196,138],[200,141,196,139],[200,142,196,140],[201,4,197,2],[201,10,197,8],[202,6,198,4,"state"],[202,11,198,9],[202,13,198,11,"currentState"],[202,25,198,23],[203,6,199,4,"getState"],[203,14,199,12],[203,16,199,14,"getCurrentState"],[203,31,199,29],[204,6,200,4,"setState"],[204,14,200,12],[204,16,200,14,"setCurrentState"],[204,31,200,29],[205,6,201,4,"setKey"],[205,12,201,10],[206,6,202,4,"getKey"],[206,12,202,10],[207,6,203,4,"getIsInitial"],[208,4,204,2],[208,5,204,3],[208,8,204,6,"React"],[208,13,204,11],[208,14,204,12,"useContext"],[208,24,204,22],[208,25,204,23,"NavigationStateContext"],[208,71,204,45],[208,72,204,46],[209,4,205,2],[209,10,205,8,"stateCleanedUp"],[209,24,205,22],[209,27,205,25,"React"],[209,32,205,30],[209,33,205,31,"useRef"],[209,39,205,37],[209,40,205,38],[209,45,205,43],[209,46,205,44],[210,4,206,2],[210,10,206,8,"setState"],[210,18,206,16],[210,21,206,19],[210,25,206,19,"useLatestCallback"],[210,51,206,36],[210,53,206,37,"state"],[210,58,206,42],[210,62,206,46],[211,6,207,4],[211,10,207,8,"stateCleanedUp"],[211,24,207,22],[211,25,207,23,"current"],[211,32,207,30],[211,34,207,32],[212,8,208,6],[213,8,209,6],[214,8,210,6],[215,8,211,6],[216,6,212,4],[217,6,213,4,"setCurrentState"],[217,21,213,19],[217,22,213,20,"state"],[217,27,213,25],[217,28,213,26],[218,4,214,2],[218,5,214,3],[218,6,214,4],[219,4,215,2],[219,10,215,8],[219,11,215,9,"initializedState"],[219,27,215,25],[219,29,215,27,"isFirstStateInitialization"],[219,55,215,53],[219,56,215,54],[219,59,215,57,"React"],[219,64,215,62],[219,65,215,63,"useMemo"],[219,72,215,70],[219,73,215,71],[219,79,215,77],[220,6,216,4],[220,12,216,10,"initialRouteParamList"],[220,33,216,31],[220,36,216,34,"routeNames"],[220,46,216,44],[220,47,216,45,"reduce"],[220,53,216,51],[220,54,216,52],[220,55,216,53,"acc"],[220,58,216,56],[220,60,216,58,"curr"],[220,64,216,62],[220,69,216,67],[221,8,217,6],[221,14,217,12],[222,10,218,8,"initialParams"],[223,8,219,6],[223,9,219,7],[223,12,219,10,"screens"],[223,19,219,17],[223,20,219,18,"curr"],[223,24,219,22],[223,25,219,23],[223,26,219,24,"props"],[223,31,219,29],[224,8,220,6],[224,14,220,12,"initialParamsFromParams"],[224,37,220,35],[224,40,220,38,"route"],[224,45,220,43],[224,47,220,45,"params"],[224,53,220,51],[224,55,220,53,"state"],[224,60,220,58],[224,64,220,62],[224,68,220,66],[224,72,220,70,"route"],[224,77,220,75],[224,79,220,77,"params"],[224,85,220,83],[224,87,220,85,"initial"],[224,94,220,92],[224,99,220,97],[224,104,220,102],[224,108,220,106,"route"],[224,113,220,111],[224,115,220,113,"params"],[224,121,220,119],[224,123,220,121,"screen"],[224,129,220,127],[224,134,220,132,"curr"],[224,138,220,136],[224,141,220,139,"route"],[224,146,220,144],[224,147,220,145,"params"],[224,153,220,151],[224,154,220,152,"params"],[224,160,220,158],[224,163,220,161,"undefined"],[224,172,220,170],[225,8,221,6,"acc"],[225,11,221,9],[225,12,221,10,"curr"],[225,16,221,14],[225,17,221,15],[225,20,221,18,"initialParams"],[225,33,221,31],[225,38,221,36,"undefined"],[225,47,221,45],[225,51,221,49,"initialParamsFromParams"],[225,74,221,72],[225,79,221,77,"undefined"],[225,88,221,86],[225,91,221,86,"Object"],[225,97,221,86],[225,98,221,86,"assign"],[225,104,221,86],[225,109,222,11,"initialParams"],[225,122,222,24],[225,124,223,11,"initialParamsFromParams"],[225,147,223,34],[225,151,224,10,"undefined"],[225,160,224,19],[226,8,225,6],[226,15,225,13,"acc"],[226,18,225,16],[227,6,226,4],[227,7,226,5],[227,9,226,7],[227,10,226,8],[227,11,226,9],[227,12,226,10],[229,6,228,4],[230,6,229,4],[231,6,230,4],[232,6,231,4],[233,6,232,4],[233,10,232,8],[233,11,232,9,"currentState"],[233,23,232,21],[233,28,232,26,"undefined"],[233,37,232,35],[233,41,232,39],[233,42,232,40,"isStateValid"],[233,54,232,52],[233,55,232,53,"currentState"],[233,67,232,65],[233,68,232,66],[233,73,232,71,"route"],[233,78,232,76],[233,80,232,78,"params"],[233,86,232,84],[233,88,232,86,"state"],[233,93,232,91],[233,97,232,95],[233,101,232,99],[233,105,232,103],[233,107,232,105],[233,114,232,112,"route"],[233,119,232,117],[233,121,232,119,"params"],[233,127,232,125],[233,129,232,127,"screen"],[233,135,232,133],[233,140,232,138],[233,148,232,146],[233,152,232,150,"route"],[233,157,232,155],[233,159,232,157,"params"],[233,165,232,163],[233,167,232,165,"initial"],[233,174,232,172],[233,179,232,177],[233,184,232,182],[233,185,232,183],[233,187,232,185],[234,8,233,6],[234,15,233,13],[234,16,233,14,"router"],[234,22,233,20],[234,23,233,21,"getInitialState"],[234,38,233,36],[234,39,233,37],[235,10,234,8,"routeNames"],[235,20,234,18],[236,10,235,8,"routeParamList"],[236,24,235,22],[236,26,235,24,"initialRouteParamList"],[236,47,235,45],[237,10,236,8,"routeGetIdList"],[238,8,237,6],[238,9,237,7],[238,10,237,8],[238,12,237,10],[238,16,237,14],[238,17,237,15],[239,6,238,4],[239,7,238,5],[239,13,238,11],[240,8,239,6],[240,12,239,10,"stateFromParams"],[240,27,239,25],[241,8,240,6],[241,12,240,10,"route"],[241,17,240,15],[241,19,240,17,"params"],[241,25,240,23],[241,27,240,25,"state"],[241,32,240,30],[241,36,240,34],[241,40,240,38],[241,42,240,40],[242,10,241,8,"stateFromParams"],[242,25,241,23],[242,28,241,26,"route"],[242,33,241,31],[242,34,241,32,"params"],[242,40,241,38],[242,41,241,39,"state"],[242,46,241,44],[243,8,242,6],[243,9,242,7],[243,15,242,13],[243,19,242,17],[243,26,242,24,"route"],[243,31,242,29],[243,33,242,31,"params"],[243,39,242,37],[243,41,242,39,"screen"],[243,47,242,45],[243,52,242,50],[243,60,242,58],[243,64,242,62,"route"],[243,69,242,67],[243,71,242,69,"params"],[243,77,242,75],[243,79,242,77,"initial"],[243,86,242,84],[243,91,242,89],[243,96,242,94],[243,98,242,96],[244,10,243,8,"stateFromParams"],[244,25,243,23],[244,28,243,26],[245,12,244,10,"index"],[245,17,244,15],[245,19,244,17],[245,20,244,18],[246,12,245,10,"routes"],[246,18,245,16],[246,20,245,18],[246,21,245,19],[247,14,246,12,"name"],[247,18,246,16],[247,20,246,18,"route"],[247,25,246,23],[247,26,246,24,"params"],[247,32,246,30],[247,33,246,31,"screen"],[247,39,246,37],[248,14,247,12,"params"],[248,20,247,18],[248,22,247,20,"route"],[248,27,247,25],[248,28,247,26,"params"],[248,34,247,32],[248,35,247,33,"params"],[248,41,247,39],[249,14,248,12,"path"],[249,18,248,16],[249,20,248,18,"route"],[249,25,248,23],[249,26,248,24,"params"],[249,32,248,30],[249,33,248,31,"path"],[250,12,249,10],[250,13,249,11],[251,10,250,8],[251,11,250,9],[252,8,251,6],[253,8,252,6],[253,15,252,13],[253,16,252,14,"router"],[253,22,252,20],[253,23,252,21,"getRehydratedState"],[253,41,252,39],[253,42,252,40,"stateFromParams"],[253,57,252,55],[253,61,252,59,"currentState"],[253,73,252,71],[253,75,252,73],[254,10,253,8,"routeNames"],[254,20,253,18],[255,10,254,8,"routeParamList"],[255,24,254,22],[255,26,254,24,"initialRouteParamList"],[255,47,254,45],[256,10,255,8,"routeGetIdList"],[257,8,256,6],[257,9,256,7],[257,10,256,8],[257,12,256,10],[257,17,256,15],[257,18,256,16],[258,6,257,4],[259,6,258,4],[260,6,259,4],[261,6,260,4],[262,6,261,4],[263,6,262,4],[264,6,263,4],[265,4,264,2],[265,5,264,3],[265,7,264,5],[265,8,264,6,"currentState"],[265,20,264,18],[265,22,264,20,"router"],[265,28,264,26],[265,30,264,28,"isStateValid"],[265,42,264,40],[265,43,264,41],[265,44,264,42],[266,4,265,2],[266,10,265,8,"previousRouteKeyListRef"],[266,33,265,31],[266,36,265,34,"React"],[266,41,265,39],[266,42,265,40,"useRef"],[266,48,265,46],[266,49,265,47,"routeKeyList"],[266,61,265,59],[266,62,265,60],[267,4,266,2,"React"],[267,9,266,7],[267,10,266,8,"useEffect"],[267,19,266,17],[267,20,266,18],[267,26,266,24],[268,6,267,4,"previousRouteKeyListRef"],[268,29,267,27],[268,30,267,28,"current"],[268,37,267,35],[268,40,267,38,"routeKeyList"],[268,52,267,50],[269,4,268,2],[269,5,268,3],[269,6,268,4],[270,4,269,2],[270,10,269,8,"previousRouteKeyList"],[270,30,269,28],[270,33,269,31,"previousRouteKeyListRef"],[270,56,269,54],[270,57,269,55,"current"],[270,64,269,62],[271,4,270,2],[271,8,270,6,"state"],[271,13,270,11],[272,4,271,2],[273,4,272,2],[274,4,273,2],[275,4,274,2,"isStateInitialized"],[275,22,274,20],[275,23,274,21,"currentState"],[275,35,274,33],[275,36,274,34],[275,39,274,37,"currentState"],[275,51,274,49],[275,54,274,52,"initializedState"],[275,70,274,68],[276,4,275,2],[276,8,275,6,"nextState"],[276,17,275,15],[276,20,275,18,"state"],[276,25,275,23],[277,4,276,2],[277,8,276,6],[277,9,276,7],[277,13,276,7,"isArrayEqual"],[277,39,276,19],[277,41,276,20,"state"],[277,46,276,25],[277,47,276,26,"routeNames"],[277,57,276,36],[277,59,276,38,"routeNames"],[277,69,276,48],[277,70,276,49],[277,74,276,53],[277,75,276,54],[277,79,276,54,"isRecordEqual"],[277,107,276,67],[277,109,276,68,"routeKeyList"],[277,121,276,80],[277,123,276,82,"previousRouteKeyList"],[277,143,276,102],[277,144,276,103],[277,146,276,105],[278,6,277,4],[279,6,278,4,"nextState"],[279,15,278,13],[279,18,278,16,"router"],[279,24,278,22],[279,25,278,23,"getStateForRouteNamesChange"],[279,52,278,50],[279,53,278,51,"state"],[279,58,278,56],[279,60,278,58],[280,8,279,6,"routeNames"],[280,18,279,16],[281,8,280,6,"routeParamList"],[281,22,280,20],[282,8,281,6,"routeGetIdList"],[282,22,281,20],[283,8,282,6,"routeKeyChanges"],[283,23,282,21],[283,25,282,23,"Object"],[283,31,282,29],[283,32,282,30,"keys"],[283,36,282,34],[283,37,282,35,"routeKeyList"],[283,49,282,47],[283,50,282,48],[283,51,282,49,"filter"],[283,57,282,55],[283,58,282,56,"name"],[283,62,282,60],[283,66,282,64,"name"],[283,70,282,68],[283,74,282,72,"previousRouteKeyList"],[283,94,282,92],[283,98,282,96,"routeKeyList"],[283,110,282,108],[283,111,282,109,"name"],[283,115,282,113],[283,116,282,114],[283,121,282,119,"previousRouteKeyList"],[283,141,282,139],[283,142,282,140,"name"],[283,146,282,144],[283,147,282,145],[284,6,283,4],[284,7,283,5],[284,8,283,6],[285,4,284,2],[286,4,285,2],[286,10,285,8,"previousNestedParamsRef"],[286,33,285,31],[286,36,285,34,"React"],[286,41,285,39],[286,42,285,40,"useRef"],[286,48,285,46],[286,49,285,47,"route"],[286,54,285,52],[286,56,285,54,"params"],[286,62,285,60],[286,63,285,61],[287,4,286,2,"React"],[287,9,286,7],[287,10,286,8,"useEffect"],[287,19,286,17],[287,20,286,18],[287,26,286,24],[288,6,287,4,"previousNestedParamsRef"],[288,29,287,27],[288,30,287,28,"current"],[288,37,287,35],[288,40,287,38,"route"],[288,45,287,43],[288,47,287,45,"params"],[288,53,287,51],[289,4,288,2],[289,5,288,3],[289,7,288,5],[289,8,288,6,"route"],[289,13,288,11],[289,15,288,13,"params"],[289,21,288,19],[289,22,288,20],[289,23,288,21],[290,4,289,2],[290,8,289,6,"route"],[290,13,289,11],[290,15,289,13,"params"],[290,21,289,19],[290,23,289,21],[291,6,290,4],[291,12,290,10,"previousParams"],[291,26,290,24],[291,29,290,27,"previousNestedParamsRef"],[291,52,290,50],[291,53,290,51,"current"],[291,60,290,58],[292,6,291,4],[292,10,291,8,"action"],[292,16,291,14],[293,6,292,4],[293,10,292,8],[293,17,292,15,"route"],[293,22,292,20],[293,23,292,21,"params"],[293,29,292,27],[293,30,292,28,"state"],[293,35,292,33],[293,40,292,38],[293,48,292,46],[293,52,292,50,"route"],[293,57,292,55],[293,58,292,56,"params"],[293,64,292,62],[293,65,292,63,"state"],[293,70,292,68],[293,74,292,72],[293,78,292,76],[293,82,292,80,"route"],[293,87,292,85],[293,88,292,86,"params"],[293,94,292,92],[293,99,292,97,"previousParams"],[293,113,292,111],[293,115,292,113],[294,8,293,6],[295,8,294,6,"action"],[295,14,294,12],[295,17,294,15,"CommonActions"],[295,39,294,28],[295,40,294,29,"reset"],[295,45,294,34],[295,46,294,35,"route"],[295,51,294,40],[295,52,294,41,"params"],[295,58,294,47],[295,59,294,48,"state"],[295,64,294,53],[295,65,294,54],[296,6,295,4],[296,7,295,5],[296,13,295,11],[296,17,295,15],[296,24,295,22,"route"],[296,29,295,27],[296,30,295,28,"params"],[296,36,295,34],[296,37,295,35,"screen"],[296,43,295,41],[296,48,295,46],[296,56,295,54],[296,61,295,59,"route"],[296,66,295,64],[296,67,295,65,"params"],[296,73,295,71],[296,74,295,72,"initial"],[296,81,295,79],[296,86,295,84],[296,91,295,89],[296,95,295,93,"isFirstStateInitialization"],[296,121,295,119],[296,125,295,123,"route"],[296,130,295,128],[296,131,295,129,"params"],[296,137,295,135],[296,142,295,140,"previousParams"],[296,156,295,154],[296,157,295,155],[296,159,295,157],[297,8,296,6],[298,8,297,6,"action"],[298,14,297,12],[298,17,297,15,"CommonActions"],[298,39,297,28],[298,40,297,29,"navigate"],[298,48,297,37],[298,49,297,38],[299,10,298,8,"name"],[299,14,298,12],[299,16,298,14,"route"],[299,21,298,19],[299,22,298,20,"params"],[299,28,298,26],[299,29,298,27,"screen"],[299,35,298,33],[300,10,299,8,"params"],[300,16,299,14],[300,18,299,16,"route"],[300,23,299,21],[300,24,299,22,"params"],[300,30,299,28],[300,31,299,29,"params"],[300,37,299,35],[301,10,300,8,"path"],[301,14,300,12],[301,16,300,14,"route"],[301,21,300,19],[301,22,300,20,"params"],[301,28,300,26],[301,29,300,27,"path"],[301,33,300,31],[302,10,301,8,"pop"],[302,13,301,11],[302,15,301,13,"route"],[302,20,301,18],[302,21,301,19,"params"],[302,27,301,25],[302,28,301,26,"pop"],[303,8,302,6],[303,9,302,7],[303,10,302,8],[304,6,303,4],[306,6,305,4],[307,6,306,4],[307,12,306,10,"updatedState"],[307,24,306,22],[307,27,306,25,"action"],[307,33,306,31],[307,36,306,34,"router"],[307,42,306,40],[307,43,306,41,"getStateForAction"],[307,60,306,58],[307,61,306,59,"nextState"],[307,70,306,68],[307,72,306,70,"action"],[307,78,306,76],[307,80,306,78],[308,8,307,6,"routeNames"],[308,18,307,16],[309,8,308,6,"routeParamList"],[309,22,308,20],[310,8,309,6,"routeGetIdList"],[311,6,310,4],[311,7,310,5],[311,8,310,6],[311,11,310,9],[311,15,310,13],[312,6,311,4,"nextState"],[312,15,311,13],[312,18,311,16,"updatedState"],[312,30,311,28],[312,35,311,33],[312,39,311,37],[312,42,311,40,"router"],[312,48,311,46],[312,49,311,47,"getRehydratedState"],[312,67,311,65],[312,68,311,66,"updatedState"],[312,80,311,78],[312,82,311,80],[313,8,312,6,"routeNames"],[313,18,312,16],[314,8,313,6,"routeParamList"],[314,22,313,20],[315,8,314,6,"routeGetIdList"],[316,6,315,4],[316,7,315,5],[316,8,315,6],[316,11,315,9,"nextState"],[316,20,315,18],[317,4,316,2],[318,4,317,2],[318,10,317,8,"shouldUpdate"],[318,22,317,20],[318,25,317,23,"state"],[318,30,317,28],[318,35,317,33,"nextState"],[318,44,317,42],[319,4,318,2],[319,8,318,2,"useScheduleUpdate"],[319,44,318,19],[319,46,318,20],[319,52,318,26],[320,6,319,4],[320,10,319,8,"shouldUpdate"],[320,22,319,20],[320,24,319,22],[321,8,320,6],[322,8,321,6,"setState"],[322,16,321,14],[322,17,321,15,"nextState"],[322,26,321,24],[322,27,321,25],[323,6,322,4],[324,4,323,2],[324,5,323,3],[324,6,323,4],[326,4,325,2],[327,4,326,2],[328,4,327,2],[329,4,328,2,"state"],[329,9,328,7],[329,12,328,10,"nextState"],[329,21,328,19],[330,4,329,2,"React"],[330,9,329,7],[330,10,329,8,"useEffect"],[330,19,329,17],[330,20,329,18],[330,26,329,24],[331,6,330,4],[332,6,331,4],[333,6,332,4,"stateCleanedUp"],[333,20,332,18],[333,21,332,19,"current"],[333,28,332,26],[333,31,332,29],[333,36,332,34],[334,6,333,4,"setKey"],[334,12,333,10],[334,13,333,11,"navigatorKey"],[334,25,333,23],[334,26,333,24],[335,6,334,4],[335,10,334,8],[335,11,334,9,"getIsInitial"],[335,23,334,21],[335,24,334,22],[335,25,334,23],[335,27,334,25],[336,8,335,6],[337,8,336,6],[338,8,337,6],[339,8,338,6,"setState"],[339,16,338,14],[339,17,338,15,"nextState"],[339,26,338,24],[339,27,338,25],[340,6,339,4],[341,6,340,4],[341,13,340,11],[341,19,340,17],[342,8,341,6],[343,8,342,6],[343,12,342,10,"getCurrentState"],[343,27,342,25],[343,28,342,26],[343,29,342,27],[343,34,342,32,"undefined"],[343,43,342,41],[343,47,342,45,"getKey"],[343,53,342,51],[343,54,342,52],[343,55,342,53],[343,60,342,58,"navigatorKey"],[343,72,342,70],[343,74,342,72],[344,10,343,8,"setCurrentState"],[344,25,343,23],[344,26,343,24,"undefined"],[344,35,343,33],[344,36,343,34],[345,10,344,8,"stateCleanedUp"],[345,24,344,22],[345,25,344,23,"current"],[345,32,344,30],[345,35,344,33],[345,39,344,37],[346,8,345,6],[347,6,346,4],[347,7,346,5],[348,6,347,4],[349,4,348,2],[349,5,348,3],[349,7,348,5],[349,9,348,7],[349,10,348,8],[351,4,350,2],[352,4,351,2],[353,4,352,2],[354,4,353,2],[355,4,354,2],[356,4,355,2],[356,10,355,8,"stateRef"],[356,18,355,16],[356,21,355,19,"React"],[356,26,355,24],[356,27,355,25,"useRef"],[356,33,355,31],[356,34,355,32,"state"],[356,39,355,37],[356,40,355,38],[357,4,356,2,"stateRef"],[357,12,356,10],[357,13,356,11,"current"],[357,20,356,18],[357,23,356,21,"state"],[357,28,356,26],[358,4,357,2],[358,8,357,2,"useIsomorphicLayoutEffect"],[358,60,357,27],[358,62,357,28],[358,68,357,34],[359,6,358,4,"stateRef"],[359,14,358,12],[359,15,358,13,"current"],[359,22,358,20],[359,25,358,23],[359,29,358,27],[360,4,359,2],[360,5,359,3],[360,6,359,4],[361,4,360,2],[361,10,360,8,"getState"],[361,18,360,16],[361,21,360,19],[361,25,360,19,"useLatestCallback"],[361,51,360,36],[361,53,360,37],[361,59,360,43],[362,6,361,4],[362,12,361,10,"currentState"],[362,24,361,22],[362,27,361,25,"getCurrentState"],[362,42,361,40],[362,43,361,41],[362,44,361,42],[363,6,362,4],[363,13,362,11],[363,17,362,11,"deepFreeze"],[363,39,362,21],[363,41,362,22,"isStateInitialized"],[363,59,362,40],[363,60,362,41,"currentState"],[363,72,362,53],[363,73,362,54],[363,76,362,57,"currentState"],[363,88,362,69],[363,91,362,72,"initializedState"],[363,107,362,88],[363,108,362,89],[364,4,363,2],[364,5,363,3],[364,6,363,4],[365,4,364,2],[365,10,364,8,"emitter"],[365,17,364,15],[365,20,364,18],[365,24,364,18,"useEventEmitter"],[365,56,364,33],[365,58,364,34,"e"],[365,59,364,35],[365,63,364,39],[366,6,365,4],[366,12,365,10,"routeNames"],[366,22,365,20],[366,25,365,23],[366,27,365,25],[367,6,366,4],[367,10,366,8,"route"],[367,15,366,13],[368,6,367,4],[368,10,367,8,"e"],[368,11,367,9],[368,12,367,10,"target"],[368,18,367,16],[368,20,367,18],[369,8,368,6,"route"],[369,13,368,11],[369,16,368,14,"state"],[369,21,368,19],[369,22,368,20,"routes"],[369,28,368,26],[369,29,368,27,"find"],[369,33,368,31],[369,34,368,32,"route"],[369,39,368,37],[369,43,368,41,"route"],[369,48,368,46],[369,49,368,47,"key"],[369,52,368,50],[369,57,368,55,"e"],[369,58,368,56],[369,59,368,57,"target"],[369,65,368,63],[369,66,368,64],[370,8,369,6],[370,12,369,10,"route"],[370,17,369,15],[370,19,369,17,"name"],[370,23,369,21],[370,25,369,23],[371,10,370,8,"routeNames"],[371,20,370,18],[371,21,370,19,"push"],[371,25,370,23],[371,26,370,24,"route"],[371,31,370,29],[371,32,370,30,"name"],[371,36,370,34],[371,37,370,35],[372,8,371,6],[373,6,372,4],[373,7,372,5],[373,13,372,11],[374,8,373,6,"route"],[374,13,373,11],[374,16,373,14,"state"],[374,21,373,19],[374,22,373,20,"routes"],[374,28,373,26],[374,29,373,27,"state"],[374,34,373,32],[374,35,373,33,"index"],[374,40,373,38],[374,41,373,39],[375,8,374,6,"routeNames"],[375,18,374,16],[375,19,374,17,"push"],[375,23,374,21],[375,24,374,22],[375,27,374,25,"Object"],[375,33,374,31],[375,34,374,32,"keys"],[375,38,374,36],[375,39,374,37,"screens"],[375,46,374,44],[375,47,374,45],[375,48,374,46,"filter"],[375,54,374,52],[375,55,374,53,"name"],[375,59,374,57],[375,63,374,61,"route"],[375,68,374,66],[375,70,374,68,"name"],[375,74,374,72],[375,79,374,77,"name"],[375,83,374,81],[375,84,374,82],[375,85,374,83],[376,6,375,4],[377,6,376,4],[377,10,376,8,"route"],[377,15,376,13],[377,19,376,17],[377,23,376,21],[377,25,376,23],[378,8,377,6],[379,6,378,4],[380,6,379,4],[380,12,379,10,"navigation"],[380,22,379,20],[380,25,379,23,"descriptors"],[380,36,379,34],[380,37,379,35,"route"],[380,42,379,40],[380,43,379,41,"key"],[380,46,379,44],[380,47,379,45],[380,48,379,46,"navigation"],[380,58,379,56],[381,6,380,4],[381,12,380,10,"listeners"],[381,21,380,19],[381,24,380,22],[381,26,380,24],[381,27,380,25,"concat"],[381,33,380,31],[382,6,381,4],[383,6,382,4],[383,9,382,7],[383,10,382,8,"screenListeners"],[383,25,382,23],[383,27,382,25],[383,30,382,28,"routeNames"],[383,40,382,38],[383,41,382,39,"map"],[383,44,382,42],[383,45,382,43,"name"],[383,49,382,47],[383,53,382,51],[384,8,383,6],[384,14,383,12],[385,10,384,8,"listeners"],[386,8,385,6],[386,9,385,7],[386,12,385,10,"screens"],[386,19,385,17],[386,20,385,18,"name"],[386,24,385,22],[386,25,385,23],[386,26,385,24,"props"],[386,31,385,29],[387,8,386,6],[387,15,386,13,"listeners"],[387,24,386,22],[388,6,387,4],[388,7,387,5],[388,8,387,6],[388,9,387,7],[388,10,387,8,"map"],[388,13,387,11],[388,14,387,12,"listeners"],[388,23,387,21],[388,27,387,25],[389,8,388,6],[389,14,388,12,"map"],[389,17,388,15],[389,20,388,18],[389,27,388,25,"listeners"],[389,36,388,34],[389,41,388,39],[389,51,388,49],[389,54,388,52,"listeners"],[389,63,388,61],[389,64,388,62],[390,10,389,8,"route"],[390,15,389,13],[390,17,389,15,"route"],[390,22,389,20],[391,10,390,8,"navigation"],[392,8,391,6],[392,9,391,7],[392,10,391,8],[392,13,391,11,"listeners"],[392,22,391,20],[393,8,392,6],[393,15,392,13,"map"],[393,18,392,16],[393,21,392,19,"Object"],[393,27,392,25],[393,28,392,26,"keys"],[393,32,392,30],[393,33,392,31,"map"],[393,36,392,34],[393,37,392,35],[393,38,392,36,"filter"],[393,44,392,42],[393,45,392,43,"type"],[393,49,392,47],[393,53,392,51,"type"],[393,57,392,55],[393,62,392,60,"e"],[393,63,392,61],[393,64,392,62,"type"],[393,68,392,66],[393,69,392,67],[393,70,392,68,"map"],[393,73,392,71],[393,74,392,72,"type"],[393,78,392,76],[393,82,392,80,"map"],[393,85,392,83],[393,88,392,86,"type"],[393,92,392,90],[393,93,392,91],[393,94,392,92],[393,97,392,95,"undefined"],[393,106,392,104],[394,6,393,4],[394,7,393,5],[394,8,393,6],[395,6,394,4],[396,6,395,4],[397,6,395,4],[397,7,396,5,"filter"],[397,13,396,11],[397,14,396,12],[397,15,396,13,"cb"],[397,17,396,15],[397,19,396,17,"i"],[397,20,396,18],[397,22,396,20,"self"],[397,26,396,24],[397,31,396,29,"cb"],[397,33,396,31],[397,37,396,35,"self"],[397,41,396,39],[397,42,396,40,"lastIndexOf"],[397,53,396,51],[397,54,396,52,"cb"],[397,56,396,54],[397,57,396,55],[397,62,396,60,"i"],[397,63,396,61],[397,64,396,62],[398,6,397,4,"listeners"],[398,15,397,13],[398,16,397,14,"forEach"],[398,23,397,21],[398,24,397,22,"listener"],[398,32,397,30],[398,36,397,34,"listener"],[398,44,397,42],[398,47,397,45,"e"],[398,48,397,46],[398,49,397,47],[398,50,397,48],[399,4,398,2],[399,5,398,3],[399,6,398,4],[400,4,399,2],[400,8,399,2,"useFocusEvents"],[400,38,399,16],[400,40,399,17],[401,6,400,4,"state"],[401,11,400,9],[402,6,401,4,"emitter"],[403,4,402,2],[403,5,402,3],[403,6,402,4],[404,4,403,2,"React"],[404,9,403,7],[404,10,403,8,"useEffect"],[404,19,403,17],[404,20,403,18],[404,26,403,24],[405,6,404,4,"emitter"],[405,13,404,11],[405,14,404,12,"emit"],[405,18,404,16],[405,19,404,17],[406,8,405,6,"type"],[406,12,405,10],[406,14,405,12],[406,21,405,19],[407,8,406,6,"data"],[407,12,406,10],[407,14,406,12],[408,10,407,8,"state"],[409,8,408,6],[410,6,409,4],[410,7,409,5],[410,8,409,6],[411,4,410,2],[411,5,410,3],[411,7,410,5],[411,8,410,6,"emitter"],[411,15,410,13],[411,17,410,15,"state"],[411,22,410,20],[411,23,410,21],[411,24,410,22],[412,4,411,2],[412,10,411,8],[413,6,412,4,"listeners"],[413,15,412,13],[413,17,412,15,"childListeners"],[413,31,412,29],[414,6,413,4,"addListener"],[415,4,414,2],[415,5,414,3],[415,8,414,6],[415,12,414,6,"useChildListeners"],[415,48,414,23],[415,50,414,24],[415,51,414,25],[416,4,415,2],[416,10,415,8],[417,6,416,4,"keyedListeners"],[417,20,416,18],[418,6,417,4,"addKeyedListener"],[419,4,418,2],[419,5,418,3],[419,8,418,6],[419,12,418,6,"useKeyedChildListeners"],[419,58,418,28],[419,60,418,29],[419,61,418,30],[420,4,419,2],[420,10,419,8,"onAction"],[420,18,419,16],[420,21,419,19],[420,25,419,19,"useOnAction"],[420,49,419,30],[420,51,419,31],[421,6,420,4,"router"],[421,12,420,10],[422,6,421,4,"getState"],[422,14,421,12],[423,6,422,4,"setState"],[423,14,422,12],[424,6,423,4,"key"],[424,9,423,7],[424,11,423,9,"route"],[424,16,423,14],[424,18,423,16,"key"],[424,21,423,19],[425,6,424,4,"actionListeners"],[425,21,424,19],[425,23,424,21,"childListeners"],[425,37,424,35],[425,38,424,36,"action"],[425,44,424,42],[426,6,425,4,"beforeRemoveListeners"],[426,27,425,25],[426,29,425,27,"keyedListeners"],[426,43,425,41],[426,44,425,42,"beforeRemove"],[426,56,425,54],[427,6,426,4,"routerConfigOptions"],[427,25,426,23],[427,27,426,25],[428,8,427,6,"routeNames"],[428,18,427,16],[429,8,428,6,"routeParamList"],[429,22,428,20],[430,8,429,6,"routeGetIdList"],[431,6,430,4],[431,7,430,5],[432,6,431,4,"emitter"],[433,4,432,2],[433,5,432,3],[433,6,432,4],[434,4,433,2],[434,10,433,8,"onRouteFocus"],[434,22,433,20],[434,25,433,23],[434,29,433,23,"useOnRouteFocus"],[434,61,433,38],[434,63,433,39],[435,6,434,4,"router"],[435,12,434,10],[436,6,435,4,"key"],[436,9,435,7],[436,11,435,9,"route"],[436,16,435,14],[436,18,435,16,"key"],[436,21,435,19],[437,6,436,4,"getState"],[437,14,436,12],[438,6,437,4,"setState"],[439,4,438,2],[439,5,438,3],[439,6,438,4],[440,4,439,2],[440,10,439,8,"navigation"],[440,20,439,18],[440,23,439,21],[440,27,439,21,"useNavigationHelpers"],[440,69,439,41],[440,71,439,42],[441,6,440,4,"id"],[441,8,440,6],[441,10,440,8,"options"],[441,17,440,15],[441,18,440,16,"id"],[441,20,440,18],[442,6,441,4,"onAction"],[442,14,441,12],[443,6,442,4,"getState"],[443,14,442,12],[444,6,443,4,"emitter"],[444,13,443,11],[445,6,444,4,"router"],[445,12,444,10],[446,6,445,4,"stateRef"],[447,4,446,2],[447,5,446,3],[447,6,446,4],[448,4,447,2],[448,8,447,2,"useFocusedListenersChildrenAdapter"],[448,78,447,36],[448,80,447,37],[449,6,448,4,"navigation"],[449,16,448,14],[450,6,449,4,"focusedListeners"],[450,22,449,20],[450,24,449,22,"childListeners"],[450,38,449,36],[450,39,449,37,"focus"],[451,4,450,2],[451,5,450,3],[451,6,450,4],[452,4,451,2],[452,8,451,2,"useOnGetState"],[452,36,451,15],[452,38,451,16],[453,6,452,4,"getState"],[453,14,452,12],[454,6,453,4,"getStateListeners"],[454,23,453,21],[454,25,453,23,"keyedListeners"],[454,39,453,37],[454,40,453,38,"getState"],[455,4,454,2],[455,5,454,3],[455,6,454,4],[456,4,455,2],[456,10,455,8],[457,6,456,4,"describe"],[457,14,456,12],[458,6,457,4,"descriptors"],[459,4,458,2],[459,5,458,3],[459,8,458,6],[459,12,458,6,"useDescriptors"],[459,42,458,20],[459,44,458,21],[460,6,459,4,"state"],[460,11,459,9],[461,6,460,4,"screens"],[461,13,460,11],[462,6,461,4,"navigation"],[462,16,461,14],[463,6,462,4,"screenOptions"],[463,19,462,17],[464,6,463,4,"screenLayout"],[464,18,463,16],[465,6,464,4,"onAction"],[465,14,464,12],[466,6,465,4,"getState"],[466,14,465,12],[467,6,466,4,"setState"],[467,14,466,12],[468,6,467,4,"onRouteFocus"],[468,18,467,16],[469,6,468,4,"addListener"],[469,17,468,15],[470,6,469,4,"addKeyedListener"],[470,22,469,20],[471,6,470,4,"router"],[471,12,470,10],[472,6,471,4],[473,6,472,4,"emitter"],[474,4,473,2],[474,5,473,3],[474,6,473,4],[475,4,474,2],[475,8,474,2,"useCurrentRender"],[475,42,474,18],[475,44,474,19],[476,6,475,4,"state"],[476,11,475,9],[477,6,476,4,"navigation"],[477,16,476,14],[478,6,477,4,"descriptors"],[479,4,478,2],[479,5,478,3],[479,6,478,4],[480,4,479,2],[480,10,479,8,"NavigationContent"],[480,27,479,25],[480,30,479,28],[480,34,479,28,"useComponent"],[480,60,479,40],[480,62,479,41,"children"],[480,70,479,49],[480,74,479,53],[481,6,480,4],[481,12,480,10,"element"],[481,19,480,17],[481,22,480,20,"layout"],[481,28,480,26],[481,32,480,30],[481,36,480,34],[481,39,480,37,"layout"],[481,45,480,43],[481,46,480,44],[482,8,481,6,"state"],[482,13,481,11],[483,8,482,6,"descriptors"],[483,19,482,17],[484,8,483,6,"navigation"],[484,18,483,16],[485,8,484,6,"children"],[486,6,485,4],[486,7,485,5],[486,8,485,6],[486,11,485,9,"children"],[486,19,485,17],[487,6,486,4],[487,13,486,11],[487,26,486,24],[487,30,486,24,"_jsx"],[487,45,486,28],[487,47,486,29,"NavigationHelpersContext"],[487,97,486,53],[487,98,486,54,"Provider"],[487,106,486,62],[487,108,486,64],[488,8,487,6,"value"],[488,13,487,11],[488,15,487,13,"navigation"],[488,25,487,23],[489,8,488,6,"children"],[489,16,488,14],[489,18,488,16],[489,31,488,29],[489,35,488,29,"_jsx"],[489,50,488,33],[489,52,488,34,"PreventRemoveProvider"],[489,96,488,55],[489,98,488,57],[490,10,489,8,"children"],[490,18,489,16],[490,20,489,18,"element"],[491,8,490,6],[491,9,490,7],[492,6,491,4],[492,7,491,5],[492,8,491,6],[493,4,492,2],[493,5,492,3],[493,6,492,4],[494,4,493,2],[494,11,493,9],[495,6,494,4,"state"],[495,11,494,9],[496,6,495,4,"navigation"],[496,16,495,14],[497,6,496,4,"describe"],[497,14,496,12],[498,6,497,4,"descriptors"],[498,17,497,15],[499,6,498,4,"NavigationContent"],[500,4,499,2],[500,5,499,3],[501,2,500,0],[502,0,500,1],[502,3]],"functionMap":{"names":["<global>","isScreen","isGroup","isValidKey","getRouteConfigsFromChildren","React.Children.toArray.reduce$argument_0","configs.forEach$argument_0","useNavigationBuilder","useLazyValue$argument_0","routeConfigs.every$argument_0","routeConfigs.reduce$argument_0","routeConfigs.map$argument_0","routeNames.reduce$argument_0","screens.curr.keys.map$argument_0","isStateValid","isStateInitialized","useLatestCallback$argument_0","React.useMemo$argument_0","React.useEffect$argument_0","Object.keys.filter$argument_0","useScheduleUpdate$argument_0","<anonymous>","useIsomorphicLayoutEffect$argument_0","useEventEmitter$argument_0","state.routes.find$argument_0","routeNames.map$argument_0","map$argument_0","Object.keys.filter.map$argument_0","concat.filter$argument_0","listeners.forEach$argument_0","useComponent$argument_0"],"mappings":"AAA;iBCqC;CDE;gBEC;CFE;mBGC,iEH;oCIO;0DCC;GDsC;oBEE;KFuC;CJG;OOS;8BCa;4DCC,qDD;GDY;sCGC;GHM;sCIC,2BJ;yCKC;uCCC,gBD;GLE;2CKC;GLM;2CKC;ILE;yCOI,+DP;+CQC,4ER;qCSU;GTQ;uEUC;oDLC;KKU;GVsC;kBWE;GXE;wDYc,yFZ;kBWI;GXE;oBa8B;GbK;kBWM;WGW;KHM;GXE;4BeS;GfE;qCSC;GTG;kCgBC;gCCI,+BD;qDJM,4BI;2CEQ;KFK,OG;2CPK,uBO,MC,mBD;KHC;YKG,iDL;sBMC,yBN;GhBC;kBWK;GXO;yCuBqE;GvBa;CPQ"}},"type":"js/module"}]}