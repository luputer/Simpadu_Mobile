{"dependencies":[{"name":"@react-navigation/native","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":18,"column":17,"index":752},"end":{"line":18,"column":52,"index":787}}],"key":"uE+cRVNnMKkS9OYKR5fpRqPul5s=","exportNames":["*"]}},{"name":"react","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":19,"column":32,"index":821},"end":{"line":19,"column":48,"index":837}}],"key":"XN65eZP/QkNMzaBAXbG/zPyidpY=","exportNames":["*"]}},{"name":"./Route","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":20,"column":16,"index":856},"end":{"line":20,"column":34,"index":874}}],"key":"Uzycn6ZxigdYY0vHqZHurWeuVzU=","exportNames":["*"]}},{"name":"./constants","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":21,"column":20,"index":896},"end":{"line":21,"column":42,"index":918}}],"key":"3z43bJyk/UB4EKjDCOXTFak09do=","exportNames":["*"]}},{"name":"./global-state/router-store","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":22,"column":23,"index":943},"end":{"line":22,"column":61,"index":981}}],"key":"/fn1FFiVRQQPn/6VRpZDx4OwSks=","exportNames":["*"]}},{"name":"./imperative-api","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":24,"column":25,"index":1136},"end":{"line":24,"column":52,"index":1163}}],"key":"2Of+bQUTIvR7p6d/TD+6pd79qeA=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n  'use client';\n\n  var __importDefault = this && this.__importDefault || function (mod) {\n    return mod && mod.__esModule ? mod : {\n      \"default\": mod\n    };\n  };\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.useRouteInfo = void 0;\n  exports.useRootNavigationState = useRootNavigationState;\n  exports.useRootNavigation = useRootNavigation;\n  exports.useNavigationContainerRef = useNavigationContainerRef;\n  exports.useRouter = useRouter;\n  exports.useUnstableGlobalHref = useUnstableGlobalHref;\n  exports.useSegments = useSegments;\n  exports.usePathname = usePathname;\n  exports.useGlobalSearchParams = useGlobalSearchParams;\n  exports.useLocalSearchParams = useLocalSearchParams;\n  exports.useSearchParams = useSearchParams;\n  const native_1 = require(_dependencyMap[0], \"@react-navigation/native\");\n  const react_1 = __importDefault(require(_dependencyMap[1], \"react\"));\n  const Route_1 = require(_dependencyMap[2], \"./Route\");\n  const constants_1 = require(_dependencyMap[3], \"./constants\");\n  const router_store_1 = require(_dependencyMap[4], \"./global-state/router-store\");\n  Object.defineProperty(exports, \"useRouteInfo\", {\n    enumerable: true,\n    get: function () {\n      return router_store_1.useRouteInfo;\n    }\n  });\n  const imperative_api_1 = require(_dependencyMap[5], \"./imperative-api\");\n  /**\n   * Returns the [navigation state](https://reactnavigation.org/docs/navigation-state/)\n   * of the navigator which contains the current screen.\n   *\n   * @example\n   * ```tsx\n   * import { useRootNavigationState } from 'expo-router';\n   *\n   * export default function Route() {\n   *  const { routes } = useRootNavigationState();\n   *\n   *  return <Text>{routes[0].name}</Text>;\n   * }\n   * ```\n   */\n  function useRootNavigationState() {\n    return (0, native_1.useNavigation)().getParent(constants_1.INTERNAL_SLOT_NAME).getState();\n  }\n  /**\n   * @deprecated Use [`useNavigationContainerRef`](#usenavigationcontainerref) instead,\n   * which returns a React `ref`.\n   */\n  function useRootNavigation() {\n    return router_store_1.store.navigationRef.current;\n  }\n  /**\n   * @return The root `<NavigationContainer />` ref for the app. The `ref.current` may be `null`\n   * if the `<NavigationContainer />` hasn't mounted yet.\n   */\n  function useNavigationContainerRef() {\n    return router_store_1.store.navigationRef;\n  }\n  /**\n   *\n   * Returns the [Router](#router) object for imperative navigation.\n   *\n   * @example\n   *```tsx\n   * import { useRouter } from 'expo-router';\n   * import { Text } from 'react-native';\n   *\n   * export default function Route() {\n   *  const router = useRouter();\n   *\n   *  return (\n   *   <Text onPress={() => router.push('/home')}>Go Home</Text>\n   *  );\n   *}\n   * ```\n   */\n  function useRouter() {\n    return imperative_api_1.router;\n  }\n  /**\n   * @private\n   * @returns The current global pathname with query params attached. This may change in the future to include the hostname\n   * from a predefined universal link. For example, `/foobar?hey=world` becomes `https://acme.dev/foobar?hey=world`.\n   */\n  function useUnstableGlobalHref() {\n    return (0, router_store_1.useRouteInfo)().unstable_globalHref;\n  }\n  function useSegments() {\n    return (0, router_store_1.useRouteInfo)().segments;\n  }\n  /**\n   * Returns the currently selected route location without search parameters. For example, `/acme?foo=bar` returns `/acme`.\n   * Segments will be normalized. For example, `/[id]?id=normal` becomes `/normal`.\n   *\n   * @example\n   * ```tsx app/profile/[user].tsx\n   * import { Text } from 'react-native';\n   * import { usePathname } from 'expo-router';\n   *\n   * export default function Route() {\n   *   // pathname = \"/profile/baconbrix\"\n   *   const pathname = usePathname();\n   *\n   *   return <Text>User: {user}</Text>;\n   * }\n   * ```\n   */\n  function usePathname() {\n    return (0, router_store_1.useRouteInfo)().pathname;\n  }\n  function useGlobalSearchParams() {\n    return (0, router_store_1.useRouteInfo)().params;\n  }\n  function useLocalSearchParams() {\n    const params = react_1.default.use(Route_1.LocalRouteParamsContext) ?? {};\n    return Object.fromEntries(Object.entries(params).map(([key, value]) => {\n      if (Array.isArray(value)) {\n        return [key, value.map(v => {\n          try {\n            return decodeURIComponent(v);\n          } catch {\n            return v;\n          }\n        })];\n      } else {\n        try {\n          return [key, decodeURIComponent(value)];\n        } catch {\n          return [key, value];\n        }\n      }\n    }));\n  }\n  function useSearchParams({\n    global = false\n  } = {}) {\n    const globalRef = react_1.default.useRef(global);\n    if (process.env.NODE_ENV !== 'production') {\n      if (global !== globalRef.current) {\n        console.warn(`Detected change in 'global' option of useSearchParams. This value cannot change between renders`);\n      }\n    }\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const params = global ? useGlobalSearchParams() : useLocalSearchParams();\n    const entries = Object.entries(params).flatMap(([key, value]) => {\n      if (global) {\n        if (key === 'params') return [];\n        if (key === 'screen') return [];\n      }\n      return Array.isArray(value) ? value.map(v => [key, v]) : [[key, value]];\n    });\n    return new ReadOnlyURLSearchParams(entries);\n  }\n  class ReadOnlyURLSearchParams extends URLSearchParams {\n    set() {\n      throw new Error('The URLSearchParams object return from useSearchParams is read-only');\n    }\n    append() {\n      throw new Error('The URLSearchParams object return from useSearchParams is read-only');\n    }\n    delete() {\n      throw new Error('The URLSearchParams object return from useSearchParams is read-only');\n    }\n  }\n});","lineCount":174,"map":[[2,2,1,0],[2,14,1,12],[3,2,2,0],[3,14,2,12],[5,2,3,0],[5,6,3,4,"__importDefault"],[5,21,3,19],[5,24,3,23],[5,28,3,27],[5,32,3,31],[5,36,3,35],[5,37,3,36,"__importDefault"],[5,52,3,51],[5,56,3,56],[5,66,3,66,"mod"],[5,69,3,69],[5,71,3,71],[6,4,4,4],[6,11,4,12,"mod"],[6,14,4,15],[6,18,4,19,"mod"],[6,21,4,22],[6,22,4,23,"__esModule"],[6,32,4,33],[6,35,4,37,"mod"],[6,38,4,40],[6,41,4,43],[7,6,4,45],[7,15,4,54],[7,17,4,56,"mod"],[8,4,4,60],[8,5,4,61],[9,2,5,0],[9,3,5,1],[10,2,6,0,"Object"],[10,8,6,6],[10,9,6,7,"defineProperty"],[10,23,6,21],[10,24,6,22,"exports"],[10,31,6,29],[10,33,6,31],[10,45,6,43],[10,47,6,45],[11,4,6,47,"value"],[11,9,6,52],[11,11,6,54],[12,2,6,59],[12,3,6,60],[12,4,6,61],[13,2,7,0,"exports"],[13,9,7,7],[13,10,7,8,"useRouteInfo"],[13,22,7,20],[13,25,7,23],[13,30,7,28],[13,31,7,29],[14,2,8,0,"exports"],[14,9,8,7],[14,10,8,8,"useRootNavigationState"],[14,32,8,30],[14,35,8,33,"useRootNavigationState"],[14,57,8,55],[15,2,9,0,"exports"],[15,9,9,7],[15,10,9,8,"useRootNavigation"],[15,27,9,25],[15,30,9,28,"useRootNavigation"],[15,47,9,45],[16,2,10,0,"exports"],[16,9,10,7],[16,10,10,8,"useNavigationContainerRef"],[16,35,10,33],[16,38,10,36,"useNavigationContainerRef"],[16,63,10,61],[17,2,11,0,"exports"],[17,9,11,7],[17,10,11,8,"useRouter"],[17,19,11,17],[17,22,11,20,"useRouter"],[17,31,11,29],[18,2,12,0,"exports"],[18,9,12,7],[18,10,12,8,"useUnstableGlobalHref"],[18,31,12,29],[18,34,12,32,"useUnstableGlobalHref"],[18,55,12,53],[19,2,13,0,"exports"],[19,9,13,7],[19,10,13,8,"useSegments"],[19,21,13,19],[19,24,13,22,"useSegments"],[19,35,13,33],[20,2,14,0,"exports"],[20,9,14,7],[20,10,14,8,"usePathname"],[20,21,14,19],[20,24,14,22,"usePathname"],[20,35,14,33],[21,2,15,0,"exports"],[21,9,15,7],[21,10,15,8,"useGlobalSearchParams"],[21,31,15,29],[21,34,15,32,"useGlobalSearchParams"],[21,55,15,53],[22,2,16,0,"exports"],[22,9,16,7],[22,10,16,8,"useLocalSearchParams"],[22,30,16,28],[22,33,16,31,"useLocalSearchParams"],[22,53,16,51],[23,2,17,0,"exports"],[23,9,17,7],[23,10,17,8,"useSearchParams"],[23,25,17,23],[23,28,17,26,"useSearchParams"],[23,43,17,41],[24,2,18,0],[24,8,18,6,"native_1"],[24,16,18,14],[24,19,18,17,"require"],[24,26,18,24],[24,27,18,24,"_dependencyMap"],[24,41,18,24],[24,72,18,51],[24,73,18,52],[25,2,19,0],[25,8,19,6,"react_1"],[25,15,19,13],[25,18,19,16,"__importDefault"],[25,33,19,31],[25,34,19,32,"require"],[25,41,19,39],[25,42,19,39,"_dependencyMap"],[25,56,19,39],[25,68,19,47],[25,69,19,48],[25,70,19,49],[26,2,20,0],[26,8,20,6,"Route_1"],[26,15,20,13],[26,18,20,16,"require"],[26,25,20,23],[26,26,20,23,"_dependencyMap"],[26,40,20,23],[26,54,20,33],[26,55,20,34],[27,2,21,0],[27,8,21,6,"constants_1"],[27,19,21,17],[27,22,21,20,"require"],[27,29,21,27],[27,30,21,27,"_dependencyMap"],[27,44,21,27],[27,62,21,41],[27,63,21,42],[28,2,22,0],[28,8,22,6,"router_store_1"],[28,22,22,20],[28,25,22,23,"require"],[28,32,22,30],[28,33,22,30,"_dependencyMap"],[28,47,22,30],[28,81,22,60],[28,82,22,61],[29,2,23,0,"Object"],[29,8,23,6],[29,9,23,7,"defineProperty"],[29,23,23,21],[29,24,23,22,"exports"],[29,31,23,29],[29,33,23,31],[29,47,23,45],[29,49,23,47],[30,4,23,49,"enumerable"],[30,14,23,59],[30,16,23,61],[30,20,23,65],[31,4,23,67,"get"],[31,7,23,70],[31,9,23,72],[31,18,23,72,"get"],[31,19,23,72],[31,21,23,84],[32,6,23,86],[32,13,23,93,"router_store_1"],[32,27,23,107],[32,28,23,108,"useRouteInfo"],[32,40,23,120],[33,4,23,122],[34,2,23,124],[34,3,23,125],[34,4,23,126],[35,2,24,0],[35,8,24,6,"imperative_api_1"],[35,24,24,22],[35,27,24,25,"require"],[35,34,24,32],[35,35,24,32,"_dependencyMap"],[35,49,24,32],[35,72,24,51],[35,73,24,52],[36,2,25,0],[37,0,26,0],[38,0,27,0],[39,0,28,0],[40,0,29,0],[41,0,30,0],[42,0,31,0],[43,0,32,0],[44,0,33,0],[45,0,34,0],[46,0,35,0],[47,0,36,0],[48,0,37,0],[49,0,38,0],[50,0,39,0],[51,2,40,0],[51,11,40,9,"useRootNavigationState"],[51,33,40,31,"useRootNavigationState"],[51,34,40,31],[51,36,40,34],[52,4,41,4],[52,11,41,11],[52,12,41,12],[52,13,41,13],[52,15,41,15,"native_1"],[52,23,41,23],[52,24,41,24,"useNavigation"],[52,37,41,37],[52,39,41,39],[52,40,41,40],[52,41,42,9,"getParent"],[52,50,42,18],[52,51,42,19,"constants_1"],[52,62,42,30],[52,63,42,31,"INTERNAL_SLOT_NAME"],[52,81,42,49],[52,82,42,50],[52,83,43,9,"getState"],[52,91,43,17],[52,92,43,18],[52,93,43,19],[53,2,44,0],[54,2,45,0],[55,0,46,0],[56,0,47,0],[57,0,48,0],[58,2,49,0],[58,11,49,9,"useRootNavigation"],[58,28,49,26,"useRootNavigation"],[58,29,49,26],[58,31,49,29],[59,4,50,4],[59,11,50,11,"router_store_1"],[59,25,50,25],[59,26,50,26,"store"],[59,31,50,31],[59,32,50,32,"navigationRef"],[59,45,50,45],[59,46,50,46,"current"],[59,53,50,53],[60,2,51,0],[61,2,52,0],[62,0,53,0],[63,0,54,0],[64,0,55,0],[65,2,56,0],[65,11,56,9,"useNavigationContainerRef"],[65,36,56,34,"useNavigationContainerRef"],[65,37,56,34],[65,39,56,37],[66,4,57,4],[66,11,57,11,"router_store_1"],[66,25,57,25],[66,26,57,26,"store"],[66,31,57,31],[66,32,57,32,"navigationRef"],[66,45,57,45],[67,2,58,0],[68,2,59,0],[69,0,60,0],[70,0,61,0],[71,0,62,0],[72,0,63,0],[73,0,64,0],[74,0,65,0],[75,0,66,0],[76,0,67,0],[77,0,68,0],[78,0,69,0],[79,0,70,0],[80,0,71,0],[81,0,72,0],[82,0,73,0],[83,0,74,0],[84,0,75,0],[85,0,76,0],[86,2,77,0],[86,11,77,9,"useRouter"],[86,20,77,18,"useRouter"],[86,21,77,18],[86,23,77,21],[87,4,78,4],[87,11,78,11,"imperative_api_1"],[87,27,78,27],[87,28,78,28,"router"],[87,34,78,34],[88,2,79,0],[89,2,80,0],[90,0,81,0],[91,0,82,0],[92,0,83,0],[93,0,84,0],[94,2,85,0],[94,11,85,9,"useUnstableGlobalHref"],[94,32,85,30,"useUnstableGlobalHref"],[94,33,85,30],[94,35,85,33],[95,4,86,4],[95,11,86,11],[95,12,86,12],[95,13,86,13],[95,15,86,15,"router_store_1"],[95,29,86,29],[95,30,86,30,"useRouteInfo"],[95,42,86,42],[95,44,86,44],[95,45,86,45],[95,46,86,46,"unstable_globalHref"],[95,65,86,65],[96,2,87,0],[97,2,88,0],[97,11,88,9,"useSegments"],[97,22,88,20,"useSegments"],[97,23,88,20],[97,25,88,23],[98,4,89,4],[98,11,89,11],[98,12,89,12],[98,13,89,13],[98,15,89,15,"router_store_1"],[98,29,89,29],[98,30,89,30,"useRouteInfo"],[98,42,89,42],[98,44,89,44],[98,45,89,45],[98,46,89,46,"segments"],[98,54,89,54],[99,2,90,0],[100,2,91,0],[101,0,92,0],[102,0,93,0],[103,0,94,0],[104,0,95,0],[105,0,96,0],[106,0,97,0],[107,0,98,0],[108,0,99,0],[109,0,100,0],[110,0,101,0],[111,0,102,0],[112,0,103,0],[113,0,104,0],[114,0,105,0],[115,0,106,0],[116,0,107,0],[117,2,108,0],[117,11,108,9,"usePathname"],[117,22,108,20,"usePathname"],[117,23,108,20],[117,25,108,23],[118,4,109,4],[118,11,109,11],[118,12,109,12],[118,13,109,13],[118,15,109,15,"router_store_1"],[118,29,109,29],[118,30,109,30,"useRouteInfo"],[118,42,109,42],[118,44,109,44],[118,45,109,45],[118,46,109,46,"pathname"],[118,54,109,54],[119,2,110,0],[120,2,111,0],[120,11,111,9,"useGlobalSearchParams"],[120,32,111,30,"useGlobalSearchParams"],[120,33,111,30],[120,35,111,33],[121,4,112,4],[121,11,112,11],[121,12,112,12],[121,13,112,13],[121,15,112,15,"router_store_1"],[121,29,112,29],[121,30,112,30,"useRouteInfo"],[121,42,112,42],[121,44,112,44],[121,45,112,45],[121,46,112,46,"params"],[121,52,112,52],[122,2,113,0],[123,2,114,0],[123,11,114,9,"useLocalSearchParams"],[123,31,114,29,"useLocalSearchParams"],[123,32,114,29],[123,34,114,32],[124,4,115,4],[124,10,115,10,"params"],[124,16,115,16],[124,19,115,19,"react_1"],[124,26,115,26],[124,27,115,27,"default"],[124,34,115,34],[124,35,115,35,"use"],[124,38,115,38],[124,39,115,39,"Route_1"],[124,46,115,46],[124,47,115,47,"LocalRouteParamsContext"],[124,70,115,70],[124,71,115,71],[124,75,115,75],[124,76,115,76],[124,77,115,77],[125,4,116,4],[125,11,116,11,"Object"],[125,17,116,17],[125,18,116,18,"fromEntries"],[125,29,116,29],[125,30,116,30,"Object"],[125,36,116,36],[125,37,116,37,"entries"],[125,44,116,44],[125,45,116,45,"params"],[125,51,116,51],[125,52,116,52],[125,53,116,53,"map"],[125,56,116,56],[125,57,116,57],[125,58,116,58],[125,59,116,59,"key"],[125,62,116,62],[125,64,116,64,"value"],[125,69,116,69],[125,70,116,70],[125,75,116,75],[126,6,117,8],[126,10,117,12,"Array"],[126,15,117,17],[126,16,117,18,"isArray"],[126,23,117,25],[126,24,117,26,"value"],[126,29,117,31],[126,30,117,32],[126,32,117,34],[127,8,118,12],[127,15,118,19],[127,16,119,16,"key"],[127,19,119,19],[127,21,120,16,"value"],[127,26,120,21],[127,27,120,22,"map"],[127,30,120,25],[127,31,120,27,"v"],[127,32,120,28],[127,36,120,33],[128,10,121,20],[128,14,121,24],[129,12,122,24],[129,19,122,31,"decodeURIComponent"],[129,37,122,49],[129,38,122,50,"v"],[129,39,122,51],[129,40,122,52],[130,10,123,20],[130,11,123,21],[130,12,124,20],[130,18,124,26],[131,12,125,24],[131,19,125,31,"v"],[131,20,125,32],[132,10,126,20],[133,8,127,16],[133,9,127,17],[133,10,127,18],[133,11,128,13],[134,6,129,8],[134,7,129,9],[134,13,130,13],[135,8,131,12],[135,12,131,16],[136,10,132,16],[136,17,132,23],[136,18,132,24,"key"],[136,21,132,27],[136,23,132,29,"decodeURIComponent"],[136,41,132,47],[136,42,132,48,"value"],[136,47,132,53],[136,48,132,54],[136,49,132,55],[137,8,133,12],[137,9,133,13],[137,10,134,12],[137,16,134,18],[138,10,135,16],[138,17,135,23],[138,18,135,24,"key"],[138,21,135,27],[138,23,135,29,"value"],[138,28,135,34],[138,29,135,35],[139,8,136,12],[140,6,137,8],[141,4,138,4],[141,5,138,5],[141,6,138,6],[141,7,138,7],[142,2,139,0],[143,2,140,0],[143,11,140,9,"useSearchParams"],[143,26,140,24,"useSearchParams"],[143,27,140,25],[144,4,140,27,"global"],[144,10,140,33],[144,13,140,36],[145,2,140,42],[145,3,140,43],[145,6,140,46],[145,7,140,47],[145,8,140,48],[145,10,140,50],[146,4,141,4],[146,10,141,10,"globalRef"],[146,19,141,19],[146,22,141,22,"react_1"],[146,29,141,29],[146,30,141,30,"default"],[146,37,141,37],[146,38,141,38,"useRef"],[146,44,141,44],[146,45,141,45,"global"],[146,51,141,51],[146,52,141,52],[147,4,142,4],[147,8,142,8,"process"],[147,15,142,15],[147,16,142,16,"env"],[147,19,142,19],[147,20,142,20,"NODE_ENV"],[147,28,142,28],[147,33,142,33],[147,45,142,45],[147,47,142,47],[148,6,143,8],[148,10,143,12,"global"],[148,16,143,18],[148,21,143,23,"globalRef"],[148,30,143,32],[148,31,143,33,"current"],[148,38,143,40],[148,40,143,42],[149,8,144,12,"console"],[149,15,144,19],[149,16,144,20,"warn"],[149,20,144,24],[149,21,144,25],[149,118,144,122],[149,119,144,123],[150,6,145,8],[151,4,146,4],[152,4,147,4],[153,4,148,4],[153,10,148,10,"params"],[153,16,148,16],[153,19,148,19,"global"],[153,25,148,25],[153,28,148,28,"useGlobalSearchParams"],[153,49,148,49],[153,50,148,50],[153,51,148,51],[153,54,148,54,"useLocalSearchParams"],[153,74,148,74],[153,75,148,75],[153,76,148,76],[154,4,149,4],[154,10,149,10,"entries"],[154,17,149,17],[154,20,149,20,"Object"],[154,26,149,26],[154,27,149,27,"entries"],[154,34,149,34],[154,35,149,35,"params"],[154,41,149,41],[154,42,149,42],[154,43,149,43,"flatMap"],[154,50,149,50],[154,51,149,51],[154,52,149,52],[154,53,149,53,"key"],[154,56,149,56],[154,58,149,58,"value"],[154,63,149,63],[154,64,149,64],[154,69,149,69],[155,6,150,8],[155,10,150,12,"global"],[155,16,150,18],[155,18,150,20],[156,8,151,12],[156,12,151,16,"key"],[156,15,151,19],[156,20,151,24],[156,28,151,32],[156,30,152,16],[156,37,152,23],[156,39,152,25],[157,8,153,12],[157,12,153,16,"key"],[157,15,153,19],[157,20,153,24],[157,28,153,32],[157,30,154,16],[157,37,154,23],[157,39,154,25],[158,6,155,8],[159,6,156,8],[159,13,156,15,"Array"],[159,18,156,20],[159,19,156,21,"isArray"],[159,26,156,28],[159,27,156,29,"value"],[159,32,156,34],[159,33,156,35],[159,36,156,38,"value"],[159,41,156,43],[159,42,156,44,"map"],[159,45,156,47],[159,46,156,49,"v"],[159,47,156,50],[159,51,156,55],[159,52,156,56,"key"],[159,55,156,59],[159,57,156,61,"v"],[159,58,156,62],[159,59,156,63],[159,60,156,64],[159,63,156,67],[159,64,156,68],[159,65,156,69,"key"],[159,68,156,72],[159,70,156,74,"value"],[159,75,156,79],[159,76,156,80],[159,77,156,81],[160,4,157,4],[160,5,157,5],[160,6,157,6],[161,4,158,4],[161,11,158,11],[161,15,158,15,"ReadOnlyURLSearchParams"],[161,38,158,38],[161,39,158,39,"entries"],[161,46,158,46],[161,47,158,47],[162,2,159,0],[163,2,160,0],[163,8,160,6,"ReadOnlyURLSearchParams"],[163,31,160,29],[163,40,160,38,"URLSearchParams"],[163,55,160,53],[163,56,160,54],[164,4,161,4,"set"],[164,7,161,7,"set"],[164,8,161,7],[164,10,161,10],[165,6,162,8],[165,12,162,14],[165,16,162,18,"Error"],[165,21,162,23],[165,22,162,24],[165,91,162,93],[165,92,162,94],[166,4,163,4],[167,4,164,4,"append"],[167,10,164,10,"append"],[167,11,164,10],[167,13,164,13],[168,6,165,8],[168,12,165,14],[168,16,165,18,"Error"],[168,21,165,23],[168,22,165,24],[168,91,165,93],[168,92,165,94],[169,4,166,4],[170,4,167,4,"delete"],[170,10,167,10,"delete"],[170,11,167,10],[170,13,167,13],[171,6,168,8],[171,12,168,14],[171,16,168,18,"Error"],[171,21,168,23],[171,22,168,24],[171,91,168,93],[171,92,168,94],[172,4,169,4],[173,2,170,0],[174,0,170,1],[174,3]],"functionMap":{"names":["<global>","<anonymous>","Object.defineProperty$argument_2.get","useRootNavigationState","useRootNavigation","useNavigationContainerRef","useRouter","useUnstableGlobalHref","useSegments","usePathname","useGlobalSearchParams","useLocalSearchParams","Object.entries.map$argument_0","value.map$argument_0","useSearchParams","Object.entries.flatMap$argument_0","ReadOnlyURLSearchParams","ReadOnlyURLSearchParams#set","ReadOnlyURLSearchParams#append","ReadOnlyURLSearchParams#_delete"],"mappings":"AAA;wDCE;CDE;wEEkB,mDF;AGiB;CHI;AIK;CJE;AKK;CLE;AMmB;CNE;AOM;CPE;AQC;CRE;ASkB;CTE;AUC;CVE;AWC;yDCE;0BCI;iBDO;KDW;CXC;AcC;mDCS;gDFO,eE;KDC;CdE;AgBC;ICC;KDE;IEC;KFE;IGC;KHE;ChBC"}},"type":"js/module"}]}