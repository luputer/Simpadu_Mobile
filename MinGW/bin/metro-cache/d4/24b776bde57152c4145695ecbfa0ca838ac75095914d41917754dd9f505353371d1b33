{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@react-navigation/routers","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":58,"index":73}}],"key":"TumjUqgKkj40CL5/as2VxzLfO54=","exportNames":["*"]}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":74},"end":{"line":4,"column":31,"index":105}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"]}},{"name":"react-is","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":106},"end":{"line":5,"column":46,"index":152}}],"key":"nMRUu046PLZz3vjxw7Fgw3UH3xY=","exportNames":["*"]}},{"name":"use-latest-callback","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":153},"end":{"line":6,"column":52,"index":205}}],"key":"2ER/r3Agt+5SFwaFR8HXg24Rpu4=","exportNames":["*"]}},{"name":"./deepFreeze.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":206},"end":{"line":7,"column":45,"index":251}}],"key":"rNxrvQaXjK4/vUvPksJpbMJ5u+4=","exportNames":["*"]}},{"name":"./Group.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":252},"end":{"line":8,"column":35,"index":287}}],"key":"81XLedmR1ugWwxXMAacEe45V43M=","exportNames":["*"]}},{"name":"./isArrayEqual.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":288},"end":{"line":9,"column":49,"index":337}}],"key":"0Xv+Jf6vWjo3/vKyf7CxgrGRylo=","exportNames":["*"]}},{"name":"./isRecordEqual.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":10,"column":0,"index":338},"end":{"line":10,"column":51,"index":389}}],"key":"E5lU3h554k94C0V5puhR219BWnU=","exportNames":["*"]}},{"name":"./NavigationHelpersContext.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":390},"end":{"line":11,"column":73,"index":463}}],"key":"UPnefzBCahUrTRoOWw51hXJ7z+A=","exportNames":["*"]}},{"name":"./NavigationRouteContext.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":12,"column":0,"index":464},"end":{"line":12,"column":69,"index":533}}],"key":"AWXnpGNA5UkH1qQUM7hLv2L9KzI=","exportNames":["*"]}},{"name":"./NavigationStateContext.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":13,"column":0,"index":534},"end":{"line":13,"column":69,"index":603}}],"key":"vPXNy6i2DuFIp7nHtHgSOvNmS+U=","exportNames":["*"]}},{"name":"./PreventRemoveProvider.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":14,"column":0,"index":604},"end":{"line":14,"column":67,"index":671}}],"key":"A/nq9Y/xSFBE06OzxjBtNMD9uQU=","exportNames":["*"]}},{"name":"./Screen.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":15,"column":0,"index":672},"end":{"line":15,"column":37,"index":709}}],"key":"YbGte4vf40k4Yjb9DRJvUiBpPUk=","exportNames":["*"]}},{"name":"./types.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":16,"column":0,"index":710},"end":{"line":16,"column":47,"index":757}}],"key":"yJvqu7zVoaSgx/LOxsKU/6eppkQ=","exportNames":["*"]}},{"name":"./useChildListeners.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":17,"column":0,"index":758},"end":{"line":17,"column":59,"index":817}}],"key":"+uLQCjZF6jwjpLbZFDGLy8MVJhc=","exportNames":["*"]}},{"name":"./useComponent.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":18,"column":0,"index":818},"end":{"line":18,"column":49,"index":867}}],"key":"b66LKsk9Jf3uaP2v5j6OCNwoJlU=","exportNames":["*"]}},{"name":"./useCurrentRender.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":19,"column":0,"index":868},"end":{"line":19,"column":57,"index":925}}],"key":"McuG59KD5h0BHxEULOXCoLs/e2E=","exportNames":["*"]}},{"name":"./useDescriptors.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":20,"column":0,"index":926},"end":{"line":20,"column":53,"index":979}}],"key":"G1CfJySCSkhPC7rH5rQhaqLaTI0=","exportNames":["*"]}},{"name":"./useEventEmitter.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":21,"column":0,"index":980},"end":{"line":21,"column":55,"index":1035}}],"key":"f/gs/fnvuaPtRHedK9bCgn238kE=","exportNames":["*"]}},{"name":"./useFocusedListenersChildrenAdapter.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":22,"column":0,"index":1036},"end":{"line":22,"column":93,"index":1129}}],"key":"OygHMRn4bEenld73jIuOxQ+gu9U=","exportNames":["*"]}},{"name":"./useFocusEvents.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":23,"column":0,"index":1130},"end":{"line":23,"column":53,"index":1183}}],"key":"8zqWYqMNSd/k9LIqrmfq1M3LrQU=","exportNames":["*"]}},{"name":"./useIsomorphicLayoutEffect","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":24,"column":0,"index":1184},"end":{"line":24,"column":72,"index":1256}}],"key":"9rkYAq1XBrVxY+kZsCUj0T3q4rg=","exportNames":["*"]}},{"name":"./useKeyedChildListeners.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":25,"column":0,"index":1257},"end":{"line":25,"column":69,"index":1326}}],"key":"uvEgxGYPcoeW+RryvJ51Glj8+aw=","exportNames":["*"]}},{"name":"./useLazyValue.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":26,"column":0,"index":1327},"end":{"line":26,"column":49,"index":1376}}],"key":"4aMiFZmnD/ZJbzJTaYI7ECYTV2s=","exportNames":["*"]}},{"name":"./useNavigationHelpers.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":27,"column":0,"index":1377},"end":{"line":27,"column":65,"index":1442}}],"key":"c9g7geoBBHpEed2xjMQ2EV7DCFE=","exportNames":["*"]}},{"name":"./useOnAction.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":28,"column":0,"index":1443},"end":{"line":28,"column":47,"index":1490}}],"key":"oVCZ93YyJFpAvJlQLQH3T1CuCCk=","exportNames":["*"]}},{"name":"./useOnGetState.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":29,"column":0,"index":1491},"end":{"line":29,"column":51,"index":1542}}],"key":"/XMjJjmKD4ejBJNDiIDjXKDJRFk=","exportNames":["*"]}},{"name":"./useOnRouteFocus.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":30,"column":0,"index":1543},"end":{"line":30,"column":55,"index":1598}}],"key":"5V4g0kBeeaIrUwTen4o2q6oj60U=","exportNames":["*"]}},{"name":"./useRegisterNavigator.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":31,"column":0,"index":1599},"end":{"line":31,"column":65,"index":1664}}],"key":"KZzTt58Kkr/mzgiCdvRDRowLya8=","exportNames":["*"]}},{"name":"./useScheduleUpdate.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":32,"column":0,"index":1665},"end":{"line":32,"column":59,"index":1724}}],"key":"FnFZL3NH40gExc7dikLfREzDCec=","exportNames":["*"]}},{"name":"react/jsx-runtime","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":36,"column":0,"index":1840},"end":{"line":36,"column":48,"index":1888}}],"key":"rKAWVuQOSSDHxC6IWcmkeWszaWg=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.useNavigationBuilder = useNavigationBuilder;\n  var _routers = require(_dependencyMap[1], \"@react-navigation/routers\");\n  var React = _interopRequireWildcard(require(_dependencyMap[2], \"react\"));\n  var _reactIs = require(_dependencyMap[3], \"react-is\");\n  var _useLatestCallback = _interopRequireDefault(require(_dependencyMap[4], \"use-latest-callback\"));\n  var _deepFreeze = require(_dependencyMap[5], \"./deepFreeze.js\");\n  var _Group = require(_dependencyMap[6], \"./Group.js\");\n  var _isArrayEqual = require(_dependencyMap[7], \"./isArrayEqual.js\");\n  var _isRecordEqual = require(_dependencyMap[8], \"./isRecordEqual.js\");\n  var _NavigationHelpersContext = require(_dependencyMap[9], \"./NavigationHelpersContext.js\");\n  var _NavigationRouteContext = require(_dependencyMap[10], \"./NavigationRouteContext.js\");\n  var _NavigationStateContext = require(_dependencyMap[11], \"./NavigationStateContext.js\");\n  var _PreventRemoveProvider = require(_dependencyMap[12], \"./PreventRemoveProvider.js\");\n  var _Screen = require(_dependencyMap[13], \"./Screen.js\");\n  var _types = require(_dependencyMap[14], \"./types.js\");\n  var _useChildListeners = require(_dependencyMap[15], \"./useChildListeners.js\");\n  var _useComponent = require(_dependencyMap[16], \"./useComponent.js\");\n  var _useCurrentRender = require(_dependencyMap[17], \"./useCurrentRender.js\");\n  var _useDescriptors = require(_dependencyMap[18], \"./useDescriptors.js\");\n  var _useEventEmitter = require(_dependencyMap[19], \"./useEventEmitter.js\");\n  var _useFocusedListenersChildrenAdapter = require(_dependencyMap[20], \"./useFocusedListenersChildrenAdapter.js\");\n  var _useFocusEvents = require(_dependencyMap[21], \"./useFocusEvents.js\");\n  var _useIsomorphicLayoutEffect = require(_dependencyMap[22], \"./useIsomorphicLayoutEffect\");\n  var _useKeyedChildListeners = require(_dependencyMap[23], \"./useKeyedChildListeners.js\");\n  var _useLazyValue = require(_dependencyMap[24], \"./useLazyValue.js\");\n  var _useNavigationHelpers = require(_dependencyMap[25], \"./useNavigationHelpers.js\");\n  var _useOnAction = require(_dependencyMap[26], \"./useOnAction.js\");\n  var _useOnGetState = require(_dependencyMap[27], \"./useOnGetState.js\");\n  var _useOnRouteFocus = require(_dependencyMap[28], \"./useOnRouteFocus.js\");\n  var _useRegisterNavigator = require(_dependencyMap[29], \"./useRegisterNavigator.js\");\n  var _useScheduleUpdate = require(_dependencyMap[30], \"./useScheduleUpdate.js\");\n  var _jsxRuntime = require(_dependencyMap[31], \"react/jsx-runtime\");\n  function _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (const t in e) \"default\" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]); return f; })(e, t); }\n  // This is to make TypeScript compiler happy\n  // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n\n  _types.PrivateValueStore;\n  const isScreen = child => {\n    return child.type === _Screen.Screen;\n  };\n  const isGroup = child => {\n    return child.type === React.Fragment || child.type === _Group.Group;\n  };\n  const isValidKey = key => key === undefined || typeof key === 'string' && key !== '';\n\n  /**\n   * Extract route config object from React children elements.\n   *\n   * @param children React Elements to extract the config from.\n   */\n  const getRouteConfigsFromChildren = (children, groupKey, groupOptions, groupLayout) => {\n    const configs = React.Children.toArray(children).reduce((acc, child) => {\n      if (/*#__PURE__*/React.isValidElement(child)) {\n        if (isScreen(child)) {\n          // We can only extract the config from `Screen` elements\n          // If something else was rendered, it's probably a bug\n\n          if (typeof child.props !== 'object' || child.props === null) {\n            throw new Error(`Got an invalid element for screen.`);\n          }\n          if (typeof child.props.name !== 'string' || child.props.name === '') {\n            throw new Error(`Got an invalid name (${JSON.stringify(child.props.name)}) for the screen. It must be a non-empty string.`);\n          }\n          if (child.props.navigationKey !== undefined && (typeof child.props.navigationKey !== 'string' || child.props.navigationKey === '')) {\n            throw new Error(`Got an invalid 'navigationKey' prop (${JSON.stringify(child.props.navigationKey)}) for the screen '${child.props.name}'. It must be a non-empty string or 'undefined'.`);\n          }\n          acc.push({\n            keys: [groupKey, child.props.navigationKey],\n            options: groupOptions,\n            layout: groupLayout,\n            props: child.props\n          });\n          return acc;\n        }\n        if (isGroup(child)) {\n          if (!isValidKey(child.props.navigationKey)) {\n            throw new Error(`Got an invalid 'navigationKey' prop (${JSON.stringify(child.props.navigationKey)}) for the group. It must be a non-empty string or 'undefined'.`);\n          }\n\n          // When we encounter a fragment or group, we need to dive into its children to extract the configs\n          // This is handy to conditionally define a group of screens\n          acc.push(...getRouteConfigsFromChildren(child.props.children, child.props.navigationKey,\n          // FIXME\n          // @ts-expect-error: add validation\n          child.type !== _Group.Group ? groupOptions : groupOptions != null ? [...groupOptions, child.props.screenOptions] : [child.props.screenOptions], typeof child.props.screenLayout === 'function' ? child.props.screenLayout : groupLayout));\n          return acc;\n        }\n      }\n      throw new Error(`A navigator can only contain 'Screen', 'Group' or 'React.Fragment' as its direct children (found ${/*#__PURE__*/ /*#__PURE__*/React.isValidElement(child) ? `'${typeof child.type === 'string' ? child.type : child.type?.name}'${child.props != null && typeof child.props === 'object' && 'name' in child.props && child.props?.name ? ` for the screen '${child.props.name}'` : ''}` : typeof child === 'object' ? JSON.stringify(child) : `'${String(child)}'`}). To render this component in the navigator, pass it in the 'component' prop to 'Screen'.`);\n    }, []);\n    if (process.env.NODE_ENV !== 'production') {\n      configs.forEach(config => {\n        const {\n          name,\n          children,\n          component,\n          getComponent\n        } = config.props;\n        if (children != null || component !== undefined || getComponent !== undefined) {\n          if (children != null && component !== undefined) {\n            throw new Error(`Got both 'component' and 'children' props for the screen '${name}'. You must pass only one of them.`);\n          }\n          if (children != null && getComponent !== undefined) {\n            throw new Error(`Got both 'getComponent' and 'children' props for the screen '${name}'. You must pass only one of them.`);\n          }\n          if (component !== undefined && getComponent !== undefined) {\n            throw new Error(`Got both 'component' and 'getComponent' props for the screen '${name}'. You must pass only one of them.`);\n          }\n          if (children != null && typeof children !== 'function') {\n            throw new Error(`Got an invalid value for 'children' prop for the screen '${name}'. It must be a function returning a React Element.`);\n          }\n          if (component !== undefined && !(0, _reactIs.isValidElementType)(component)) {\n            throw new Error(`Got an invalid value for 'component' prop for the screen '${name}'. It must be a valid React Component.`);\n          }\n          if (getComponent !== undefined && typeof getComponent !== 'function') {\n            throw new Error(`Got an invalid value for 'getComponent' prop for the screen '${name}'. It must be a function returning a React Component.`);\n          }\n          if (typeof component === 'function') {\n            if (component.name === 'component') {\n              // Inline anonymous functions passed in the `component` prop will have the name of the prop\n              // It's relatively safe to assume that it's not a component since it should also have PascalCase name\n              // We won't catch all scenarios here, but this should catch a good chunk of incorrect use.\n              console.warn(`Looks like you're passing an inline function for 'component' prop for the screen '${name}' (e.g. component={() => <SomeComponent />}). Passing an inline function will cause the component state to be lost on re-render and cause perf issues since it's re-created every render. You can pass the function as children to 'Screen' instead to achieve the desired behaviour.`);\n            } else if (/^[a-z]/.test(component.name)) {\n              console.warn(`Got a component with the name '${component.name}' for the screen '${name}'. React Components must start with an uppercase letter. If you're passing a regular function and not a component, pass it as children to 'Screen' instead. Otherwise capitalize your component's name.`);\n            }\n          }\n        } else {\n          throw new Error(`Couldn't find a 'component', 'getComponent' or 'children' prop for the screen '${name}'. This can happen if you passed 'undefined'. You likely forgot to export your component from the file it's defined in, or mixed up default import and named import when importing.`);\n        }\n      });\n    }\n    return configs;\n  };\n\n  /**\n   * Hook for building navigators.\n   *\n   * @param createRouter Factory method which returns router object.\n   * @param options Options object containing `children` and additional options for the router.\n   * @returns An object containing `state`, `navigation`, `descriptors` objects.\n   */\n  function useNavigationBuilder(createRouter, options) {\n    const navigatorKey = (0, _useRegisterNavigator.useRegisterNavigator)();\n    const route = React.useContext(_NavigationRouteContext.NavigationRouteContext);\n    const {\n      children,\n      layout,\n      screenOptions,\n      screenLayout,\n      screenListeners,\n      UNSTABLE_router,\n      ...rest\n    } = options;\n    const routeConfigs = getRouteConfigsFromChildren(children);\n    const router = (0, _useLazyValue.useLazyValue)(() => {\n      if (rest.initialRouteName != null && routeConfigs.every(config => config.props.name !== rest.initialRouteName)) {\n        throw new Error(`Couldn't find a screen named '${rest.initialRouteName}' to use as 'initialRouteName'.`);\n      }\n      const original = createRouter(rest);\n      if (UNSTABLE_router != null) {\n        const overrides = UNSTABLE_router(original);\n        return {\n          ...original,\n          ...overrides\n        };\n      }\n      return original;\n    });\n    const screens = routeConfigs.reduce((acc, config) => {\n      if (config.props.name in acc) {\n        throw new Error(`A navigator cannot contain multiple 'Screen' components with the same name (found duplicate screen named '${config.props.name}')`);\n      }\n      acc[config.props.name] = config;\n      return acc;\n    }, {});\n    const routeNames = routeConfigs.map(config => config.props.name);\n    const routeKeyList = routeNames.reduce((acc, curr) => {\n      acc[curr] = screens[curr].keys.map(key => key ?? '').join(':');\n      return acc;\n    }, {});\n    const routeParamList = routeNames.reduce((acc, curr) => {\n      const {\n        initialParams\n      } = screens[curr].props;\n      acc[curr] = initialParams;\n      return acc;\n    }, {});\n    const routeGetIdList = routeNames.reduce((acc, curr) => Object.assign(acc, {\n      [curr]: screens[curr].props.getId\n    }), {});\n    if (!routeNames.length) {\n      throw new Error(\"Couldn't find any screens for the navigator. Have you defined any screens as its children?\");\n    }\n    const isStateValid = React.useCallback(state => state.type === undefined || state.type === router.type, [router.type]);\n    const isStateInitialized = React.useCallback(state => state !== undefined && state.stale === false && isStateValid(state), [isStateValid]);\n    const {\n      state: currentState,\n      getState: getCurrentState,\n      setState: setCurrentState,\n      setKey,\n      getKey,\n      getIsInitial\n    } = React.useContext(_NavigationStateContext.NavigationStateContext);\n    const stateCleanedUp = React.useRef(false);\n    const setState = (0, _useLatestCallback.default)(state => {\n      if (stateCleanedUp.current) {\n        // State might have been already cleaned up due to unmount\n        // We do not want to expose API allowing to override this\n        // This would lead to old data preservation on main navigator unmount\n        return;\n      }\n      setCurrentState(state);\n    });\n    const [initializedState, isFirstStateInitialization] = React.useMemo(() => {\n      const initialRouteParamList = routeNames.reduce((acc, curr) => {\n        const {\n          initialParams\n        } = screens[curr].props;\n        const initialParamsFromParams = route?.params?.state == null && route?.params?.initial !== false && route?.params?.screen === curr ? route.params.params : undefined;\n        acc[curr] = initialParams !== undefined || initialParamsFromParams !== undefined ? {\n          ...initialParams,\n          ...initialParamsFromParams\n        } : undefined;\n        return acc;\n      }, {});\n\n      // If the current state isn't initialized on first render, we initialize it\n      // We also need to re-initialize it if the state passed from parent was changed (maybe due to reset)\n      // Otherwise assume that the state was provided as initial state\n      // So we need to rehydrate it to make it usable\n      if ((currentState === undefined || !isStateValid(currentState)) && route?.params?.state == null && !(typeof route?.params?.screen === 'string' && route?.params?.initial !== false)) {\n        return [router.getInitialState({\n          routeNames,\n          routeParamList: initialRouteParamList,\n          routeGetIdList\n        }), true];\n      } else {\n        let stateFromParams;\n        if (route?.params?.state != null) {\n          stateFromParams = route.params.state;\n        } else if (typeof route?.params?.screen === 'string' && route?.params?.initial !== false) {\n          stateFromParams = {\n            index: 0,\n            routes: [{\n              name: route.params.screen,\n              params: route.params.params,\n              path: route.params.path\n            }]\n          };\n        }\n        return [router.getRehydratedState(stateFromParams ?? currentState, {\n          routeNames,\n          routeParamList: initialRouteParamList,\n          routeGetIdList\n        }), false];\n      }\n      // We explicitly don't include routeNames, route.params etc. in the dep list\n      // below. We want to avoid forcing a new state to be calculated in those cases\n      // Instead, we handle changes to these in the nextState code below. Note\n      // that some changes to routeConfigs are explicitly ignored, such as changes\n      // to initialParams\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [currentState, router, isStateValid]);\n    const previousRouteKeyListRef = React.useRef(routeKeyList);\n    React.useEffect(() => {\n      previousRouteKeyListRef.current = routeKeyList;\n    });\n    const previousRouteKeyList = previousRouteKeyListRef.current;\n    let state =\n    // If the state isn't initialized, or stale, use the state we initialized instead\n    // The state won't update until there's a change needed in the state we have initialized locally\n    // So it'll be `undefined` or stale until the first navigation event happens\n    isStateInitialized(currentState) ? currentState : initializedState;\n    let nextState = state;\n    if (!(0, _isArrayEqual.isArrayEqual)(state.routeNames, routeNames) || !(0, _isRecordEqual.isRecordEqual)(routeKeyList, previousRouteKeyList)) {\n      // When the list of route names change, the router should handle it to remove invalid routes\n      nextState = router.getStateForRouteNamesChange(state, {\n        routeNames,\n        routeParamList,\n        routeGetIdList,\n        routeKeyChanges: Object.keys(routeKeyList).filter(name => name in previousRouteKeyList && routeKeyList[name] !== previousRouteKeyList[name])\n      });\n    }\n    const previousNestedParamsRef = React.useRef(route?.params);\n    React.useEffect(() => {\n      previousNestedParamsRef.current = route?.params;\n    }, [route?.params]);\n    if (route?.params) {\n      const previousParams = previousNestedParamsRef.current;\n      let action;\n      if (typeof route.params.state === 'object' && route.params.state != null && route.params !== previousParams) {\n        // If the route was updated with new state, we should reset to it\n        action = _routers.CommonActions.reset(route.params.state);\n      } else if (typeof route.params.screen === 'string' && (route.params.initial === false && isFirstStateInitialization || route.params !== previousParams)) {\n        // If the route was updated with new screen name and/or params, we should navigate there\n        action = _routers.CommonActions.navigate({\n          name: route.params.screen,\n          params: route.params.params,\n          path: route.params.path,\n          pop: route.params.pop\n        });\n      }\n\n      // The update should be limited to current navigator only, so we call the router manually\n      const updatedState = action ? router.getStateForAction(nextState, action, {\n        routeNames,\n        routeParamList,\n        routeGetIdList\n      }) : null;\n      nextState = updatedState !== null ? router.getRehydratedState(updatedState, {\n        routeNames,\n        routeParamList,\n        routeGetIdList\n      }) : nextState;\n    }\n    const shouldUpdate = state !== nextState;\n    (0, _useScheduleUpdate.useScheduleUpdate)(() => {\n      if (shouldUpdate) {\n        // If the state needs to be updated, we'll schedule an update\n        setState(nextState);\n      }\n    });\n\n    // The up-to-date state will come in next render, but we don't need to wait for it\n    // We can't use the outdated state since the screens have changed, which will cause error due to mismatched config\n    // So we override the state object we return to use the latest state as soon as possible\n    state = nextState;\n    React.useEffect(() => {\n      // In strict mode, React will double-invoke effects.\n      // So we need to reset the flag if component was not unmounted\n      stateCleanedUp.current = false;\n      setKey(navigatorKey);\n      if (!getIsInitial()) {\n        // If it's not initial render, we need to update the state\n        // This will make sure that our container gets notifier of state changes due to new mounts\n        // This is necessary for proper screen tracking, URL updates etc.\n        setState(nextState);\n      }\n      return () => {\n        // We need to clean up state for this navigator on unmount\n        if (getCurrentState() !== undefined && getKey() === navigatorKey) {\n          setCurrentState(undefined);\n          stateCleanedUp.current = true;\n        }\n      };\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    // In some cases (e.g. route names change), internal state might have changed\n    // But it hasn't been committed yet, so hasn't propagated to the sync external store\n    // During this time, we need to return the internal state in `getState`\n    // Otherwise it can result in inconsistent state during render in children\n    // To avoid this, we use a ref for render phase, and immediately clear it on commit\n    const stateRef = React.useRef(state);\n    stateRef.current = state;\n    (0, _useIsomorphicLayoutEffect.useIsomorphicLayoutEffect)(() => {\n      stateRef.current = null;\n    });\n    const getState = (0, _useLatestCallback.default)(() => {\n      const currentState = getCurrentState();\n      return (0, _deepFreeze.deepFreeze)(isStateInitialized(currentState) ? currentState : initializedState);\n    });\n    const emitter = (0, _useEventEmitter.useEventEmitter)(e => {\n      const routeNames = [];\n      let route;\n      if (e.target) {\n        route = state.routes.find(route => route.key === e.target);\n        if (route?.name) {\n          routeNames.push(route.name);\n        }\n      } else {\n        route = state.routes[state.index];\n        routeNames.push(...Object.keys(screens).filter(name => route?.name === name));\n      }\n      if (route == null) {\n        return;\n      }\n      const navigation = descriptors[route.key].navigation;\n      const listeners = [].concat(\n      // Get an array of listeners for all screens + common listeners on navigator\n      ...[screenListeners, ...routeNames.map(name => {\n        const {\n          listeners\n        } = screens[name].props;\n        return listeners;\n      })].map(listeners => {\n        const map = typeof listeners === 'function' ? listeners({\n          route: route,\n          navigation\n        }) : listeners;\n        return map ? Object.keys(map).filter(type => type === e.type).map(type => map?.[type]) : undefined;\n      }))\n      // We don't want same listener to be called multiple times for same event\n      // So we remove any duplicate functions from the array\n      .filter((cb, i, self) => cb && self.lastIndexOf(cb) === i);\n      listeners.forEach(listener => listener?.(e));\n    });\n    (0, _useFocusEvents.useFocusEvents)({\n      state,\n      emitter\n    });\n    React.useEffect(() => {\n      emitter.emit({\n        type: 'state',\n        data: {\n          state\n        }\n      });\n    }, [emitter, state]);\n    const {\n      listeners: childListeners,\n      addListener\n    } = (0, _useChildListeners.useChildListeners)();\n    const {\n      keyedListeners,\n      addKeyedListener\n    } = (0, _useKeyedChildListeners.useKeyedChildListeners)();\n    const onAction = (0, _useOnAction.useOnAction)({\n      router,\n      getState,\n      setState,\n      key: route?.key,\n      actionListeners: childListeners.action,\n      beforeRemoveListeners: keyedListeners.beforeRemove,\n      routerConfigOptions: {\n        routeNames,\n        routeParamList,\n        routeGetIdList\n      },\n      emitter\n    });\n    const onRouteFocus = (0, _useOnRouteFocus.useOnRouteFocus)({\n      router,\n      key: route?.key,\n      getState,\n      setState\n    });\n    const navigation = (0, _useNavigationHelpers.useNavigationHelpers)({\n      id: options.id,\n      onAction,\n      getState,\n      emitter,\n      router,\n      stateRef\n    });\n    (0, _useFocusedListenersChildrenAdapter.useFocusedListenersChildrenAdapter)({\n      navigation,\n      focusedListeners: childListeners.focus\n    });\n    (0, _useOnGetState.useOnGetState)({\n      getState,\n      getStateListeners: keyedListeners.getState\n    });\n    const {\n      describe,\n      descriptors\n    } = (0, _useDescriptors.useDescriptors)({\n      state,\n      screens,\n      navigation,\n      screenOptions,\n      screenLayout,\n      onAction,\n      getState,\n      setState,\n      onRouteFocus,\n      addListener,\n      addKeyedListener,\n      router,\n      // @ts-expect-error: this should have both core and custom events, but too much work right now\n      emitter\n    });\n    (0, _useCurrentRender.useCurrentRender)({\n      state,\n      navigation,\n      descriptors\n    });\n    const NavigationContent = (0, _useComponent.useComponent)(children => {\n      const element = layout != null ? layout({\n        state,\n        descriptors,\n        navigation,\n        children\n      }) : children;\n      return /*#__PURE__*/(0, _jsxRuntime.jsx)(_NavigationHelpersContext.NavigationHelpersContext.Provider, {\n        value: navigation,\n        children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_PreventRemoveProvider.PreventRemoveProvider, {\n          children: element\n        })\n      });\n    });\n    return {\n      state,\n      navigation,\n      describe,\n      descriptors,\n      NavigationContent\n    };\n  }\n});","lineCount":508,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_interopRequireDefault"],[4,28,1,13],[4,31,1,13,"require"],[4,38,1,13],[4,39,1,13,"_dependencyMap"],[4,53,1,13],[5,2,1,13,"Object"],[5,8,1,13],[5,9,1,13,"defineProperty"],[5,23,1,13],[5,24,1,13,"exports"],[5,31,1,13],[6,4,1,13,"value"],[6,9,1,13],[7,2,1,13],[8,2,1,13,"exports"],[8,9,1,13],[8,10,1,13,"useNavigationBuilder"],[8,30,1,13],[8,33,1,13,"useNavigationBuilder"],[8,53,1,13],[9,2,3,0],[9,6,3,0,"_routers"],[9,14,3,0],[9,17,3,0,"require"],[9,24,3,0],[9,25,3,0,"_dependencyMap"],[9,39,3,0],[10,2,4,0],[10,6,4,0,"React"],[10,11,4,0],[10,14,4,0,"_interopRequireWildcard"],[10,37,4,0],[10,38,4,0,"require"],[10,45,4,0],[10,46,4,0,"_dependencyMap"],[10,60,4,0],[11,2,5,0],[11,6,5,0,"_reactIs"],[11,14,5,0],[11,17,5,0,"require"],[11,24,5,0],[11,25,5,0,"_dependencyMap"],[11,39,5,0],[12,2,6,0],[12,6,6,0,"_useLatestCallback"],[12,24,6,0],[12,27,6,0,"_interopRequireDefault"],[12,49,6,0],[12,50,6,0,"require"],[12,57,6,0],[12,58,6,0,"_dependencyMap"],[12,72,6,0],[13,2,7,0],[13,6,7,0,"_deepFreeze"],[13,17,7,0],[13,20,7,0,"require"],[13,27,7,0],[13,28,7,0,"_dependencyMap"],[13,42,7,0],[14,2,8,0],[14,6,8,0,"_Group"],[14,12,8,0],[14,15,8,0,"require"],[14,22,8,0],[14,23,8,0,"_dependencyMap"],[14,37,8,0],[15,2,9,0],[15,6,9,0,"_isArrayEqual"],[15,19,9,0],[15,22,9,0,"require"],[15,29,9,0],[15,30,9,0,"_dependencyMap"],[15,44,9,0],[16,2,10,0],[16,6,10,0,"_isRecordEqual"],[16,20,10,0],[16,23,10,0,"require"],[16,30,10,0],[16,31,10,0,"_dependencyMap"],[16,45,10,0],[17,2,11,0],[17,6,11,0,"_NavigationHelpersContext"],[17,31,11,0],[17,34,11,0,"require"],[17,41,11,0],[17,42,11,0,"_dependencyMap"],[17,56,11,0],[18,2,12,0],[18,6,12,0,"_NavigationRouteContext"],[18,29,12,0],[18,32,12,0,"require"],[18,39,12,0],[18,40,12,0,"_dependencyMap"],[18,54,12,0],[19,2,13,0],[19,6,13,0,"_NavigationStateContext"],[19,29,13,0],[19,32,13,0,"require"],[19,39,13,0],[19,40,13,0,"_dependencyMap"],[19,54,13,0],[20,2,14,0],[20,6,14,0,"_PreventRemoveProvider"],[20,28,14,0],[20,31,14,0,"require"],[20,38,14,0],[20,39,14,0,"_dependencyMap"],[20,53,14,0],[21,2,15,0],[21,6,15,0,"_Screen"],[21,13,15,0],[21,16,15,0,"require"],[21,23,15,0],[21,24,15,0,"_dependencyMap"],[21,38,15,0],[22,2,16,0],[22,6,16,0,"_types"],[22,12,16,0],[22,15,16,0,"require"],[22,22,16,0],[22,23,16,0,"_dependencyMap"],[22,37,16,0],[23,2,17,0],[23,6,17,0,"_useChildListeners"],[23,24,17,0],[23,27,17,0,"require"],[23,34,17,0],[23,35,17,0,"_dependencyMap"],[23,49,17,0],[24,2,18,0],[24,6,18,0,"_useComponent"],[24,19,18,0],[24,22,18,0,"require"],[24,29,18,0],[24,30,18,0,"_dependencyMap"],[24,44,18,0],[25,2,19,0],[25,6,19,0,"_useCurrentRender"],[25,23,19,0],[25,26,19,0,"require"],[25,33,19,0],[25,34,19,0,"_dependencyMap"],[25,48,19,0],[26,2,20,0],[26,6,20,0,"_useDescriptors"],[26,21,20,0],[26,24,20,0,"require"],[26,31,20,0],[26,32,20,0,"_dependencyMap"],[26,46,20,0],[27,2,21,0],[27,6,21,0,"_useEventEmitter"],[27,22,21,0],[27,25,21,0,"require"],[27,32,21,0],[27,33,21,0,"_dependencyMap"],[27,47,21,0],[28,2,22,0],[28,6,22,0,"_useFocusedListenersChildrenAdapter"],[28,41,22,0],[28,44,22,0,"require"],[28,51,22,0],[28,52,22,0,"_dependencyMap"],[28,66,22,0],[29,2,23,0],[29,6,23,0,"_useFocusEvents"],[29,21,23,0],[29,24,23,0,"require"],[29,31,23,0],[29,32,23,0,"_dependencyMap"],[29,46,23,0],[30,2,24,0],[30,6,24,0,"_useIsomorphicLayoutEffect"],[30,32,24,0],[30,35,24,0,"require"],[30,42,24,0],[30,43,24,0,"_dependencyMap"],[30,57,24,0],[31,2,25,0],[31,6,25,0,"_useKeyedChildListeners"],[31,29,25,0],[31,32,25,0,"require"],[31,39,25,0],[31,40,25,0,"_dependencyMap"],[31,54,25,0],[32,2,26,0],[32,6,26,0,"_useLazyValue"],[32,19,26,0],[32,22,26,0,"require"],[32,29,26,0],[32,30,26,0,"_dependencyMap"],[32,44,26,0],[33,2,27,0],[33,6,27,0,"_useNavigationHelpers"],[33,27,27,0],[33,30,27,0,"require"],[33,37,27,0],[33,38,27,0,"_dependencyMap"],[33,52,27,0],[34,2,28,0],[34,6,28,0,"_useOnAction"],[34,18,28,0],[34,21,28,0,"require"],[34,28,28,0],[34,29,28,0,"_dependencyMap"],[34,43,28,0],[35,2,29,0],[35,6,29,0,"_useOnGetState"],[35,20,29,0],[35,23,29,0,"require"],[35,30,29,0],[35,31,29,0,"_dependencyMap"],[35,45,29,0],[36,2,30,0],[36,6,30,0,"_useOnRouteFocus"],[36,22,30,0],[36,25,30,0,"require"],[36,32,30,0],[36,33,30,0,"_dependencyMap"],[36,47,30,0],[37,2,31,0],[37,6,31,0,"_useRegisterNavigator"],[37,27,31,0],[37,30,31,0,"require"],[37,37,31,0],[37,38,31,0,"_dependencyMap"],[37,52,31,0],[38,2,32,0],[38,6,32,0,"_useScheduleUpdate"],[38,24,32,0],[38,27,32,0,"require"],[38,34,32,0],[38,35,32,0,"_dependencyMap"],[38,49,32,0],[39,2,36,0],[39,6,36,0,"_jsxRuntime"],[39,17,36,0],[39,20,36,0,"require"],[39,27,36,0],[39,28,36,0,"_dependencyMap"],[39,42,36,0],[40,2,36,48],[40,11,36,48,"_interopRequireWildcard"],[40,35,36,48,"e"],[40,36,36,48],[40,38,36,48,"t"],[40,39,36,48],[40,68,36,48,"WeakMap"],[40,75,36,48],[40,81,36,48,"r"],[40,82,36,48],[40,89,36,48,"WeakMap"],[40,96,36,48],[40,100,36,48,"n"],[40,101,36,48],[40,108,36,48,"WeakMap"],[40,115,36,48],[40,127,36,48,"_interopRequireWildcard"],[40,150,36,48],[40,162,36,48,"_interopRequireWildcard"],[40,163,36,48,"e"],[40,164,36,48],[40,166,36,48,"t"],[40,167,36,48],[40,176,36,48,"t"],[40,177,36,48],[40,181,36,48,"e"],[40,182,36,48],[40,186,36,48,"e"],[40,187,36,48],[40,188,36,48,"__esModule"],[40,198,36,48],[40,207,36,48,"e"],[40,208,36,48],[40,214,36,48,"o"],[40,215,36,48],[40,217,36,48,"i"],[40,218,36,48],[40,220,36,48,"f"],[40,221,36,48],[40,226,36,48,"__proto__"],[40,235,36,48],[40,243,36,48,"default"],[40,250,36,48],[40,252,36,48,"e"],[40,253,36,48],[40,270,36,48,"e"],[40,271,36,48],[40,294,36,48,"e"],[40,295,36,48],[40,320,36,48,"e"],[40,321,36,48],[40,330,36,48,"f"],[40,331,36,48],[40,337,36,48,"o"],[40,338,36,48],[40,341,36,48,"t"],[40,342,36,48],[40,345,36,48,"n"],[40,346,36,48],[40,349,36,48,"r"],[40,350,36,48],[40,358,36,48,"o"],[40,359,36,48],[40,360,36,48,"has"],[40,363,36,48],[40,364,36,48,"e"],[40,365,36,48],[40,375,36,48,"o"],[40,376,36,48],[40,377,36,48,"get"],[40,380,36,48],[40,381,36,48,"e"],[40,382,36,48],[40,385,36,48,"o"],[40,386,36,48],[40,387,36,48,"set"],[40,390,36,48],[40,391,36,48,"e"],[40,392,36,48],[40,394,36,48,"f"],[40,395,36,48],[40,411,36,48,"t"],[40,412,36,48],[40,416,36,48,"e"],[40,417,36,48],[40,433,36,48,"t"],[40,434,36,48],[40,441,36,48,"hasOwnProperty"],[40,455,36,48],[40,456,36,48,"call"],[40,460,36,48],[40,461,36,48,"e"],[40,462,36,48],[40,464,36,48,"t"],[40,465,36,48],[40,472,36,48,"i"],[40,473,36,48],[40,477,36,48,"o"],[40,478,36,48],[40,481,36,48,"Object"],[40,487,36,48],[40,488,36,48,"defineProperty"],[40,502,36,48],[40,507,36,48,"Object"],[40,513,36,48],[40,514,36,48,"getOwnPropertyDescriptor"],[40,538,36,48],[40,539,36,48,"e"],[40,540,36,48],[40,542,36,48,"t"],[40,543,36,48],[40,550,36,48,"i"],[40,551,36,48],[40,552,36,48,"get"],[40,555,36,48],[40,559,36,48,"i"],[40,560,36,48],[40,561,36,48,"set"],[40,564,36,48],[40,568,36,48,"o"],[40,569,36,48],[40,570,36,48,"f"],[40,571,36,48],[40,573,36,48,"t"],[40,574,36,48],[40,576,36,48,"i"],[40,577,36,48],[40,581,36,48,"f"],[40,582,36,48],[40,583,36,48,"t"],[40,584,36,48],[40,588,36,48,"e"],[40,589,36,48],[40,590,36,48,"t"],[40,591,36,48],[40,602,36,48,"f"],[40,603,36,48],[40,608,36,48,"e"],[40,609,36,48],[40,611,36,48,"t"],[40,612,36,48],[41,2,34,0],[42,2,35,0],[44,2,37,0,"PrivateValueStore"],[44,26,37,17],[45,2,38,0],[45,8,38,6,"isScreen"],[45,16,38,14],[45,19,38,17,"child"],[45,24,38,22],[45,28,38,26],[46,4,39,2],[46,11,39,9,"child"],[46,16,39,14],[46,17,39,15,"type"],[46,21,39,19],[46,26,39,24,"Screen"],[46,40,39,30],[47,2,40,0],[47,3,40,1],[48,2,41,0],[48,8,41,6,"isGroup"],[48,15,41,13],[48,18,41,16,"child"],[48,23,41,21],[48,27,41,25],[49,4,42,2],[49,11,42,9,"child"],[49,16,42,14],[49,17,42,15,"type"],[49,21,42,19],[49,26,42,24,"React"],[49,31,42,29],[49,32,42,30,"Fragment"],[49,40,42,38],[49,44,42,42,"child"],[49,49,42,47],[49,50,42,48,"type"],[49,54,42,52],[49,59,42,57,"Group"],[49,71,42,62],[50,2,43,0],[50,3,43,1],[51,2,44,0],[51,8,44,6,"isValidKey"],[51,18,44,16],[51,21,44,19,"key"],[51,24,44,22],[51,28,44,26,"key"],[51,31,44,29],[51,36,44,34,"undefined"],[51,45,44,43],[51,49,44,47],[51,56,44,54,"key"],[51,59,44,57],[51,64,44,62],[51,72,44,70],[51,76,44,74,"key"],[51,79,44,77],[51,84,44,82],[51,86,44,84],[53,2,46,0],[54,0,47,0],[55,0,48,0],[56,0,49,0],[57,0,50,0],[58,2,51,0],[58,8,51,6,"getRouteConfigsFromChildren"],[58,35,51,33],[58,38,51,36,"getRouteConfigsFromChildren"],[58,39,51,37,"children"],[58,47,51,45],[58,49,51,47,"groupKey"],[58,57,51,55],[58,59,51,57,"groupOptions"],[58,71,51,69],[58,73,51,71,"groupLayout"],[58,84,51,82],[58,89,51,87],[59,4,52,2],[59,10,52,8,"configs"],[59,17,52,15],[59,20,52,18,"React"],[59,25,52,23],[59,26,52,24,"Children"],[59,34,52,32],[59,35,52,33,"toArray"],[59,42,52,40],[59,43,52,41,"children"],[59,51,52,49],[59,52,52,50],[59,53,52,51,"reduce"],[59,59,52,57],[59,60,52,58],[59,61,52,59,"acc"],[59,64,52,62],[59,66,52,64,"child"],[59,71,52,69],[59,76,52,74],[60,6,53,4],[60,10,53,8],[60,23,53,21,"React"],[60,28,53,26],[60,29,53,27,"isValidElement"],[60,43,53,41],[60,44,53,42,"child"],[60,49,53,47],[60,50,53,48],[60,52,53,50],[61,8,54,6],[61,12,54,10,"isScreen"],[61,20,54,18],[61,21,54,19,"child"],[61,26,54,24],[61,27,54,25],[61,29,54,27],[62,10,55,8],[63,10,56,8],[65,10,58,8],[65,14,58,12],[65,21,58,19,"child"],[65,26,58,24],[65,27,58,25,"props"],[65,32,58,30],[65,37,58,35],[65,45,58,43],[65,49,58,47,"child"],[65,54,58,52],[65,55,58,53,"props"],[65,60,58,58],[65,65,58,63],[65,69,58,67],[65,71,58,69],[66,12,59,10],[66,18,59,16],[66,22,59,20,"Error"],[66,27,59,25],[66,28,59,26],[66,64,59,62],[66,65,59,63],[67,10,60,8],[68,10,61,8],[68,14,61,12],[68,21,61,19,"child"],[68,26,61,24],[68,27,61,25,"props"],[68,32,61,30],[68,33,61,31,"name"],[68,37,61,35],[68,42,61,40],[68,50,61,48],[68,54,61,52,"child"],[68,59,61,57],[68,60,61,58,"props"],[68,65,61,63],[68,66,61,64,"name"],[68,70,61,68],[68,75,61,73],[68,77,61,75],[68,79,61,77],[69,12,62,10],[69,18,62,16],[69,22,62,20,"Error"],[69,27,62,25],[69,28,62,26],[69,52,62,50,"JSON"],[69,56,62,54],[69,57,62,55,"stringify"],[69,66,62,64],[69,67,62,65,"child"],[69,72,62,70],[69,73,62,71,"props"],[69,78,62,76],[69,79,62,77,"name"],[69,83,62,81],[69,84,62,82],[69,134,62,132],[69,135,62,133],[70,10,63,8],[71,10,64,8],[71,14,64,12,"child"],[71,19,64,17],[71,20,64,18,"props"],[71,25,64,23],[71,26,64,24,"navigationKey"],[71,39,64,37],[71,44,64,42,"undefined"],[71,53,64,51],[71,58,64,56],[71,65,64,63,"child"],[71,70,64,68],[71,71,64,69,"props"],[71,76,64,74],[71,77,64,75,"navigationKey"],[71,90,64,88],[71,95,64,93],[71,103,64,101],[71,107,64,105,"child"],[71,112,64,110],[71,113,64,111,"props"],[71,118,64,116],[71,119,64,117,"navigationKey"],[71,132,64,130],[71,137,64,135],[71,139,64,137],[71,140,64,138],[71,142,64,140],[72,12,65,10],[72,18,65,16],[72,22,65,20,"Error"],[72,27,65,25],[72,28,65,26],[72,68,65,66,"JSON"],[72,72,65,70],[72,73,65,71,"stringify"],[72,82,65,80],[72,83,65,81,"child"],[72,88,65,86],[72,89,65,87,"props"],[72,94,65,92],[72,95,65,93,"navigationKey"],[72,108,65,106],[72,109,65,107],[72,130,65,128,"child"],[72,135,65,133],[72,136,65,134,"props"],[72,141,65,139],[72,142,65,140,"name"],[72,146,65,144],[72,196,65,194],[72,197,65,195],[73,10,66,8],[74,10,67,8,"acc"],[74,13,67,11],[74,14,67,12,"push"],[74,18,67,16],[74,19,67,17],[75,12,68,10,"keys"],[75,16,68,14],[75,18,68,16],[75,19,68,17,"groupKey"],[75,27,68,25],[75,29,68,27,"child"],[75,34,68,32],[75,35,68,33,"props"],[75,40,68,38],[75,41,68,39,"navigationKey"],[75,54,68,52],[75,55,68,53],[76,12,69,10,"options"],[76,19,69,17],[76,21,69,19,"groupOptions"],[76,33,69,31],[77,12,70,10,"layout"],[77,18,70,16],[77,20,70,18,"groupLayout"],[77,31,70,29],[78,12,71,10,"props"],[78,17,71,15],[78,19,71,17,"child"],[78,24,71,22],[78,25,71,23,"props"],[79,10,72,8],[79,11,72,9],[79,12,72,10],[80,10,73,8],[80,17,73,15,"acc"],[80,20,73,18],[81,8,74,6],[82,8,75,6],[82,12,75,10,"isGroup"],[82,19,75,17],[82,20,75,18,"child"],[82,25,75,23],[82,26,75,24],[82,28,75,26],[83,10,76,8],[83,14,76,12],[83,15,76,13,"isValidKey"],[83,25,76,23],[83,26,76,24,"child"],[83,31,76,29],[83,32,76,30,"props"],[83,37,76,35],[83,38,76,36,"navigationKey"],[83,51,76,49],[83,52,76,50],[83,54,76,52],[84,12,77,10],[84,18,77,16],[84,22,77,20,"Error"],[84,27,77,25],[84,28,77,26],[84,68,77,66,"JSON"],[84,72,77,70],[84,73,77,71,"stringify"],[84,82,77,80],[84,83,77,81,"child"],[84,88,77,86],[84,89,77,87,"props"],[84,94,77,92],[84,95,77,93,"navigationKey"],[84,108,77,106],[84,109,77,107],[84,173,77,171],[84,174,77,172],[85,10,78,8],[87,10,80,8],[88,10,81,8],[89,10,82,8,"acc"],[89,13,82,11],[89,14,82,12,"push"],[89,18,82,16],[89,19,82,17],[89,22,82,20,"getRouteConfigsFromChildren"],[89,49,82,47],[89,50,82,48,"child"],[89,55,82,53],[89,56,82,54,"props"],[89,61,82,59],[89,62,82,60,"children"],[89,70,82,68],[89,72,82,70,"child"],[89,77,82,75],[89,78,82,76,"props"],[89,83,82,81],[89,84,82,82,"navigationKey"],[89,97,82,95],[90,10,83,8],[91,10,84,8],[92,10,85,8,"child"],[92,15,85,13],[92,16,85,14,"type"],[92,20,85,18],[92,25,85,23,"Group"],[92,37,85,28],[92,40,85,31,"groupOptions"],[92,52,85,43],[92,55,85,46,"groupOptions"],[92,67,85,58],[92,71,85,62],[92,75,85,66],[92,78,85,69],[92,79,85,70],[92,82,85,73,"groupOptions"],[92,94,85,85],[92,96,85,87,"child"],[92,101,85,92],[92,102,85,93,"props"],[92,107,85,98],[92,108,85,99,"screenOptions"],[92,121,85,112],[92,122,85,113],[92,125,85,116],[92,126,85,117,"child"],[92,131,85,122],[92,132,85,123,"props"],[92,137,85,128],[92,138,85,129,"screenOptions"],[92,151,85,142],[92,152,85,143],[92,154,85,145],[92,161,85,152,"child"],[92,166,85,157],[92,167,85,158,"props"],[92,172,85,163],[92,173,85,164,"screenLayout"],[92,185,85,176],[92,190,85,181],[92,200,85,191],[92,203,85,194,"child"],[92,208,85,199],[92,209,85,200,"props"],[92,214,85,205],[92,215,85,206,"screenLayout"],[92,227,85,218],[92,230,85,221,"groupLayout"],[92,241,85,232],[92,242,85,233],[92,243,85,234],[93,10,86,8],[93,17,86,15,"acc"],[93,20,86,18],[94,8,87,6],[95,6,88,4],[96,6,89,4],[96,12,89,10],[96,16,89,14,"Error"],[96,21,89,19],[96,22,89,20],[96,122,89,120],[96,135,89,133],[96,149,89,133,"React"],[96,154,89,138],[96,155,89,139,"isValidElement"],[96,169,89,153],[96,170,89,154,"child"],[96,175,89,159],[96,176,89,160],[96,179,89,163],[96,183,89,167],[96,190,89,174,"child"],[96,195,89,179],[96,196,89,180,"type"],[96,200,89,184],[96,205,89,189],[96,213,89,197],[96,216,89,200,"child"],[96,221,89,205],[96,222,89,206,"type"],[96,226,89,210],[96,229,89,213,"child"],[96,234,89,218],[96,235,89,219,"type"],[96,239,89,223],[96,241,89,225,"name"],[96,245,89,229],[96,249,89,233,"child"],[96,254,89,238],[96,255,89,239,"props"],[96,260,89,244],[96,264,89,248],[96,268,89,252],[96,272,89,256],[96,279,89,263,"child"],[96,284,89,268],[96,285,89,269,"props"],[96,290,89,274],[96,295,89,279],[96,303,89,287],[96,307,89,291],[96,313,89,297],[96,317,89,301,"child"],[96,322,89,306],[96,323,89,307,"props"],[96,328,89,312],[96,332,89,316,"child"],[96,337,89,321],[96,338,89,322,"props"],[96,343,89,327],[96,345,89,329,"name"],[96,349,89,333],[96,352,89,336],[96,372,89,356,"child"],[96,377,89,361],[96,378,89,362,"props"],[96,383,89,367],[96,384,89,368,"name"],[96,388,89,372],[96,391,89,375],[96,394,89,378],[96,396,89,380],[96,398,89,382],[96,401,89,385],[96,408,89,392,"child"],[96,413,89,397],[96,418,89,402],[96,426,89,410],[96,429,89,413,"JSON"],[96,433,89,417],[96,434,89,418,"stringify"],[96,443,89,427],[96,444,89,428,"child"],[96,449,89,433],[96,450,89,434],[96,453,89,437],[96,457,89,441,"String"],[96,463,89,447],[96,464,89,448,"child"],[96,469,89,453],[96,470,89,454],[96,473,89,457],[96,565,89,549],[96,566,89,550],[97,4,90,2],[97,5,90,3],[97,7,90,5],[97,9,90,7],[97,10,90,8],[98,4,91,2],[98,8,91,6,"process"],[98,15,91,13],[98,16,91,14,"env"],[98,19,91,17],[98,20,91,18,"NODE_ENV"],[98,28,91,26],[98,33,91,31],[98,45,91,43],[98,47,91,45],[99,6,92,4,"configs"],[99,13,92,11],[99,14,92,12,"forEach"],[99,21,92,19],[99,22,92,20,"config"],[99,28,92,26],[99,32,92,30],[100,8,93,6],[100,14,93,12],[101,10,94,8,"name"],[101,14,94,12],[102,10,95,8,"children"],[102,18,95,16],[103,10,96,8,"component"],[103,19,96,17],[104,10,97,8,"getComponent"],[105,8,98,6],[105,9,98,7],[105,12,98,10,"config"],[105,18,98,16],[105,19,98,17,"props"],[105,24,98,22],[106,8,99,6],[106,12,99,10,"children"],[106,20,99,18],[106,24,99,22],[106,28,99,26],[106,32,99,30,"component"],[106,41,99,39],[106,46,99,44,"undefined"],[106,55,99,53],[106,59,99,57,"getComponent"],[106,71,99,69],[106,76,99,74,"undefined"],[106,85,99,83],[106,87,99,85],[107,10,100,8],[107,14,100,12,"children"],[107,22,100,20],[107,26,100,24],[107,30,100,28],[107,34,100,32,"component"],[107,43,100,41],[107,48,100,46,"undefined"],[107,57,100,55],[107,59,100,57],[108,12,101,10],[108,18,101,16],[108,22,101,20,"Error"],[108,27,101,25],[108,28,101,26],[108,89,101,87,"name"],[108,93,101,91],[108,129,101,127],[108,130,101,128],[109,10,102,8],[110,10,103,8],[110,14,103,12,"children"],[110,22,103,20],[110,26,103,24],[110,30,103,28],[110,34,103,32,"getComponent"],[110,46,103,44],[110,51,103,49,"undefined"],[110,60,103,58],[110,62,103,60],[111,12,104,10],[111,18,104,16],[111,22,104,20,"Error"],[111,27,104,25],[111,28,104,26],[111,92,104,90,"name"],[111,96,104,94],[111,132,104,130],[111,133,104,131],[112,10,105,8],[113,10,106,8],[113,14,106,12,"component"],[113,23,106,21],[113,28,106,26,"undefined"],[113,37,106,35],[113,41,106,39,"getComponent"],[113,53,106,51],[113,58,106,56,"undefined"],[113,67,106,65],[113,69,106,67],[114,12,107,10],[114,18,107,16],[114,22,107,20,"Error"],[114,27,107,25],[114,28,107,26],[114,93,107,91,"name"],[114,97,107,95],[114,133,107,131],[114,134,107,132],[115,10,108,8],[116,10,109,8],[116,14,109,12,"children"],[116,22,109,20],[116,26,109,24],[116,30,109,28],[116,34,109,32],[116,41,109,39,"children"],[116,49,109,47],[116,54,109,52],[116,64,109,62],[116,66,109,64],[117,12,110,10],[117,18,110,16],[117,22,110,20,"Error"],[117,27,110,25],[117,28,110,26],[117,88,110,86,"name"],[117,92,110,90],[117,145,110,143],[117,146,110,144],[118,10,111,8],[119,10,112,8],[119,14,112,12,"component"],[119,23,112,21],[119,28,112,26,"undefined"],[119,37,112,35],[119,41,112,39],[119,42,112,40],[119,46,112,40,"isValidElementType"],[119,73,112,58],[119,75,112,59,"component"],[119,84,112,68],[119,85,112,69],[119,87,112,71],[120,12,113,10],[120,18,113,16],[120,22,113,20,"Error"],[120,27,113,25],[120,28,113,26],[120,89,113,87,"name"],[120,93,113,91],[120,133,113,131],[120,134,113,132],[121,10,114,8],[122,10,115,8],[122,14,115,12,"getComponent"],[122,26,115,24],[122,31,115,29,"undefined"],[122,40,115,38],[122,44,115,42],[122,51,115,49,"getComponent"],[122,63,115,61],[122,68,115,66],[122,78,115,76],[122,80,115,78],[123,12,116,10],[123,18,116,16],[123,22,116,20,"Error"],[123,27,116,25],[123,28,116,26],[123,92,116,90,"name"],[123,96,116,94],[123,151,116,149],[123,152,116,150],[124,10,117,8],[125,10,118,8],[125,14,118,12],[125,21,118,19,"component"],[125,30,118,28],[125,35,118,33],[125,45,118,43],[125,47,118,45],[126,12,119,10],[126,16,119,14,"component"],[126,25,119,23],[126,26,119,24,"name"],[126,30,119,28],[126,35,119,33],[126,46,119,44],[126,48,119,46],[127,14,120,12],[128,14,121,12],[129,14,122,12],[130,14,123,12,"console"],[130,21,123,19],[130,22,123,20,"warn"],[130,26,123,24],[130,27,123,25],[130,112,123,110,"name"],[130,116,123,114],[130,395,123,393],[130,396,123,394],[131,12,124,10],[131,13,124,11],[131,19,124,17],[131,23,124,21],[131,31,124,29],[131,32,124,30,"test"],[131,36,124,34],[131,37,124,35,"component"],[131,46,124,44],[131,47,124,45,"name"],[131,51,124,49],[131,52,124,50],[131,54,124,52],[132,14,125,12,"console"],[132,21,125,19],[132,22,125,20,"warn"],[132,26,125,24],[132,27,125,25],[132,61,125,59,"component"],[132,70,125,68],[132,71,125,69,"name"],[132,75,125,73],[132,96,125,94,"name"],[132,100,125,98],[132,301,125,299],[132,302,125,300],[133,12,126,10],[134,10,127,8],[135,8,128,6],[135,9,128,7],[135,15,128,13],[136,10,129,8],[136,16,129,14],[136,20,129,18,"Error"],[136,25,129,23],[136,26,129,24],[136,108,129,106,"name"],[136,112,129,110],[136,293,129,291],[136,294,129,292],[137,8,130,6],[138,6,131,4],[138,7,131,5],[138,8,131,6],[139,4,132,2],[140,4,133,2],[140,11,133,9,"configs"],[140,18,133,16],[141,2,134,0],[141,3,134,1],[143,2,136,0],[144,0,137,0],[145,0,138,0],[146,0,139,0],[147,0,140,0],[148,0,141,0],[149,0,142,0],[150,2,143,7],[150,11,143,16,"useNavigationBuilder"],[150,31,143,36,"useNavigationBuilder"],[150,32,143,37,"createRouter"],[150,44,143,49],[150,46,143,51,"options"],[150,53,143,58],[150,55,143,60],[151,4,144,2],[151,10,144,8,"navigatorKey"],[151,22,144,20],[151,25,144,23],[151,29,144,23,"useRegisterNavigator"],[151,71,144,43],[151,73,144,44],[151,74,144,45],[152,4,145,2],[152,10,145,8,"route"],[152,15,145,13],[152,18,145,16,"React"],[152,23,145,21],[152,24,145,22,"useContext"],[152,34,145,32],[152,35,145,33,"NavigationRouteContext"],[152,81,145,55],[152,82,145,56],[153,4,146,2],[153,10,146,8],[154,6,147,4,"children"],[154,14,147,12],[155,6,148,4,"layout"],[155,12,148,10],[156,6,149,4,"screenOptions"],[156,19,149,17],[157,6,150,4,"screenLayout"],[157,18,150,16],[158,6,151,4,"screenListeners"],[158,21,151,19],[159,6,152,4,"UNSTABLE_router"],[159,21,152,19],[160,6,153,4],[160,9,153,7,"rest"],[161,4,154,2],[161,5,154,3],[161,8,154,6,"options"],[161,15,154,13],[162,4,155,2],[162,10,155,8,"routeConfigs"],[162,22,155,20],[162,25,155,23,"getRouteConfigsFromChildren"],[162,52,155,50],[162,53,155,51,"children"],[162,61,155,59],[162,62,155,60],[163,4,156,2],[163,10,156,8,"router"],[163,16,156,14],[163,19,156,17],[163,23,156,17,"useLazyValue"],[163,49,156,29],[163,51,156,30],[163,57,156,36],[164,6,157,4],[164,10,157,8,"rest"],[164,14,157,12],[164,15,157,13,"initialRouteName"],[164,31,157,29],[164,35,157,33],[164,39,157,37],[164,43,157,41,"routeConfigs"],[164,55,157,53],[164,56,157,54,"every"],[164,61,157,59],[164,62,157,60,"config"],[164,68,157,66],[164,72,157,70,"config"],[164,78,157,76],[164,79,157,77,"props"],[164,84,157,82],[164,85,157,83,"name"],[164,89,157,87],[164,94,157,92,"rest"],[164,98,157,96],[164,99,157,97,"initialRouteName"],[164,115,157,113],[164,116,157,114],[164,118,157,116],[165,8,158,6],[165,14,158,12],[165,18,158,16,"Error"],[165,23,158,21],[165,24,158,22],[165,57,158,55,"rest"],[165,61,158,59],[165,62,158,60,"initialRouteName"],[165,78,158,76],[165,111,158,109],[165,112,158,110],[166,6,159,4],[167,6,160,4],[167,12,160,10,"original"],[167,20,160,18],[167,23,160,21,"createRouter"],[167,35,160,33],[167,36,160,34,"rest"],[167,40,160,38],[167,41,160,39],[168,6,161,4],[168,10,161,8,"UNSTABLE_router"],[168,25,161,23],[168,29,161,27],[168,33,161,31],[168,35,161,33],[169,8,162,6],[169,14,162,12,"overrides"],[169,23,162,21],[169,26,162,24,"UNSTABLE_router"],[169,41,162,39],[169,42,162,40,"original"],[169,50,162,48],[169,51,162,49],[170,8,163,6],[170,15,163,13],[171,10,164,8],[171,13,164,11,"original"],[171,21,164,19],[172,10,165,8],[172,13,165,11,"overrides"],[173,8,166,6],[173,9,166,7],[174,6,167,4],[175,6,168,4],[175,13,168,11,"original"],[175,21,168,19],[176,4,169,2],[176,5,169,3],[176,6,169,4],[177,4,170,2],[177,10,170,8,"screens"],[177,17,170,15],[177,20,170,18,"routeConfigs"],[177,32,170,30],[177,33,170,31,"reduce"],[177,39,170,37],[177,40,170,38],[177,41,170,39,"acc"],[177,44,170,42],[177,46,170,44,"config"],[177,52,170,50],[177,57,170,55],[178,6,171,4],[178,10,171,8,"config"],[178,16,171,14],[178,17,171,15,"props"],[178,22,171,20],[178,23,171,21,"name"],[178,27,171,25],[178,31,171,29,"acc"],[178,34,171,32],[178,36,171,34],[179,8,172,6],[179,14,172,12],[179,18,172,16,"Error"],[179,23,172,21],[179,24,172,22],[179,133,172,131,"config"],[179,139,172,137],[179,140,172,138,"props"],[179,145,172,143],[179,146,172,144,"name"],[179,150,172,148],[179,154,172,152],[179,155,172,153],[180,6,173,4],[181,6,174,4,"acc"],[181,9,174,7],[181,10,174,8,"config"],[181,16,174,14],[181,17,174,15,"props"],[181,22,174,20],[181,23,174,21,"name"],[181,27,174,25],[181,28,174,26],[181,31,174,29,"config"],[181,37,174,35],[182,6,175,4],[182,13,175,11,"acc"],[182,16,175,14],[183,4,176,2],[183,5,176,3],[183,7,176,5],[183,8,176,6],[183,9,176,7],[183,10,176,8],[184,4,177,2],[184,10,177,8,"routeNames"],[184,20,177,18],[184,23,177,21,"routeConfigs"],[184,35,177,33],[184,36,177,34,"map"],[184,39,177,37],[184,40,177,38,"config"],[184,46,177,44],[184,50,177,48,"config"],[184,56,177,54],[184,57,177,55,"props"],[184,62,177,60],[184,63,177,61,"name"],[184,67,177,65],[184,68,177,66],[185,4,178,2],[185,10,178,8,"routeKeyList"],[185,22,178,20],[185,25,178,23,"routeNames"],[185,35,178,33],[185,36,178,34,"reduce"],[185,42,178,40],[185,43,178,41],[185,44,178,42,"acc"],[185,47,178,45],[185,49,178,47,"curr"],[185,53,178,51],[185,58,178,56],[186,6,179,4,"acc"],[186,9,179,7],[186,10,179,8,"curr"],[186,14,179,12],[186,15,179,13],[186,18,179,16,"screens"],[186,25,179,23],[186,26,179,24,"curr"],[186,30,179,28],[186,31,179,29],[186,32,179,30,"keys"],[186,36,179,34],[186,37,179,35,"map"],[186,40,179,38],[186,41,179,39,"key"],[186,44,179,42],[186,48,179,46,"key"],[186,51,179,49],[186,55,179,53],[186,57,179,55],[186,58,179,56],[186,59,179,57,"join"],[186,63,179,61],[186,64,179,62],[186,67,179,65],[186,68,179,66],[187,6,180,4],[187,13,180,11,"acc"],[187,16,180,14],[188,4,181,2],[188,5,181,3],[188,7,181,5],[188,8,181,6],[188,9,181,7],[188,10,181,8],[189,4,182,2],[189,10,182,8,"routeParamList"],[189,24,182,22],[189,27,182,25,"routeNames"],[189,37,182,35],[189,38,182,36,"reduce"],[189,44,182,42],[189,45,182,43],[189,46,182,44,"acc"],[189,49,182,47],[189,51,182,49,"curr"],[189,55,182,53],[189,60,182,58],[190,6,183,4],[190,12,183,10],[191,8,184,6,"initialParams"],[192,6,185,4],[192,7,185,5],[192,10,185,8,"screens"],[192,17,185,15],[192,18,185,16,"curr"],[192,22,185,20],[192,23,185,21],[192,24,185,22,"props"],[192,29,185,27],[193,6,186,4,"acc"],[193,9,186,7],[193,10,186,8,"curr"],[193,14,186,12],[193,15,186,13],[193,18,186,16,"initialParams"],[193,31,186,29],[194,6,187,4],[194,13,187,11,"acc"],[194,16,187,14],[195,4,188,2],[195,5,188,3],[195,7,188,5],[195,8,188,6],[195,9,188,7],[195,10,188,8],[196,4,189,2],[196,10,189,8,"routeGetIdList"],[196,24,189,22],[196,27,189,25,"routeNames"],[196,37,189,35],[196,38,189,36,"reduce"],[196,44,189,42],[196,45,189,43],[196,46,189,44,"acc"],[196,49,189,47],[196,51,189,49,"curr"],[196,55,189,53],[196,60,189,58,"Object"],[196,66,189,64],[196,67,189,65,"assign"],[196,73,189,71],[196,74,189,72,"acc"],[196,77,189,75],[196,79,189,77],[197,6,190,4],[197,7,190,5,"curr"],[197,11,190,9],[197,14,190,12,"screens"],[197,21,190,19],[197,22,190,20,"curr"],[197,26,190,24],[197,27,190,25],[197,28,190,26,"props"],[197,33,190,31],[197,34,190,32,"getId"],[198,4,191,2],[198,5,191,3],[198,6,191,4],[198,8,191,6],[198,9,191,7],[198,10,191,8],[198,11,191,9],[199,4,192,2],[199,8,192,6],[199,9,192,7,"routeNames"],[199,19,192,17],[199,20,192,18,"length"],[199,26,192,24],[199,28,192,26],[200,6,193,4],[200,12,193,10],[200,16,193,14,"Error"],[200,21,193,19],[200,22,193,20],[200,114,193,112],[200,115,193,113],[201,4,194,2],[202,4,195,2],[202,10,195,8,"isStateValid"],[202,22,195,20],[202,25,195,23,"React"],[202,30,195,28],[202,31,195,29,"useCallback"],[202,42,195,40],[202,43,195,41,"state"],[202,48,195,46],[202,52,195,50,"state"],[202,57,195,55],[202,58,195,56,"type"],[202,62,195,60],[202,67,195,65,"undefined"],[202,76,195,74],[202,80,195,78,"state"],[202,85,195,83],[202,86,195,84,"type"],[202,90,195,88],[202,95,195,93,"router"],[202,101,195,99],[202,102,195,100,"type"],[202,106,195,104],[202,108,195,106],[202,109,195,107,"router"],[202,115,195,113],[202,116,195,114,"type"],[202,120,195,118],[202,121,195,119],[202,122,195,120],[203,4,196,2],[203,10,196,8,"isStateInitialized"],[203,28,196,26],[203,31,196,29,"React"],[203,36,196,34],[203,37,196,35,"useCallback"],[203,48,196,46],[203,49,196,47,"state"],[203,54,196,52],[203,58,196,56,"state"],[203,63,196,61],[203,68,196,66,"undefined"],[203,77,196,75],[203,81,196,79,"state"],[203,86,196,84],[203,87,196,85,"stale"],[203,92,196,90],[203,97,196,95],[203,102,196,100],[203,106,196,104,"isStateValid"],[203,118,196,116],[203,119,196,117,"state"],[203,124,196,122],[203,125,196,123],[203,127,196,125],[203,128,196,126,"isStateValid"],[203,140,196,138],[203,141,196,139],[203,142,196,140],[204,4,197,2],[204,10,197,8],[205,6,198,4,"state"],[205,11,198,9],[205,13,198,11,"currentState"],[205,25,198,23],[206,6,199,4,"getState"],[206,14,199,12],[206,16,199,14,"getCurrentState"],[206,31,199,29],[207,6,200,4,"setState"],[207,14,200,12],[207,16,200,14,"setCurrentState"],[207,31,200,29],[208,6,201,4,"setKey"],[208,12,201,10],[209,6,202,4,"getKey"],[209,12,202,10],[210,6,203,4,"getIsInitial"],[211,4,204,2],[211,5,204,3],[211,8,204,6,"React"],[211,13,204,11],[211,14,204,12,"useContext"],[211,24,204,22],[211,25,204,23,"NavigationStateContext"],[211,71,204,45],[211,72,204,46],[212,4,205,2],[212,10,205,8,"stateCleanedUp"],[212,24,205,22],[212,27,205,25,"React"],[212,32,205,30],[212,33,205,31,"useRef"],[212,39,205,37],[212,40,205,38],[212,45,205,43],[212,46,205,44],[213,4,206,2],[213,10,206,8,"setState"],[213,18,206,16],[213,21,206,19],[213,25,206,19,"useLatestCallback"],[213,51,206,36],[213,53,206,37,"state"],[213,58,206,42],[213,62,206,46],[214,6,207,4],[214,10,207,8,"stateCleanedUp"],[214,24,207,22],[214,25,207,23,"current"],[214,32,207,30],[214,34,207,32],[215,8,208,6],[216,8,209,6],[217,8,210,6],[218,8,211,6],[219,6,212,4],[220,6,213,4,"setCurrentState"],[220,21,213,19],[220,22,213,20,"state"],[220,27,213,25],[220,28,213,26],[221,4,214,2],[221,5,214,3],[221,6,214,4],[222,4,215,2],[222,10,215,8],[222,11,215,9,"initializedState"],[222,27,215,25],[222,29,215,27,"isFirstStateInitialization"],[222,55,215,53],[222,56,215,54],[222,59,215,57,"React"],[222,64,215,62],[222,65,215,63,"useMemo"],[222,72,215,70],[222,73,215,71],[222,79,215,77],[223,6,216,4],[223,12,216,10,"initialRouteParamList"],[223,33,216,31],[223,36,216,34,"routeNames"],[223,46,216,44],[223,47,216,45,"reduce"],[223,53,216,51],[223,54,216,52],[223,55,216,53,"acc"],[223,58,216,56],[223,60,216,58,"curr"],[223,64,216,62],[223,69,216,67],[224,8,217,6],[224,14,217,12],[225,10,218,8,"initialParams"],[226,8,219,6],[226,9,219,7],[226,12,219,10,"screens"],[226,19,219,17],[226,20,219,18,"curr"],[226,24,219,22],[226,25,219,23],[226,26,219,24,"props"],[226,31,219,29],[227,8,220,6],[227,14,220,12,"initialParamsFromParams"],[227,37,220,35],[227,40,220,38,"route"],[227,45,220,43],[227,47,220,45,"params"],[227,53,220,51],[227,55,220,53,"state"],[227,60,220,58],[227,64,220,62],[227,68,220,66],[227,72,220,70,"route"],[227,77,220,75],[227,79,220,77,"params"],[227,85,220,83],[227,87,220,85,"initial"],[227,94,220,92],[227,99,220,97],[227,104,220,102],[227,108,220,106,"route"],[227,113,220,111],[227,115,220,113,"params"],[227,121,220,119],[227,123,220,121,"screen"],[227,129,220,127],[227,134,220,132,"curr"],[227,138,220,136],[227,141,220,139,"route"],[227,146,220,144],[227,147,220,145,"params"],[227,153,220,151],[227,154,220,152,"params"],[227,160,220,158],[227,163,220,161,"undefined"],[227,172,220,170],[228,8,221,6,"acc"],[228,11,221,9],[228,12,221,10,"curr"],[228,16,221,14],[228,17,221,15],[228,20,221,18,"initialParams"],[228,33,221,31],[228,38,221,36,"undefined"],[228,47,221,45],[228,51,221,49,"initialParamsFromParams"],[228,74,221,72],[228,79,221,77,"undefined"],[228,88,221,86],[228,91,221,89],[229,10,222,8],[229,13,222,11,"initialParams"],[229,26,222,24],[230,10,223,8],[230,13,223,11,"initialParamsFromParams"],[231,8,224,6],[231,9,224,7],[231,12,224,10,"undefined"],[231,21,224,19],[232,8,225,6],[232,15,225,13,"acc"],[232,18,225,16],[233,6,226,4],[233,7,226,5],[233,9,226,7],[233,10,226,8],[233,11,226,9],[233,12,226,10],[235,6,228,4],[236,6,229,4],[237,6,230,4],[238,6,231,4],[239,6,232,4],[239,10,232,8],[239,11,232,9,"currentState"],[239,23,232,21],[239,28,232,26,"undefined"],[239,37,232,35],[239,41,232,39],[239,42,232,40,"isStateValid"],[239,54,232,52],[239,55,232,53,"currentState"],[239,67,232,65],[239,68,232,66],[239,73,232,71,"route"],[239,78,232,76],[239,80,232,78,"params"],[239,86,232,84],[239,88,232,86,"state"],[239,93,232,91],[239,97,232,95],[239,101,232,99],[239,105,232,103],[239,107,232,105],[239,114,232,112,"route"],[239,119,232,117],[239,121,232,119,"params"],[239,127,232,125],[239,129,232,127,"screen"],[239,135,232,133],[239,140,232,138],[239,148,232,146],[239,152,232,150,"route"],[239,157,232,155],[239,159,232,157,"params"],[239,165,232,163],[239,167,232,165,"initial"],[239,174,232,172],[239,179,232,177],[239,184,232,182],[239,185,232,183],[239,187,232,185],[240,8,233,6],[240,15,233,13],[240,16,233,14,"router"],[240,22,233,20],[240,23,233,21,"getInitialState"],[240,38,233,36],[240,39,233,37],[241,10,234,8,"routeNames"],[241,20,234,18],[242,10,235,8,"routeParamList"],[242,24,235,22],[242,26,235,24,"initialRouteParamList"],[242,47,235,45],[243,10,236,8,"routeGetIdList"],[244,8,237,6],[244,9,237,7],[244,10,237,8],[244,12,237,10],[244,16,237,14],[244,17,237,15],[245,6,238,4],[245,7,238,5],[245,13,238,11],[246,8,239,6],[246,12,239,10,"stateFromParams"],[246,27,239,25],[247,8,240,6],[247,12,240,10,"route"],[247,17,240,15],[247,19,240,17,"params"],[247,25,240,23],[247,27,240,25,"state"],[247,32,240,30],[247,36,240,34],[247,40,240,38],[247,42,240,40],[248,10,241,8,"stateFromParams"],[248,25,241,23],[248,28,241,26,"route"],[248,33,241,31],[248,34,241,32,"params"],[248,40,241,38],[248,41,241,39,"state"],[248,46,241,44],[249,8,242,6],[249,9,242,7],[249,15,242,13],[249,19,242,17],[249,26,242,24,"route"],[249,31,242,29],[249,33,242,31,"params"],[249,39,242,37],[249,41,242,39,"screen"],[249,47,242,45],[249,52,242,50],[249,60,242,58],[249,64,242,62,"route"],[249,69,242,67],[249,71,242,69,"params"],[249,77,242,75],[249,79,242,77,"initial"],[249,86,242,84],[249,91,242,89],[249,96,242,94],[249,98,242,96],[250,10,243,8,"stateFromParams"],[250,25,243,23],[250,28,243,26],[251,12,244,10,"index"],[251,17,244,15],[251,19,244,17],[251,20,244,18],[252,12,245,10,"routes"],[252,18,245,16],[252,20,245,18],[252,21,245,19],[253,14,246,12,"name"],[253,18,246,16],[253,20,246,18,"route"],[253,25,246,23],[253,26,246,24,"params"],[253,32,246,30],[253,33,246,31,"screen"],[253,39,246,37],[254,14,247,12,"params"],[254,20,247,18],[254,22,247,20,"route"],[254,27,247,25],[254,28,247,26,"params"],[254,34,247,32],[254,35,247,33,"params"],[254,41,247,39],[255,14,248,12,"path"],[255,18,248,16],[255,20,248,18,"route"],[255,25,248,23],[255,26,248,24,"params"],[255,32,248,30],[255,33,248,31,"path"],[256,12,249,10],[256,13,249,11],[257,10,250,8],[257,11,250,9],[258,8,251,6],[259,8,252,6],[259,15,252,13],[259,16,252,14,"router"],[259,22,252,20],[259,23,252,21,"getRehydratedState"],[259,41,252,39],[259,42,252,40,"stateFromParams"],[259,57,252,55],[259,61,252,59,"currentState"],[259,73,252,71],[259,75,252,73],[260,10,253,8,"routeNames"],[260,20,253,18],[261,10,254,8,"routeParamList"],[261,24,254,22],[261,26,254,24,"initialRouteParamList"],[261,47,254,45],[262,10,255,8,"routeGetIdList"],[263,8,256,6],[263,9,256,7],[263,10,256,8],[263,12,256,10],[263,17,256,15],[263,18,256,16],[264,6,257,4],[265,6,258,4],[266,6,259,4],[267,6,260,4],[268,6,261,4],[269,6,262,4],[270,6,263,4],[271,4,264,2],[271,5,264,3],[271,7,264,5],[271,8,264,6,"currentState"],[271,20,264,18],[271,22,264,20,"router"],[271,28,264,26],[271,30,264,28,"isStateValid"],[271,42,264,40],[271,43,264,41],[271,44,264,42],[272,4,265,2],[272,10,265,8,"previousRouteKeyListRef"],[272,33,265,31],[272,36,265,34,"React"],[272,41,265,39],[272,42,265,40,"useRef"],[272,48,265,46],[272,49,265,47,"routeKeyList"],[272,61,265,59],[272,62,265,60],[273,4,266,2,"React"],[273,9,266,7],[273,10,266,8,"useEffect"],[273,19,266,17],[273,20,266,18],[273,26,266,24],[274,6,267,4,"previousRouteKeyListRef"],[274,29,267,27],[274,30,267,28,"current"],[274,37,267,35],[274,40,267,38,"routeKeyList"],[274,52,267,50],[275,4,268,2],[275,5,268,3],[275,6,268,4],[276,4,269,2],[276,10,269,8,"previousRouteKeyList"],[276,30,269,28],[276,33,269,31,"previousRouteKeyListRef"],[276,56,269,54],[276,57,269,55,"current"],[276,64,269,62],[277,4,270,2],[277,8,270,6,"state"],[277,13,270,11],[278,4,271,2],[279,4,272,2],[280,4,273,2],[281,4,274,2,"isStateInitialized"],[281,22,274,20],[281,23,274,21,"currentState"],[281,35,274,33],[281,36,274,34],[281,39,274,37,"currentState"],[281,51,274,49],[281,54,274,52,"initializedState"],[281,70,274,68],[282,4,275,2],[282,8,275,6,"nextState"],[282,17,275,15],[282,20,275,18,"state"],[282,25,275,23],[283,4,276,2],[283,8,276,6],[283,9,276,7],[283,13,276,7,"isArrayEqual"],[283,39,276,19],[283,41,276,20,"state"],[283,46,276,25],[283,47,276,26,"routeNames"],[283,57,276,36],[283,59,276,38,"routeNames"],[283,69,276,48],[283,70,276,49],[283,74,276,53],[283,75,276,54],[283,79,276,54,"isRecordEqual"],[283,107,276,67],[283,109,276,68,"routeKeyList"],[283,121,276,80],[283,123,276,82,"previousRouteKeyList"],[283,143,276,102],[283,144,276,103],[283,146,276,105],[284,6,277,4],[285,6,278,4,"nextState"],[285,15,278,13],[285,18,278,16,"router"],[285,24,278,22],[285,25,278,23,"getStateForRouteNamesChange"],[285,52,278,50],[285,53,278,51,"state"],[285,58,278,56],[285,60,278,58],[286,8,279,6,"routeNames"],[286,18,279,16],[287,8,280,6,"routeParamList"],[287,22,280,20],[288,8,281,6,"routeGetIdList"],[288,22,281,20],[289,8,282,6,"routeKeyChanges"],[289,23,282,21],[289,25,282,23,"Object"],[289,31,282,29],[289,32,282,30,"keys"],[289,36,282,34],[289,37,282,35,"routeKeyList"],[289,49,282,47],[289,50,282,48],[289,51,282,49,"filter"],[289,57,282,55],[289,58,282,56,"name"],[289,62,282,60],[289,66,282,64,"name"],[289,70,282,68],[289,74,282,72,"previousRouteKeyList"],[289,94,282,92],[289,98,282,96,"routeKeyList"],[289,110,282,108],[289,111,282,109,"name"],[289,115,282,113],[289,116,282,114],[289,121,282,119,"previousRouteKeyList"],[289,141,282,139],[289,142,282,140,"name"],[289,146,282,144],[289,147,282,145],[290,6,283,4],[290,7,283,5],[290,8,283,6],[291,4,284,2],[292,4,285,2],[292,10,285,8,"previousNestedParamsRef"],[292,33,285,31],[292,36,285,34,"React"],[292,41,285,39],[292,42,285,40,"useRef"],[292,48,285,46],[292,49,285,47,"route"],[292,54,285,52],[292,56,285,54,"params"],[292,62,285,60],[292,63,285,61],[293,4,286,2,"React"],[293,9,286,7],[293,10,286,8,"useEffect"],[293,19,286,17],[293,20,286,18],[293,26,286,24],[294,6,287,4,"previousNestedParamsRef"],[294,29,287,27],[294,30,287,28,"current"],[294,37,287,35],[294,40,287,38,"route"],[294,45,287,43],[294,47,287,45,"params"],[294,53,287,51],[295,4,288,2],[295,5,288,3],[295,7,288,5],[295,8,288,6,"route"],[295,13,288,11],[295,15,288,13,"params"],[295,21,288,19],[295,22,288,20],[295,23,288,21],[296,4,289,2],[296,8,289,6,"route"],[296,13,289,11],[296,15,289,13,"params"],[296,21,289,19],[296,23,289,21],[297,6,290,4],[297,12,290,10,"previousParams"],[297,26,290,24],[297,29,290,27,"previousNestedParamsRef"],[297,52,290,50],[297,53,290,51,"current"],[297,60,290,58],[298,6,291,4],[298,10,291,8,"action"],[298,16,291,14],[299,6,292,4],[299,10,292,8],[299,17,292,15,"route"],[299,22,292,20],[299,23,292,21,"params"],[299,29,292,27],[299,30,292,28,"state"],[299,35,292,33],[299,40,292,38],[299,48,292,46],[299,52,292,50,"route"],[299,57,292,55],[299,58,292,56,"params"],[299,64,292,62],[299,65,292,63,"state"],[299,70,292,68],[299,74,292,72],[299,78,292,76],[299,82,292,80,"route"],[299,87,292,85],[299,88,292,86,"params"],[299,94,292,92],[299,99,292,97,"previousParams"],[299,113,292,111],[299,115,292,113],[300,8,293,6],[301,8,294,6,"action"],[301,14,294,12],[301,17,294,15,"CommonActions"],[301,39,294,28],[301,40,294,29,"reset"],[301,45,294,34],[301,46,294,35,"route"],[301,51,294,40],[301,52,294,41,"params"],[301,58,294,47],[301,59,294,48,"state"],[301,64,294,53],[301,65,294,54],[302,6,295,4],[302,7,295,5],[302,13,295,11],[302,17,295,15],[302,24,295,22,"route"],[302,29,295,27],[302,30,295,28,"params"],[302,36,295,34],[302,37,295,35,"screen"],[302,43,295,41],[302,48,295,46],[302,56,295,54],[302,61,295,59,"route"],[302,66,295,64],[302,67,295,65,"params"],[302,73,295,71],[302,74,295,72,"initial"],[302,81,295,79],[302,86,295,84],[302,91,295,89],[302,95,295,93,"isFirstStateInitialization"],[302,121,295,119],[302,125,295,123,"route"],[302,130,295,128],[302,131,295,129,"params"],[302,137,295,135],[302,142,295,140,"previousParams"],[302,156,295,154],[302,157,295,155],[302,159,295,157],[303,8,296,6],[304,8,297,6,"action"],[304,14,297,12],[304,17,297,15,"CommonActions"],[304,39,297,28],[304,40,297,29,"navigate"],[304,48,297,37],[304,49,297,38],[305,10,298,8,"name"],[305,14,298,12],[305,16,298,14,"route"],[305,21,298,19],[305,22,298,20,"params"],[305,28,298,26],[305,29,298,27,"screen"],[305,35,298,33],[306,10,299,8,"params"],[306,16,299,14],[306,18,299,16,"route"],[306,23,299,21],[306,24,299,22,"params"],[306,30,299,28],[306,31,299,29,"params"],[306,37,299,35],[307,10,300,8,"path"],[307,14,300,12],[307,16,300,14,"route"],[307,21,300,19],[307,22,300,20,"params"],[307,28,300,26],[307,29,300,27,"path"],[307,33,300,31],[308,10,301,8,"pop"],[308,13,301,11],[308,15,301,13,"route"],[308,20,301,18],[308,21,301,19,"params"],[308,27,301,25],[308,28,301,26,"pop"],[309,8,302,6],[309,9,302,7],[309,10,302,8],[310,6,303,4],[312,6,305,4],[313,6,306,4],[313,12,306,10,"updatedState"],[313,24,306,22],[313,27,306,25,"action"],[313,33,306,31],[313,36,306,34,"router"],[313,42,306,40],[313,43,306,41,"getStateForAction"],[313,60,306,58],[313,61,306,59,"nextState"],[313,70,306,68],[313,72,306,70,"action"],[313,78,306,76],[313,80,306,78],[314,8,307,6,"routeNames"],[314,18,307,16],[315,8,308,6,"routeParamList"],[315,22,308,20],[316,8,309,6,"routeGetIdList"],[317,6,310,4],[317,7,310,5],[317,8,310,6],[317,11,310,9],[317,15,310,13],[318,6,311,4,"nextState"],[318,15,311,13],[318,18,311,16,"updatedState"],[318,30,311,28],[318,35,311,33],[318,39,311,37],[318,42,311,40,"router"],[318,48,311,46],[318,49,311,47,"getRehydratedState"],[318,67,311,65],[318,68,311,66,"updatedState"],[318,80,311,78],[318,82,311,80],[319,8,312,6,"routeNames"],[319,18,312,16],[320,8,313,6,"routeParamList"],[320,22,313,20],[321,8,314,6,"routeGetIdList"],[322,6,315,4],[322,7,315,5],[322,8,315,6],[322,11,315,9,"nextState"],[322,20,315,18],[323,4,316,2],[324,4,317,2],[324,10,317,8,"shouldUpdate"],[324,22,317,20],[324,25,317,23,"state"],[324,30,317,28],[324,35,317,33,"nextState"],[324,44,317,42],[325,4,318,2],[325,8,318,2,"useScheduleUpdate"],[325,44,318,19],[325,46,318,20],[325,52,318,26],[326,6,319,4],[326,10,319,8,"shouldUpdate"],[326,22,319,20],[326,24,319,22],[327,8,320,6],[328,8,321,6,"setState"],[328,16,321,14],[328,17,321,15,"nextState"],[328,26,321,24],[328,27,321,25],[329,6,322,4],[330,4,323,2],[330,5,323,3],[330,6,323,4],[332,4,325,2],[333,4,326,2],[334,4,327,2],[335,4,328,2,"state"],[335,9,328,7],[335,12,328,10,"nextState"],[335,21,328,19],[336,4,329,2,"React"],[336,9,329,7],[336,10,329,8,"useEffect"],[336,19,329,17],[336,20,329,18],[336,26,329,24],[337,6,330,4],[338,6,331,4],[339,6,332,4,"stateCleanedUp"],[339,20,332,18],[339,21,332,19,"current"],[339,28,332,26],[339,31,332,29],[339,36,332,34],[340,6,333,4,"setKey"],[340,12,333,10],[340,13,333,11,"navigatorKey"],[340,25,333,23],[340,26,333,24],[341,6,334,4],[341,10,334,8],[341,11,334,9,"getIsInitial"],[341,23,334,21],[341,24,334,22],[341,25,334,23],[341,27,334,25],[342,8,335,6],[343,8,336,6],[344,8,337,6],[345,8,338,6,"setState"],[345,16,338,14],[345,17,338,15,"nextState"],[345,26,338,24],[345,27,338,25],[346,6,339,4],[347,6,340,4],[347,13,340,11],[347,19,340,17],[348,8,341,6],[349,8,342,6],[349,12,342,10,"getCurrentState"],[349,27,342,25],[349,28,342,26],[349,29,342,27],[349,34,342,32,"undefined"],[349,43,342,41],[349,47,342,45,"getKey"],[349,53,342,51],[349,54,342,52],[349,55,342,53],[349,60,342,58,"navigatorKey"],[349,72,342,70],[349,74,342,72],[350,10,343,8,"setCurrentState"],[350,25,343,23],[350,26,343,24,"undefined"],[350,35,343,33],[350,36,343,34],[351,10,344,8,"stateCleanedUp"],[351,24,344,22],[351,25,344,23,"current"],[351,32,344,30],[351,35,344,33],[351,39,344,37],[352,8,345,6],[353,6,346,4],[353,7,346,5],[354,6,347,4],[355,4,348,2],[355,5,348,3],[355,7,348,5],[355,9,348,7],[355,10,348,8],[357,4,350,2],[358,4,351,2],[359,4,352,2],[360,4,353,2],[361,4,354,2],[362,4,355,2],[362,10,355,8,"stateRef"],[362,18,355,16],[362,21,355,19,"React"],[362,26,355,24],[362,27,355,25,"useRef"],[362,33,355,31],[362,34,355,32,"state"],[362,39,355,37],[362,40,355,38],[363,4,356,2,"stateRef"],[363,12,356,10],[363,13,356,11,"current"],[363,20,356,18],[363,23,356,21,"state"],[363,28,356,26],[364,4,357,2],[364,8,357,2,"useIsomorphicLayoutEffect"],[364,60,357,27],[364,62,357,28],[364,68,357,34],[365,6,358,4,"stateRef"],[365,14,358,12],[365,15,358,13,"current"],[365,22,358,20],[365,25,358,23],[365,29,358,27],[366,4,359,2],[366,5,359,3],[366,6,359,4],[367,4,360,2],[367,10,360,8,"getState"],[367,18,360,16],[367,21,360,19],[367,25,360,19,"useLatestCallback"],[367,51,360,36],[367,53,360,37],[367,59,360,43],[368,6,361,4],[368,12,361,10,"currentState"],[368,24,361,22],[368,27,361,25,"getCurrentState"],[368,42,361,40],[368,43,361,41],[368,44,361,42],[369,6,362,4],[369,13,362,11],[369,17,362,11,"deepFreeze"],[369,39,362,21],[369,41,362,22,"isStateInitialized"],[369,59,362,40],[369,60,362,41,"currentState"],[369,72,362,53],[369,73,362,54],[369,76,362,57,"currentState"],[369,88,362,69],[369,91,362,72,"initializedState"],[369,107,362,88],[369,108,362,89],[370,4,363,2],[370,5,363,3],[370,6,363,4],[371,4,364,2],[371,10,364,8,"emitter"],[371,17,364,15],[371,20,364,18],[371,24,364,18,"useEventEmitter"],[371,56,364,33],[371,58,364,34,"e"],[371,59,364,35],[371,63,364,39],[372,6,365,4],[372,12,365,10,"routeNames"],[372,22,365,20],[372,25,365,23],[372,27,365,25],[373,6,366,4],[373,10,366,8,"route"],[373,15,366,13],[374,6,367,4],[374,10,367,8,"e"],[374,11,367,9],[374,12,367,10,"target"],[374,18,367,16],[374,20,367,18],[375,8,368,6,"route"],[375,13,368,11],[375,16,368,14,"state"],[375,21,368,19],[375,22,368,20,"routes"],[375,28,368,26],[375,29,368,27,"find"],[375,33,368,31],[375,34,368,32,"route"],[375,39,368,37],[375,43,368,41,"route"],[375,48,368,46],[375,49,368,47,"key"],[375,52,368,50],[375,57,368,55,"e"],[375,58,368,56],[375,59,368,57,"target"],[375,65,368,63],[375,66,368,64],[376,8,369,6],[376,12,369,10,"route"],[376,17,369,15],[376,19,369,17,"name"],[376,23,369,21],[376,25,369,23],[377,10,370,8,"routeNames"],[377,20,370,18],[377,21,370,19,"push"],[377,25,370,23],[377,26,370,24,"route"],[377,31,370,29],[377,32,370,30,"name"],[377,36,370,34],[377,37,370,35],[378,8,371,6],[379,6,372,4],[379,7,372,5],[379,13,372,11],[380,8,373,6,"route"],[380,13,373,11],[380,16,373,14,"state"],[380,21,373,19],[380,22,373,20,"routes"],[380,28,373,26],[380,29,373,27,"state"],[380,34,373,32],[380,35,373,33,"index"],[380,40,373,38],[380,41,373,39],[381,8,374,6,"routeNames"],[381,18,374,16],[381,19,374,17,"push"],[381,23,374,21],[381,24,374,22],[381,27,374,25,"Object"],[381,33,374,31],[381,34,374,32,"keys"],[381,38,374,36],[381,39,374,37,"screens"],[381,46,374,44],[381,47,374,45],[381,48,374,46,"filter"],[381,54,374,52],[381,55,374,53,"name"],[381,59,374,57],[381,63,374,61,"route"],[381,68,374,66],[381,70,374,68,"name"],[381,74,374,72],[381,79,374,77,"name"],[381,83,374,81],[381,84,374,82],[381,85,374,83],[382,6,375,4],[383,6,376,4],[383,10,376,8,"route"],[383,15,376,13],[383,19,376,17],[383,23,376,21],[383,25,376,23],[384,8,377,6],[385,6,378,4],[386,6,379,4],[386,12,379,10,"navigation"],[386,22,379,20],[386,25,379,23,"descriptors"],[386,36,379,34],[386,37,379,35,"route"],[386,42,379,40],[386,43,379,41,"key"],[386,46,379,44],[386,47,379,45],[386,48,379,46,"navigation"],[386,58,379,56],[387,6,380,4],[387,12,380,10,"listeners"],[387,21,380,19],[387,24,380,22],[387,26,380,24],[387,27,380,25,"concat"],[387,33,380,31],[388,6,381,4],[389,6,382,4],[389,9,382,7],[389,10,382,8,"screenListeners"],[389,25,382,23],[389,27,382,25],[389,30,382,28,"routeNames"],[389,40,382,38],[389,41,382,39,"map"],[389,44,382,42],[389,45,382,43,"name"],[389,49,382,47],[389,53,382,51],[390,8,383,6],[390,14,383,12],[391,10,384,8,"listeners"],[392,8,385,6],[392,9,385,7],[392,12,385,10,"screens"],[392,19,385,17],[392,20,385,18,"name"],[392,24,385,22],[392,25,385,23],[392,26,385,24,"props"],[392,31,385,29],[393,8,386,6],[393,15,386,13,"listeners"],[393,24,386,22],[394,6,387,4],[394,7,387,5],[394,8,387,6],[394,9,387,7],[394,10,387,8,"map"],[394,13,387,11],[394,14,387,12,"listeners"],[394,23,387,21],[394,27,387,25],[395,8,388,6],[395,14,388,12,"map"],[395,17,388,15],[395,20,388,18],[395,27,388,25,"listeners"],[395,36,388,34],[395,41,388,39],[395,51,388,49],[395,54,388,52,"listeners"],[395,63,388,61],[395,64,388,62],[396,10,389,8,"route"],[396,15,389,13],[396,17,389,15,"route"],[396,22,389,20],[397,10,390,8,"navigation"],[398,8,391,6],[398,9,391,7],[398,10,391,8],[398,13,391,11,"listeners"],[398,22,391,20],[399,8,392,6],[399,15,392,13,"map"],[399,18,392,16],[399,21,392,19,"Object"],[399,27,392,25],[399,28,392,26,"keys"],[399,32,392,30],[399,33,392,31,"map"],[399,36,392,34],[399,37,392,35],[399,38,392,36,"filter"],[399,44,392,42],[399,45,392,43,"type"],[399,49,392,47],[399,53,392,51,"type"],[399,57,392,55],[399,62,392,60,"e"],[399,63,392,61],[399,64,392,62,"type"],[399,68,392,66],[399,69,392,67],[399,70,392,68,"map"],[399,73,392,71],[399,74,392,72,"type"],[399,78,392,76],[399,82,392,80,"map"],[399,85,392,83],[399,88,392,86,"type"],[399,92,392,90],[399,93,392,91],[399,94,392,92],[399,97,392,95,"undefined"],[399,106,392,104],[400,6,393,4],[400,7,393,5],[400,8,393,6],[401,6,394,4],[402,6,395,4],[403,6,395,4],[403,7,396,5,"filter"],[403,13,396,11],[403,14,396,12],[403,15,396,13,"cb"],[403,17,396,15],[403,19,396,17,"i"],[403,20,396,18],[403,22,396,20,"self"],[403,26,396,24],[403,31,396,29,"cb"],[403,33,396,31],[403,37,396,35,"self"],[403,41,396,39],[403,42,396,40,"lastIndexOf"],[403,53,396,51],[403,54,396,52,"cb"],[403,56,396,54],[403,57,396,55],[403,62,396,60,"i"],[403,63,396,61],[403,64,396,62],[404,6,397,4,"listeners"],[404,15,397,13],[404,16,397,14,"forEach"],[404,23,397,21],[404,24,397,22,"listener"],[404,32,397,30],[404,36,397,34,"listener"],[404,44,397,42],[404,47,397,45,"e"],[404,48,397,46],[404,49,397,47],[404,50,397,48],[405,4,398,2],[405,5,398,3],[405,6,398,4],[406,4,399,2],[406,8,399,2,"useFocusEvents"],[406,38,399,16],[406,40,399,17],[407,6,400,4,"state"],[407,11,400,9],[408,6,401,4,"emitter"],[409,4,402,2],[409,5,402,3],[409,6,402,4],[410,4,403,2,"React"],[410,9,403,7],[410,10,403,8,"useEffect"],[410,19,403,17],[410,20,403,18],[410,26,403,24],[411,6,404,4,"emitter"],[411,13,404,11],[411,14,404,12,"emit"],[411,18,404,16],[411,19,404,17],[412,8,405,6,"type"],[412,12,405,10],[412,14,405,12],[412,21,405,19],[413,8,406,6,"data"],[413,12,406,10],[413,14,406,12],[414,10,407,8,"state"],[415,8,408,6],[416,6,409,4],[416,7,409,5],[416,8,409,6],[417,4,410,2],[417,5,410,3],[417,7,410,5],[417,8,410,6,"emitter"],[417,15,410,13],[417,17,410,15,"state"],[417,22,410,20],[417,23,410,21],[417,24,410,22],[418,4,411,2],[418,10,411,8],[419,6,412,4,"listeners"],[419,15,412,13],[419,17,412,15,"childListeners"],[419,31,412,29],[420,6,413,4,"addListener"],[421,4,414,2],[421,5,414,3],[421,8,414,6],[421,12,414,6,"useChildListeners"],[421,48,414,23],[421,50,414,24],[421,51,414,25],[422,4,415,2],[422,10,415,8],[423,6,416,4,"keyedListeners"],[423,20,416,18],[424,6,417,4,"addKeyedListener"],[425,4,418,2],[425,5,418,3],[425,8,418,6],[425,12,418,6,"useKeyedChildListeners"],[425,58,418,28],[425,60,418,29],[425,61,418,30],[426,4,419,2],[426,10,419,8,"onAction"],[426,18,419,16],[426,21,419,19],[426,25,419,19,"useOnAction"],[426,49,419,30],[426,51,419,31],[427,6,420,4,"router"],[427,12,420,10],[428,6,421,4,"getState"],[428,14,421,12],[429,6,422,4,"setState"],[429,14,422,12],[430,6,423,4,"key"],[430,9,423,7],[430,11,423,9,"route"],[430,16,423,14],[430,18,423,16,"key"],[430,21,423,19],[431,6,424,4,"actionListeners"],[431,21,424,19],[431,23,424,21,"childListeners"],[431,37,424,35],[431,38,424,36,"action"],[431,44,424,42],[432,6,425,4,"beforeRemoveListeners"],[432,27,425,25],[432,29,425,27,"keyedListeners"],[432,43,425,41],[432,44,425,42,"beforeRemove"],[432,56,425,54],[433,6,426,4,"routerConfigOptions"],[433,25,426,23],[433,27,426,25],[434,8,427,6,"routeNames"],[434,18,427,16],[435,8,428,6,"routeParamList"],[435,22,428,20],[436,8,429,6,"routeGetIdList"],[437,6,430,4],[437,7,430,5],[438,6,431,4,"emitter"],[439,4,432,2],[439,5,432,3],[439,6,432,4],[440,4,433,2],[440,10,433,8,"onRouteFocus"],[440,22,433,20],[440,25,433,23],[440,29,433,23,"useOnRouteFocus"],[440,61,433,38],[440,63,433,39],[441,6,434,4,"router"],[441,12,434,10],[442,6,435,4,"key"],[442,9,435,7],[442,11,435,9,"route"],[442,16,435,14],[442,18,435,16,"key"],[442,21,435,19],[443,6,436,4,"getState"],[443,14,436,12],[444,6,437,4,"setState"],[445,4,438,2],[445,5,438,3],[445,6,438,4],[446,4,439,2],[446,10,439,8,"navigation"],[446,20,439,18],[446,23,439,21],[446,27,439,21,"useNavigationHelpers"],[446,69,439,41],[446,71,439,42],[447,6,440,4,"id"],[447,8,440,6],[447,10,440,8,"options"],[447,17,440,15],[447,18,440,16,"id"],[447,20,440,18],[448,6,441,4,"onAction"],[448,14,441,12],[449,6,442,4,"getState"],[449,14,442,12],[450,6,443,4,"emitter"],[450,13,443,11],[451,6,444,4,"router"],[451,12,444,10],[452,6,445,4,"stateRef"],[453,4,446,2],[453,5,446,3],[453,6,446,4],[454,4,447,2],[454,8,447,2,"useFocusedListenersChildrenAdapter"],[454,78,447,36],[454,80,447,37],[455,6,448,4,"navigation"],[455,16,448,14],[456,6,449,4,"focusedListeners"],[456,22,449,20],[456,24,449,22,"childListeners"],[456,38,449,36],[456,39,449,37,"focus"],[457,4,450,2],[457,5,450,3],[457,6,450,4],[458,4,451,2],[458,8,451,2,"useOnGetState"],[458,36,451,15],[458,38,451,16],[459,6,452,4,"getState"],[459,14,452,12],[460,6,453,4,"getStateListeners"],[460,23,453,21],[460,25,453,23,"keyedListeners"],[460,39,453,37],[460,40,453,38,"getState"],[461,4,454,2],[461,5,454,3],[461,6,454,4],[462,4,455,2],[462,10,455,8],[463,6,456,4,"describe"],[463,14,456,12],[464,6,457,4,"descriptors"],[465,4,458,2],[465,5,458,3],[465,8,458,6],[465,12,458,6,"useDescriptors"],[465,42,458,20],[465,44,458,21],[466,6,459,4,"state"],[466,11,459,9],[467,6,460,4,"screens"],[467,13,460,11],[468,6,461,4,"navigation"],[468,16,461,14],[469,6,462,4,"screenOptions"],[469,19,462,17],[470,6,463,4,"screenLayout"],[470,18,463,16],[471,6,464,4,"onAction"],[471,14,464,12],[472,6,465,4,"getState"],[472,14,465,12],[473,6,466,4,"setState"],[473,14,466,12],[474,6,467,4,"onRouteFocus"],[474,18,467,16],[475,6,468,4,"addListener"],[475,17,468,15],[476,6,469,4,"addKeyedListener"],[476,22,469,20],[477,6,470,4,"router"],[477,12,470,10],[478,6,471,4],[479,6,472,4,"emitter"],[480,4,473,2],[480,5,473,3],[480,6,473,4],[481,4,474,2],[481,8,474,2,"useCurrentRender"],[481,42,474,18],[481,44,474,19],[482,6,475,4,"state"],[482,11,475,9],[483,6,476,4,"navigation"],[483,16,476,14],[484,6,477,4,"descriptors"],[485,4,478,2],[485,5,478,3],[485,6,478,4],[486,4,479,2],[486,10,479,8,"NavigationContent"],[486,27,479,25],[486,30,479,28],[486,34,479,28,"useComponent"],[486,60,479,40],[486,62,479,41,"children"],[486,70,479,49],[486,74,479,53],[487,6,480,4],[487,12,480,10,"element"],[487,19,480,17],[487,22,480,20,"layout"],[487,28,480,26],[487,32,480,30],[487,36,480,34],[487,39,480,37,"layout"],[487,45,480,43],[487,46,480,44],[488,8,481,6,"state"],[488,13,481,11],[489,8,482,6,"descriptors"],[489,19,482,17],[490,8,483,6,"navigation"],[490,18,483,16],[491,8,484,6,"children"],[492,6,485,4],[492,7,485,5],[492,8,485,6],[492,11,485,9,"children"],[492,19,485,17],[493,6,486,4],[493,13,486,11],[493,26,486,24],[493,30,486,24,"_jsx"],[493,45,486,28],[493,47,486,29,"NavigationHelpersContext"],[493,97,486,53],[493,98,486,54,"Provider"],[493,106,486,62],[493,108,486,64],[494,8,487,6,"value"],[494,13,487,11],[494,15,487,13,"navigation"],[494,25,487,23],[495,8,488,6,"children"],[495,16,488,14],[495,18,488,16],[495,31,488,29],[495,35,488,29,"_jsx"],[495,50,488,33],[495,52,488,34,"PreventRemoveProvider"],[495,96,488,55],[495,98,488,57],[496,10,489,8,"children"],[496,18,489,16],[496,20,489,18,"element"],[497,8,490,6],[497,9,490,7],[498,6,491,4],[498,7,491,5],[498,8,491,6],[499,4,492,2],[499,5,492,3],[499,6,492,4],[500,4,493,2],[500,11,493,9],[501,6,494,4,"state"],[501,11,494,9],[502,6,495,4,"navigation"],[502,16,495,14],[503,6,496,4,"describe"],[503,14,496,12],[504,6,497,4,"descriptors"],[504,17,497,15],[505,6,498,4,"NavigationContent"],[506,4,499,2],[506,5,499,3],[507,2,500,0],[508,0,500,1],[508,3]],"functionMap":{"names":["<global>","isScreen","isGroup","isValidKey","getRouteConfigsFromChildren","React.Children.toArray.reduce$argument_0","configs.forEach$argument_0","useNavigationBuilder","useLazyValue$argument_0","routeConfigs.every$argument_0","routeConfigs.reduce$argument_0","routeConfigs.map$argument_0","routeNames.reduce$argument_0","screens.curr.keys.map$argument_0","isStateValid","isStateInitialized","useLatestCallback$argument_0","React.useMemo$argument_0","React.useEffect$argument_0","Object.keys.filter$argument_0","useScheduleUpdate$argument_0","<anonymous>","useIsomorphicLayoutEffect$argument_0","useEventEmitter$argument_0","state.routes.find$argument_0","routeNames.map$argument_0","map$argument_0","Object.keys.filter.map$argument_0","concat.filter$argument_0","listeners.forEach$argument_0","useComponent$argument_0"],"mappings":"AAA;iBCqC;CDE;gBEC;CFE;mBGC,iEH;oCIO;0DCC;GDsC;oBEE;KFuC;CJG;OOS;8BCa;4DCC,qDD;GDY;sCGC;GHM;sCIC,2BJ;yCKC;uCCC,gBD;GLE;2CKC;GLM;2CKC;ILE;yCOI,+DP;+CQC,4ER;qCSU;GTQ;uEUC;oDLC;KKU;GVsC;kBWE;GXE;wDYc,yFZ;kBWI;GXE;oBa8B;GbK;kBWM;WGW;KHM;GXE;4BeS;GfE;qCSC;GTG;kCgBC;gCCI,+BD;qDJM,4BI;2CEQ;KFK,OG;2CPK,uBO,MC,mBD;KHC;YKG,iDL;sBMC,yBN;GhBC;kBWK;GXO;yCuBqE;GvBa;CPQ"}},"type":"js/module"}]}