{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/objectWithoutPropertiesLoose","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"HFkXuFcBAqfzGtqyPj8g62MKT0M=","exportNames":["*"]}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":31,"index":46}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"]}},{"name":"react-is","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":47},"end":{"line":4,"column":46,"index":93}}],"key":"nMRUu046PLZz3vjxw7Fgw3UH3xY=","exportNames":["*"]}},{"name":"./useRoute.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":94},"end":{"line":5,"column":41,"index":135}}],"key":"099N+Zv4K9pUFNBPk2MtNNMStD8=","exportNames":["*"]}},{"name":"react/jsx-runtime","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":30,"column":0,"index":808},"end":{"line":30,"column":48,"index":856}}],"key":"rKAWVuQOSSDHxC6IWcmkeWszaWg=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.createComponentForStaticNavigation = createComponentForStaticNavigation;\n  exports.createPathConfigForStaticNavigation = createPathConfigForStaticNavigation;\n  var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\n  var _react = _interopRequireWildcard(require(_dependencyMap[2], \"react\"));\n  var React = _react;\n  var _reactIs = require(_dependencyMap[3], \"react-is\");\n  var _useRoute = require(_dependencyMap[4], \"./useRoute.js\");\n  var _jsxRuntime = require(_dependencyMap[5], \"react/jsx-runtime\");\n  const _excluded = [\"screen\", \"if\"],\n    _excluded2 = [\"screens\", \"groups\"],\n    _excluded3 = [\"if\"];\n  /**\n   * Flatten a type to remove all type alias names, unions etc.\n   * This will show a plain object when hovering over the type.\n   */\n  /**\n   * keyof T doesn't work for union types. We can use distributive conditional types instead.\n   * https://www.typescriptlang.org/docs/handbook/2/conditional-types.html#distributive-conditional-types\n   */\n  /**\n   * We get a union type when using keyof, but we want an intersection instead.\n   * https://stackoverflow.com/a/50375286/1665026\n   */\n  /**\n   * Props for a screen component which is rendered by a static navigator.\n   * Takes the route params as a generic argument.\n   */\n  /**\n   * Infer the param list from the static navigation config.\n   */\n  function _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (const t in e) \"default\" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]); return f; })(e, t); }\n  const MemoizedScreen = /*#__PURE__*/React.memo(({\n    component\n  }) => {\n    const route = (0, _useRoute.useRoute)();\n    const children = /*#__PURE__*/React.createElement(component, {\n      route\n    });\n    return children;\n  });\n  MemoizedScreen.displayName = 'Memo(Screen)';\n  const getItemsFromScreens = (Screen, screens) => {\n    return Object.entries(screens).map(([name, item]) => {\n      let component;\n      let props = {};\n      let useIf;\n      let isNavigator = false;\n      if ('screen' in item) {\n        const {\n            screen,\n            if: _if\n          } = item,\n          rest = (0, _objectWithoutPropertiesLoose2.default)(item, _excluded);\n        useIf = _if;\n        props = rest;\n        if ((0, _reactIs.isValidElementType)(screen)) {\n          component = screen;\n        } else if ('config' in screen) {\n          isNavigator = true;\n          component = createComponentForStaticNavigation(screen, `${name}Navigator`);\n        }\n      } else if ((0, _reactIs.isValidElementType)(item)) {\n        component = item;\n      } else if ('config' in item) {\n        isNavigator = true;\n        component = createComponentForStaticNavigation(item, `${name}Navigator`);\n      }\n      if (component == null) {\n        throw new Error(`Couldn't find a 'screen' property for the screen '${name}'. This can happen if you passed 'undefined'. You likely forgot to export your component from the file it's defined in, or mixed up default import and named import when importing.`);\n      }\n      const element = isNavigator ? (/*#__PURE__*/React.createElement(component, {})) : /*#__PURE__*/(0, _jsxRuntime.jsx)(MemoizedScreen, {\n        component: component\n      });\n      return () => {\n        const shouldRender = useIf == null || useIf();\n        if (!shouldRender) {\n          return null;\n        }\n        return /*#__PURE__*/(0, _jsxRuntime.jsx)(Screen, Object.assign({\n          name: name\n        }, props, {\n          children: () => element\n        }), name);\n      };\n    });\n  };\n\n  /**\n   * Create a component that renders a navigator based on the static configuration.\n   *\n   * @param tree Static navigation config.\n   * @param displayName Name of the component to be displayed in React DevTools.\n   * @returns A component which renders the navigator.\n   */\n  function createComponentForStaticNavigation(tree, displayName) {\n    const {\n      Navigator,\n      Group,\n      Screen,\n      config\n    } = tree;\n    const {\n        screens,\n        groups\n      } = config,\n      rest = (0, _objectWithoutPropertiesLoose2.default)(config, _excluded2);\n    if (screens == null && groups == null) {\n      throw new Error(\"Couldn't find a 'screens' or 'groups' property. Make sure to define your screens under a 'screens' property in the configuration.\");\n    }\n    const items = [];\n\n    // Loop through the config to find screens and groups\n    // So we add the screens and groups in the same order as they are defined\n    for (const key in config) {\n      if (key === 'screens' && screens) {\n        items.push(...getItemsFromScreens(Screen, screens));\n      }\n      if (key === 'groups' && groups) {\n        items.push(...Object.entries(groups).map(([key, _ref]) => {\n          let {\n              if: useIf\n            } = _ref,\n            group = (0, _objectWithoutPropertiesLoose2.default)(_ref, _excluded3);\n          const groupItems = getItemsFromScreens(Screen, group.screens);\n          return () => {\n            // Call unconditionally since screen configs may contain `useIf` hooks\n            const children = groupItems.map(item => item());\n            const shouldRender = useIf == null || useIf();\n            if (!shouldRender) {\n              return null;\n            }\n            return /*#__PURE__*/(0, _react.createElement)(Group, Object.assign({\n              navigationKey: key\n            }, group, {\n              key: key\n            }), children);\n          };\n        }));\n      }\n    }\n    const NavigatorComponent = () => {\n      const children = items.map(item => item());\n      return /*#__PURE__*/(0, _jsxRuntime.jsx)(Navigator, Object.assign({}, rest, {\n        children: children\n      }));\n    };\n    NavigatorComponent.displayName = displayName;\n    return NavigatorComponent;\n  }\n  /**\n   * Create a path config object from a static navigation config for deep linking.\n   *\n   * @param tree Static navigation config.\n   * @param options Additional options from `linking.config`.\n   * @param auto Whether to automatically generate paths for leaf screens.\n   * @returns Path config object to use in linking config.\n   *\n   * @example\n   * ```js\n   * const config = {\n   *   screens: {\n   *     Home: {\n   *       screens: createPathConfigForStaticNavigation(HomeTabs),\n   *     },\n   *   },\n   * };\n   * ```\n   */\n  function createPathConfigForStaticNavigation(tree, options, auto) {\n    let initialScreenConfig;\n    const createPathConfigForTree = (t, o, skipInitialDetection) => {\n      const createPathConfigForScreens = (screens, initialRouteName) => {\n        return Object.fromEntries(Object.entries(screens)\n        // Re-order to move the initial route to the front\n        // This way we can detect the initial route correctly\n        .sort(([a], [b]) => {\n          if (a === initialRouteName) {\n            return -1;\n          }\n          if (b === initialRouteName) {\n            return 1;\n          }\n          return 0;\n        }).map(([key, item]) => {\n          const screenConfig = {};\n          if ('linking' in item) {\n            if (typeof item.linking === 'string') {\n              screenConfig.path = item.linking;\n            } else {\n              Object.assign(screenConfig, item.linking);\n            }\n            if (typeof screenConfig.path === 'string') {\n              screenConfig.path = screenConfig.path.replace(/^\\//, '') // Remove extra leading slash\n              .replace(/\\/$/, ''); // Remove extra trailing slash\n            }\n          }\n          let screens;\n          const skipInitialDetectionInChild = skipInitialDetection || screenConfig.path != null && screenConfig.path !== '';\n          if ('config' in item) {\n            screens = createPathConfigForTree(item, undefined, skipInitialDetectionInChild);\n          } else if ('screen' in item && 'config' in item.screen && (item.screen.config.screens || item.screen.config.groups)) {\n            screens = createPathConfigForTree(item.screen, undefined, skipInitialDetectionInChild);\n          }\n          if (screens) {\n            screenConfig.screens = screens;\n          }\n          if (auto && !screenConfig.screens &&\n          // Skip generating path for screens that specify linking config as `undefined` or `null` explicitly\n          !('linking' in item && item.linking == null)) {\n            if (screenConfig.path != null) {\n              if (!skipInitialDetection && screenConfig.path === '') {\n                // We encounter a leaf screen with empty path,\n                // Clear the initial screen config as it's not needed anymore\n                initialScreenConfig = undefined;\n              }\n            } else {\n              if (!skipInitialDetection && initialScreenConfig == null) {\n                initialScreenConfig = screenConfig;\n              }\n              screenConfig.path = key.replace(/([A-Z]+)/g, '-$1').replace(/^-/, '').toLowerCase();\n            }\n          }\n          return [key, screenConfig];\n        }).filter(([, screen]) => Object.keys(screen).length > 0));\n      };\n      const screens = {};\n\n      // Loop through the config to find screens and groups\n      // So we add the screens and groups in the same order as they are defined\n      for (const key in t.config) {\n        if (key === 'screens' && t.config.screens) {\n          Object.assign(screens, createPathConfigForScreens(t.config.screens, o?.initialRouteName ?? t.config.initialRouteName));\n        }\n        if (key === 'groups' && t.config.groups) {\n          Object.entries(t.config.groups).forEach(([, group]) => {\n            Object.assign(screens, createPathConfigForScreens(group.screens, o?.initialRouteName ?? t.config.initialRouteName));\n          });\n        }\n      }\n      if (Object.keys(screens).length === 0) {\n        return undefined;\n      }\n      return screens;\n    };\n    const screens = createPathConfigForTree(tree, options, false);\n    if (auto && initialScreenConfig) {\n      initialScreenConfig.path = '';\n    }\n    return screens;\n  }\n});","lineCount":258,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_interopRequireDefault"],[4,28,1,13],[4,31,1,13,"require"],[4,38,1,13],[4,39,1,13,"_dependencyMap"],[4,53,1,13],[5,2,1,13,"Object"],[5,8,1,13],[5,9,1,13,"defineProperty"],[5,23,1,13],[5,24,1,13,"exports"],[5,31,1,13],[6,4,1,13,"value"],[6,9,1,13],[7,2,1,13],[8,2,1,13,"exports"],[8,9,1,13],[8,10,1,13,"createComponentForStaticNavigation"],[8,44,1,13],[8,47,1,13,"createComponentForStaticNavigation"],[8,81,1,13],[9,2,1,13,"exports"],[9,9,1,13],[9,10,1,13,"createPathConfigForStaticNavigation"],[9,45,1,13],[9,48,1,13,"createPathConfigForStaticNavigation"],[9,83,1,13],[10,2,1,13],[10,6,1,13,"_objectWithoutPropertiesLoose2"],[10,36,1,13],[10,39,1,13,"_interopRequireDefault"],[10,61,1,13],[10,62,1,13,"require"],[10,69,1,13],[10,70,1,13,"_dependencyMap"],[10,84,1,13],[11,2,3,0],[11,6,3,0,"_react"],[11,12,3,0],[11,15,3,0,"_interopRequireWildcard"],[11,38,3,0],[11,39,3,0,"require"],[11,46,3,0],[11,47,3,0,"_dependencyMap"],[11,61,3,0],[12,2,3,31],[12,6,3,31,"React"],[12,11,3,31],[12,14,3,31,"_react"],[12,20,3,31],[13,2,4,0],[13,6,4,0,"_reactIs"],[13,14,4,0],[13,17,4,0,"require"],[13,24,4,0],[13,25,4,0,"_dependencyMap"],[13,39,4,0],[14,2,5,0],[14,6,5,0,"_useRoute"],[14,15,5,0],[14,18,5,0,"require"],[14,25,5,0],[14,26,5,0,"_dependencyMap"],[14,40,5,0],[15,2,30,0],[15,6,30,0,"_jsxRuntime"],[15,17,30,0],[15,20,30,0,"require"],[15,27,30,0],[15,28,30,0,"_dependencyMap"],[15,42,30,0],[16,2,30,48],[16,8,30,48,"_excluded"],[16,17,30,48],[17,4,30,48,"_excluded2"],[17,14,30,48],[18,4,30,48,"_excluded3"],[18,14,30,48],[19,2,7,0],[20,0,8,0],[21,0,9,0],[22,0,10,0],[23,2,12,0],[24,0,13,0],[25,0,14,0],[26,0,15,0],[27,2,17,0],[28,0,18,0],[29,0,19,0],[30,0,20,0],[31,2,22,0],[32,0,23,0],[33,0,24,0],[34,0,25,0],[35,2,27,0],[36,0,28,0],[37,0,29,0],[38,2,27,0],[38,11,27,0,"_interopRequireWildcard"],[38,35,27,0,"e"],[38,36,27,0],[38,38,27,0,"t"],[38,39,27,0],[38,68,27,0,"WeakMap"],[38,75,27,0],[38,81,27,0,"r"],[38,82,27,0],[38,89,27,0,"WeakMap"],[38,96,27,0],[38,100,27,0,"n"],[38,101,27,0],[38,108,27,0,"WeakMap"],[38,115,27,0],[38,127,27,0,"_interopRequireWildcard"],[38,150,27,0],[38,162,27,0,"_interopRequireWildcard"],[38,163,27,0,"e"],[38,164,27,0],[38,166,27,0,"t"],[38,167,27,0],[38,176,27,0,"t"],[38,177,27,0],[38,181,27,0,"e"],[38,182,27,0],[38,186,27,0,"e"],[38,187,27,0],[38,188,27,0,"__esModule"],[38,198,27,0],[38,207,27,0,"e"],[38,208,27,0],[38,214,27,0,"o"],[38,215,27,0],[38,217,27,0,"i"],[38,218,27,0],[38,220,27,0,"f"],[38,221,27,0],[38,226,27,0,"__proto__"],[38,235,27,0],[38,243,27,0,"default"],[38,250,27,0],[38,252,27,0,"e"],[38,253,27,0],[38,270,27,0,"e"],[38,271,27,0],[38,294,27,0,"e"],[38,295,27,0],[38,320,27,0,"e"],[38,321,27,0],[38,330,27,0,"f"],[38,331,27,0],[38,337,27,0,"o"],[38,338,27,0],[38,341,27,0,"t"],[38,342,27,0],[38,345,27,0,"n"],[38,346,27,0],[38,349,27,0,"r"],[38,350,27,0],[38,358,27,0,"o"],[38,359,27,0],[38,360,27,0,"has"],[38,363,27,0],[38,364,27,0,"e"],[38,365,27,0],[38,375,27,0,"o"],[38,376,27,0],[38,377,27,0,"get"],[38,380,27,0],[38,381,27,0,"e"],[38,382,27,0],[38,385,27,0,"o"],[38,386,27,0],[38,387,27,0,"set"],[38,390,27,0],[38,391,27,0,"e"],[38,392,27,0],[38,394,27,0,"f"],[38,395,27,0],[38,411,27,0,"t"],[38,412,27,0],[38,416,27,0,"e"],[38,417,27,0],[38,433,27,0,"t"],[38,434,27,0],[38,441,27,0,"hasOwnProperty"],[38,455,27,0],[38,456,27,0,"call"],[38,460,27,0],[38,461,27,0,"e"],[38,462,27,0],[38,464,27,0,"t"],[38,465,27,0],[38,472,27,0,"i"],[38,473,27,0],[38,477,27,0,"o"],[38,478,27,0],[38,481,27,0,"Object"],[38,487,27,0],[38,488,27,0,"defineProperty"],[38,502,27,0],[38,507,27,0,"Object"],[38,513,27,0],[38,514,27,0,"getOwnPropertyDescriptor"],[38,538,27,0],[38,539,27,0,"e"],[38,540,27,0],[38,542,27,0,"t"],[38,543,27,0],[38,550,27,0,"i"],[38,551,27,0],[38,552,27,0,"get"],[38,555,27,0],[38,559,27,0,"i"],[38,560,27,0],[38,561,27,0,"set"],[38,564,27,0],[38,568,27,0,"o"],[38,569,27,0],[38,570,27,0,"f"],[38,571,27,0],[38,573,27,0,"t"],[38,574,27,0],[38,576,27,0,"i"],[38,577,27,0],[38,581,27,0,"f"],[38,582,27,0],[38,583,27,0,"t"],[38,584,27,0],[38,588,27,0,"e"],[38,589,27,0],[38,590,27,0,"t"],[38,591,27,0],[38,602,27,0,"f"],[38,603,27,0],[38,608,27,0,"e"],[38,609,27,0],[38,611,27,0,"t"],[38,612,27,0],[39,2,32,0],[39,8,32,6,"MemoizedScreen"],[39,22,32,20],[39,25,32,23],[39,38,32,36,"React"],[39,43,32,41],[39,44,32,42,"memo"],[39,48,32,46],[39,49,32,47],[39,50,32,48],[40,4,33,2,"component"],[41,2,34,0],[41,3,34,1],[41,8,34,6],[42,4,35,2],[42,10,35,8,"route"],[42,15,35,13],[42,18,35,16],[42,22,35,16,"useRoute"],[42,40,35,24],[42,42,35,25],[42,43,35,26],[43,4,36,2],[43,10,36,8,"children"],[43,18,36,16],[43,21,36,19],[43,34,36,32,"React"],[43,39,36,37],[43,40,36,38,"createElement"],[43,53,36,51],[43,54,36,52,"component"],[43,63,36,61],[43,65,36,63],[44,6,37,4,"route"],[45,4,38,2],[45,5,38,3],[45,6,38,4],[46,4,39,2],[46,11,39,9,"children"],[46,19,39,17],[47,2,40,0],[47,3,40,1],[47,4,40,2],[48,2,41,0,"MemoizedScreen"],[48,16,41,14],[48,17,41,15,"displayName"],[48,28,41,26],[48,31,41,29],[48,45,41,43],[49,2,42,0],[49,8,42,6,"getItemsFromScreens"],[49,27,42,25],[49,30,42,28,"getItemsFromScreens"],[49,31,42,29,"Screen"],[49,37,42,35],[49,39,42,37,"screens"],[49,46,42,44],[49,51,42,49],[50,4,43,2],[50,11,43,9,"Object"],[50,17,43,15],[50,18,43,16,"entries"],[50,25,43,23],[50,26,43,24,"screens"],[50,33,43,31],[50,34,43,32],[50,35,43,33,"map"],[50,38,43,36],[50,39,43,37],[50,40,43,38],[50,41,43,39,"name"],[50,45,43,43],[50,47,43,45,"item"],[50,51,43,49],[50,52,43,50],[50,57,43,55],[51,6,44,4],[51,10,44,8,"component"],[51,19,44,17],[52,6,45,4],[52,10,45,8,"props"],[52,15,45,13],[52,18,45,16],[52,19,45,17],[52,20,45,18],[53,6,46,4],[53,10,46,8,"useIf"],[53,15,46,13],[54,6,47,4],[54,10,47,8,"isNavigator"],[54,21,47,19],[54,24,47,22],[54,29,47,27],[55,6,48,4],[55,10,48,8],[55,18,48,16],[55,22,48,20,"item"],[55,26,48,24],[55,28,48,26],[56,8,49,6],[56,14,49,12],[57,12,50,8,"screen"],[57,18,50,14],[58,12,51,8,"if"],[58,14,51,10],[58,16,51,12,"_if"],[59,10,53,6],[59,11,53,7],[59,14,53,10,"item"],[59,18,53,14],[60,10,52,11,"rest"],[60,14,52,15],[60,21,52,15,"_objectWithoutPropertiesLoose2"],[60,51,52,15],[60,52,52,15,"default"],[60,59,52,15],[60,61,53,10,"item"],[60,65,53,14],[60,67,53,14,"_excluded"],[60,76,53,14],[61,8,54,6,"useIf"],[61,13,54,11],[61,16,54,14,"_if"],[61,19,54,17],[62,8,55,6,"props"],[62,13,55,11],[62,16,55,14,"rest"],[62,20,55,18],[63,8,56,6],[63,12,56,10],[63,16,56,10,"isValidElementType"],[63,43,56,28],[63,45,56,29,"screen"],[63,51,56,35],[63,52,56,36],[63,54,56,38],[64,10,57,8,"component"],[64,19,57,17],[64,22,57,20,"screen"],[64,28,57,26],[65,8,58,6],[65,9,58,7],[65,15,58,13],[65,19,58,17],[65,27,58,25],[65,31,58,29,"screen"],[65,37,58,35],[65,39,58,37],[66,10,59,8,"isNavigator"],[66,21,59,19],[66,24,59,22],[66,28,59,26],[67,10,60,8,"component"],[67,19,60,17],[67,22,60,20,"createComponentForStaticNavigation"],[67,56,60,54],[67,57,60,55,"screen"],[67,63,60,61],[67,65,60,63],[67,68,60,66,"name"],[67,72,60,70],[67,83,60,81],[67,84,60,82],[68,8,61,6],[69,6,62,4],[69,7,62,5],[69,13,62,11],[69,17,62,15],[69,21,62,15,"isValidElementType"],[69,48,62,33],[69,50,62,34,"item"],[69,54,62,38],[69,55,62,39],[69,57,62,41],[70,8,63,6,"component"],[70,17,63,15],[70,20,63,18,"item"],[70,24,63,22],[71,6,64,4],[71,7,64,5],[71,13,64,11],[71,17,64,15],[71,25,64,23],[71,29,64,27,"item"],[71,33,64,31],[71,35,64,33],[72,8,65,6,"isNavigator"],[72,19,65,17],[72,22,65,20],[72,26,65,24],[73,8,66,6,"component"],[73,17,66,15],[73,20,66,18,"createComponentForStaticNavigation"],[73,54,66,52],[73,55,66,53,"item"],[73,59,66,57],[73,61,66,59],[73,64,66,62,"name"],[73,68,66,66],[73,79,66,77],[73,80,66,78],[74,6,67,4],[75,6,68,4],[75,10,68,8,"component"],[75,19,68,17],[75,23,68,21],[75,27,68,25],[75,29,68,27],[76,8,69,6],[76,14,69,12],[76,18,69,16,"Error"],[76,23,69,21],[76,24,69,22],[76,77,69,75,"name"],[76,81,69,79],[76,262,69,260],[76,263,69,261],[77,6,70,4],[78,6,71,4],[78,12,71,10,"element"],[78,19,71,17],[78,22,71,20,"isNavigator"],[78,33,71,31],[78,37,71,35],[78,50,71,48,"React"],[78,55,71,53],[78,56,71,54,"createElement"],[78,69,71,67],[78,70,71,68,"component"],[78,79,71,77],[78,81,71,79],[78,82,71,80],[78,83,71,81],[78,84,71,82],[78,88,71,86],[78,101,71,99],[78,105,71,99,"_jsx"],[78,120,71,103],[78,122,71,104,"MemoizedScreen"],[78,136,71,118],[78,138,71,120],[79,8,72,6,"component"],[79,17,72,15],[79,19,72,17,"component"],[80,6,73,4],[80,7,73,5],[80,8,73,6],[81,6,74,4],[81,13,74,11],[81,19,74,17],[82,8,75,6],[82,14,75,12,"shouldRender"],[82,26,75,24],[82,29,75,27,"useIf"],[82,34,75,32],[82,38,75,36],[82,42,75,40],[82,46,75,44,"useIf"],[82,51,75,49],[82,52,75,50],[82,53,75,51],[83,8,76,6],[83,12,76,10],[83,13,76,11,"shouldRender"],[83,25,76,23],[83,27,76,25],[84,10,77,8],[84,17,77,15],[84,21,77,19],[85,8,78,6],[86,8,79,6],[86,15,79,13],[86,28,79,26],[86,32,79,26,"_jsx"],[86,47,79,30],[86,49,79,31,"Screen"],[86,55,79,37],[86,57,79,37,"Object"],[86,63,79,37],[86,64,79,37,"assign"],[86,70,79,37],[87,10,80,8,"name"],[87,14,80,12],[87,16,80,14,"name"],[88,8,80,18],[88,11,81,11,"props"],[88,16,81,16],[89,10,82,8,"children"],[89,18,82,16],[89,20,82,18,"children"],[89,21,82,18],[89,26,82,24,"element"],[90,8,82,31],[90,12,83,9,"name"],[90,16,83,13],[90,17,83,14],[91,6,84,4],[91,7,84,5],[92,4,85,2],[92,5,85,3],[92,6,85,4],[93,2,86,0],[93,3,86,1],[95,2,88,0],[96,0,89,0],[97,0,90,0],[98,0,91,0],[99,0,92,0],[100,0,93,0],[101,0,94,0],[102,2,95,7],[102,11,95,16,"createComponentForStaticNavigation"],[102,45,95,50,"createComponentForStaticNavigation"],[102,46,95,51,"tree"],[102,50,95,55],[102,52,95,57,"displayName"],[102,63,95,68],[102,65,95,70],[103,4,96,2],[103,10,96,8],[104,6,97,4,"Navigator"],[104,15,97,13],[105,6,98,4,"Group"],[105,11,98,9],[106,6,99,4,"Screen"],[106,12,99,10],[107,6,100,4,"config"],[108,4,101,2],[108,5,101,3],[108,8,101,6,"tree"],[108,12,101,10],[109,4,102,2],[109,10,102,8],[110,8,103,4,"screens"],[110,15,103,11],[111,8,104,4,"groups"],[112,6,106,2],[112,7,106,3],[112,10,106,6,"config"],[112,16,106,12],[113,6,105,7,"rest"],[113,10,105,11],[113,17,105,11,"_objectWithoutPropertiesLoose2"],[113,47,105,11],[113,48,105,11,"default"],[113,55,105,11],[113,57,106,6,"config"],[113,63,106,12],[113,65,106,12,"_excluded2"],[113,75,106,12],[114,4,107,2],[114,8,107,6,"screens"],[114,15,107,13],[114,19,107,17],[114,23,107,21],[114,27,107,25,"groups"],[114,33,107,31],[114,37,107,35],[114,41,107,39],[114,43,107,41],[115,6,108,4],[115,12,108,10],[115,16,108,14,"Error"],[115,21,108,19],[115,22,108,20],[115,153,108,151],[115,154,108,152],[116,4,109,2],[117,4,110,2],[117,10,110,8,"items"],[117,15,110,13],[117,18,110,16],[117,20,110,18],[119,4,112,2],[120,4,113,2],[121,4,114,2],[121,9,114,7],[121,15,114,13,"key"],[121,18,114,16],[121,22,114,20,"config"],[121,28,114,26],[121,30,114,28],[122,6,115,4],[122,10,115,8,"key"],[122,13,115,11],[122,18,115,16],[122,27,115,25],[122,31,115,29,"screens"],[122,38,115,36],[122,40,115,38],[123,8,116,6,"items"],[123,13,116,11],[123,14,116,12,"push"],[123,18,116,16],[123,19,116,17],[123,22,116,20,"getItemsFromScreens"],[123,41,116,39],[123,42,116,40,"Screen"],[123,48,116,46],[123,50,116,48,"screens"],[123,57,116,55],[123,58,116,56],[123,59,116,57],[124,6,117,4],[125,6,118,4],[125,10,118,8,"key"],[125,13,118,11],[125,18,118,16],[125,26,118,24],[125,30,118,28,"groups"],[125,36,118,34],[125,38,118,36],[126,8,119,6,"items"],[126,13,119,11],[126,14,119,12,"push"],[126,18,119,16],[126,19,119,17],[126,22,119,20,"Object"],[126,28,119,26],[126,29,119,27,"entries"],[126,36,119,34],[126,37,119,35,"groups"],[126,43,119,41],[126,44,119,42],[126,45,119,43,"map"],[126,48,119,46],[126,49,119,47],[126,50,119,48],[126,51,119,49,"key"],[126,54,119,52],[126,56,119,52,"_ref"],[126,60,119,52],[126,61,122,8],[126,66,122,13],[127,10,122,13],[127,14,119,54],[128,14,120,8,"if"],[128,16,120,10],[128,18,120,12,"useIf"],[129,12,122,6],[129,13,122,7],[129,16,122,7,"_ref"],[129,20,122,7],[130,12,121,11,"group"],[130,17,121,16],[130,24,121,16,"_objectWithoutPropertiesLoose2"],[130,54,121,16],[130,55,121,16,"default"],[130,62,121,16],[130,64,121,16,"_ref"],[130,68,121,16],[130,70,121,16,"_excluded3"],[130,80,121,16],[131,10,123,8],[131,16,123,14,"groupItems"],[131,26,123,24],[131,29,123,27,"getItemsFromScreens"],[131,48,123,46],[131,49,123,47,"Screen"],[131,55,123,53],[131,57,123,55,"group"],[131,62,123,60],[131,63,123,61,"screens"],[131,70,123,68],[131,71,123,69],[132,10,124,8],[132,17,124,15],[132,23,124,21],[133,12,125,10],[134,12,126,10],[134,18,126,16,"children"],[134,26,126,24],[134,29,126,27,"groupItems"],[134,39,126,37],[134,40,126,38,"map"],[134,43,126,41],[134,44,126,42,"item"],[134,48,126,46],[134,52,126,50,"item"],[134,56,126,54],[134,57,126,55],[134,58,126,56],[134,59,126,57],[135,12,127,10],[135,18,127,16,"shouldRender"],[135,30,127,28],[135,33,127,31,"useIf"],[135,38,127,36],[135,42,127,40],[135,46,127,44],[135,50,127,48,"useIf"],[135,55,127,53],[135,56,127,54],[135,57,127,55],[136,12,128,10],[136,16,128,14],[136,17,128,15,"shouldRender"],[136,29,128,27],[136,31,128,29],[137,14,129,12],[137,21,129,19],[137,25,129,23],[138,12,130,10],[139,12,131,10],[139,19,131,17],[139,32,131,30],[139,36,131,30,"_createElement"],[139,56,131,44],[139,58,131,45,"Group"],[139,63,131,50],[139,65,131,50,"Object"],[139,71,131,50],[139,72,131,50,"assign"],[139,78,131,50],[140,14,132,12,"navigationKey"],[140,27,132,25],[140,29,132,27,"key"],[141,12,132,30],[141,15,133,15,"group"],[141,20,133,20],[142,14,134,12,"key"],[142,17,134,15],[142,19,134,17,"key"],[143,12,134,20],[143,16,135,13,"children"],[143,24,135,21],[143,25,135,22],[144,10,136,8],[144,11,136,9],[145,8,137,6],[145,9,137,7],[145,10,137,8],[145,11,137,9],[146,6,138,4],[147,4,139,2],[148,4,140,2],[148,10,140,8,"NavigatorComponent"],[148,28,140,26],[148,31,140,29,"NavigatorComponent"],[148,32,140,29],[148,37,140,35],[149,6,141,4],[149,12,141,10,"children"],[149,20,141,18],[149,23,141,21,"items"],[149,28,141,26],[149,29,141,27,"map"],[149,32,141,30],[149,33,141,31,"item"],[149,37,141,35],[149,41,141,39,"item"],[149,45,141,43],[149,46,141,44],[149,47,141,45],[149,48,141,46],[150,6,142,4],[150,13,142,11],[150,26,142,24],[150,30,142,24,"_jsx"],[150,45,142,28],[150,47,142,29,"Navigator"],[150,56,142,38],[150,58,142,38,"Object"],[150,64,142,38],[150,65,142,38,"assign"],[150,71,142,38],[150,76,143,9,"rest"],[150,80,143,13],[151,8,144,6,"children"],[151,16,144,14],[151,18,144,16,"children"],[152,6,144,24],[152,8,145,5],[152,9,145,6],[153,4,146,2],[153,5,146,3],[154,4,147,2,"NavigatorComponent"],[154,22,147,20],[154,23,147,21,"displayName"],[154,34,147,32],[154,37,147,35,"displayName"],[154,48,147,46],[155,4,148,2],[155,11,148,9,"NavigatorComponent"],[155,29,148,27],[156,2,149,0],[157,2,150,0],[158,0,151,0],[159,0,152,0],[160,0,153,0],[161,0,154,0],[162,0,155,0],[163,0,156,0],[164,0,157,0],[165,0,158,0],[166,0,159,0],[167,0,160,0],[168,0,161,0],[169,0,162,0],[170,0,163,0],[171,0,164,0],[172,0,165,0],[173,0,166,0],[174,0,167,0],[175,0,168,0],[176,2,169,7],[176,11,169,16,"createPathConfigForStaticNavigation"],[176,46,169,51,"createPathConfigForStaticNavigation"],[176,47,169,52,"tree"],[176,51,169,56],[176,53,169,58,"options"],[176,60,169,65],[176,62,169,67,"auto"],[176,66,169,71],[176,68,169,73],[177,4,170,2],[177,8,170,6,"initialScreenConfig"],[177,27,170,25],[178,4,171,2],[178,10,171,8,"createPathConfigForTree"],[178,33,171,31],[178,36,171,34,"createPathConfigForTree"],[178,37,171,35,"t"],[178,38,171,36],[178,40,171,38,"o"],[178,41,171,39],[178,43,171,41,"skipInitialDetection"],[178,63,171,61],[178,68,171,66],[179,6,172,4],[179,12,172,10,"createPathConfigForScreens"],[179,38,172,36],[179,41,172,39,"createPathConfigForScreens"],[179,42,172,40,"screens"],[179,49,172,47],[179,51,172,49,"initialRouteName"],[179,67,172,65],[179,72,172,70],[180,8,173,6],[180,15,173,13,"Object"],[180,21,173,19],[180,22,173,20,"fromEntries"],[180,33,173,31],[180,34,173,32,"Object"],[180,40,173,38],[180,41,173,39,"entries"],[180,48,173,46],[180,49,173,47,"screens"],[180,56,173,54],[181,8,174,6],[182,8,175,6],[183,8,175,6],[183,9,176,7,"sort"],[183,13,176,11],[183,14,176,12],[183,15,176,13],[183,16,176,14,"a"],[183,17,176,15],[183,18,176,16],[183,20,176,18],[183,21,176,19,"b"],[183,22,176,20],[183,23,176,21],[183,28,176,26],[184,10,177,8],[184,14,177,12,"a"],[184,15,177,13],[184,20,177,18,"initialRouteName"],[184,36,177,34],[184,38,177,36],[185,12,178,10],[185,19,178,17],[185,20,178,18],[185,21,178,19],[186,10,179,8],[187,10,180,8],[187,14,180,12,"b"],[187,15,180,13],[187,20,180,18,"initialRouteName"],[187,36,180,34],[187,38,180,36],[188,12,181,10],[188,19,181,17],[188,20,181,18],[189,10,182,8],[190,10,183,8],[190,17,183,15],[190,18,183,16],[191,8,184,6],[191,9,184,7],[191,10,184,8],[191,11,184,9,"map"],[191,14,184,12],[191,15,184,13],[191,16,184,14],[191,17,184,15,"key"],[191,20,184,18],[191,22,184,20,"item"],[191,26,184,24],[191,27,184,25],[191,32,184,30],[192,10,185,8],[192,16,185,14,"screenConfig"],[192,28,185,26],[192,31,185,29],[192,32,185,30],[192,33,185,31],[193,10,186,8],[193,14,186,12],[193,23,186,21],[193,27,186,25,"item"],[193,31,186,29],[193,33,186,31],[194,12,187,10],[194,16,187,14],[194,23,187,21,"item"],[194,27,187,25],[194,28,187,26,"linking"],[194,35,187,33],[194,40,187,38],[194,48,187,46],[194,50,187,48],[195,14,188,12,"screenConfig"],[195,26,188,24],[195,27,188,25,"path"],[195,31,188,29],[195,34,188,32,"item"],[195,38,188,36],[195,39,188,37,"linking"],[195,46,188,44],[196,12,189,10],[196,13,189,11],[196,19,189,17],[197,14,190,12,"Object"],[197,20,190,18],[197,21,190,19,"assign"],[197,27,190,25],[197,28,190,26,"screenConfig"],[197,40,190,38],[197,42,190,40,"item"],[197,46,190,44],[197,47,190,45,"linking"],[197,54,190,52],[197,55,190,53],[198,12,191,10],[199,12,192,10],[199,16,192,14],[199,23,192,21,"screenConfig"],[199,35,192,33],[199,36,192,34,"path"],[199,40,192,38],[199,45,192,43],[199,53,192,51],[199,55,192,53],[200,14,193,12,"screenConfig"],[200,26,193,24],[200,27,193,25,"path"],[200,31,193,29],[200,34,193,32,"screenConfig"],[200,46,193,44],[200,47,193,45,"path"],[200,51,193,49],[200,52,193,50,"replace"],[200,59,193,57],[200,60,193,58],[200,65,193,63],[200,67,193,65],[200,69,193,67],[200,70,193,68],[200,71,193,69],[201,14,193,69],[201,15,194,13,"replace"],[201,22,194,20],[201,23,194,21],[201,28,194,26],[201,30,194,28],[201,32,194,30],[201,33,194,31],[201,34,194,32],[201,35,194,33],[202,12,195,10],[203,10,196,8],[204,10,197,8],[204,14,197,12,"screens"],[204,21,197,19],[205,10,198,8],[205,16,198,14,"skipInitialDetectionInChild"],[205,43,198,41],[205,46,198,44,"skipInitialDetection"],[205,66,198,64],[205,70,198,68,"screenConfig"],[205,82,198,80],[205,83,198,81,"path"],[205,87,198,85],[205,91,198,89],[205,95,198,93],[205,99,198,97,"screenConfig"],[205,111,198,109],[205,112,198,110,"path"],[205,116,198,114],[205,121,198,119],[205,123,198,121],[206,10,199,8],[206,14,199,12],[206,22,199,20],[206,26,199,24,"item"],[206,30,199,28],[206,32,199,30],[207,12,200,10,"screens"],[207,19,200,17],[207,22,200,20,"createPathConfigForTree"],[207,45,200,43],[207,46,200,44,"item"],[207,50,200,48],[207,52,200,50,"undefined"],[207,61,200,59],[207,63,200,61,"skipInitialDetectionInChild"],[207,90,200,88],[207,91,200,89],[208,10,201,8],[208,11,201,9],[208,17,201,15],[208,21,201,19],[208,29,201,27],[208,33,201,31,"item"],[208,37,201,35],[208,41,201,39],[208,49,201,47],[208,53,201,51,"item"],[208,57,201,55],[208,58,201,56,"screen"],[208,64,201,62],[208,69,201,67,"item"],[208,73,201,71],[208,74,201,72,"screen"],[208,80,201,78],[208,81,201,79,"config"],[208,87,201,85],[208,88,201,86,"screens"],[208,95,201,93],[208,99,201,97,"item"],[208,103,201,101],[208,104,201,102,"screen"],[208,110,201,108],[208,111,201,109,"config"],[208,117,201,115],[208,118,201,116,"groups"],[208,124,201,122],[208,125,201,123],[208,127,201,125],[209,12,202,10,"screens"],[209,19,202,17],[209,22,202,20,"createPathConfigForTree"],[209,45,202,43],[209,46,202,44,"item"],[209,50,202,48],[209,51,202,49,"screen"],[209,57,202,55],[209,59,202,57,"undefined"],[209,68,202,66],[209,70,202,68,"skipInitialDetectionInChild"],[209,97,202,95],[209,98,202,96],[210,10,203,8],[211,10,204,8],[211,14,204,12,"screens"],[211,21,204,19],[211,23,204,21],[212,12,205,10,"screenConfig"],[212,24,205,22],[212,25,205,23,"screens"],[212,32,205,30],[212,35,205,33,"screens"],[212,42,205,40],[213,10,206,8],[214,10,207,8],[214,14,207,12,"auto"],[214,18,207,16],[214,22,207,20],[214,23,207,21,"screenConfig"],[214,35,207,33],[214,36,207,34,"screens"],[214,43,207,41],[215,10,208,8],[216,10,209,8],[216,12,209,10],[216,21,209,19],[216,25,209,23,"item"],[216,29,209,27],[216,33,209,31,"item"],[216,37,209,35],[216,38,209,36,"linking"],[216,45,209,43],[216,49,209,47],[216,53,209,51],[216,54,209,52],[216,56,209,54],[217,12,210,10],[217,16,210,14,"screenConfig"],[217,28,210,26],[217,29,210,27,"path"],[217,33,210,31],[217,37,210,35],[217,41,210,39],[217,43,210,41],[218,14,211,12],[218,18,211,16],[218,19,211,17,"skipInitialDetection"],[218,39,211,37],[218,43,211,41,"screenConfig"],[218,55,211,53],[218,56,211,54,"path"],[218,60,211,58],[218,65,211,63],[218,67,211,65],[218,69,211,67],[219,16,212,14],[220,16,213,14],[221,16,214,14,"initialScreenConfig"],[221,35,214,33],[221,38,214,36,"undefined"],[221,47,214,45],[222,14,215,12],[223,12,216,10],[223,13,216,11],[223,19,216,17],[224,14,217,12],[224,18,217,16],[224,19,217,17,"skipInitialDetection"],[224,39,217,37],[224,43,217,41,"initialScreenConfig"],[224,62,217,60],[224,66,217,64],[224,70,217,68],[224,72,217,70],[225,16,218,14,"initialScreenConfig"],[225,35,218,33],[225,38,218,36,"screenConfig"],[225,50,218,48],[226,14,219,12],[227,14,220,12,"screenConfig"],[227,26,220,24],[227,27,220,25,"path"],[227,31,220,29],[227,34,220,32,"key"],[227,37,220,35],[227,38,220,36,"replace"],[227,45,220,43],[227,46,220,44],[227,57,220,55],[227,59,220,57],[227,64,220,62],[227,65,220,63],[227,66,220,64,"replace"],[227,73,220,71],[227,74,220,72],[227,78,220,76],[227,80,220,78],[227,82,220,80],[227,83,220,81],[227,84,220,82,"toLowerCase"],[227,95,220,93],[227,96,220,94],[227,97,220,95],[228,12,221,10],[229,10,222,8],[230,10,223,8],[230,17,223,15],[230,18,223,16,"key"],[230,21,223,19],[230,23,223,21,"screenConfig"],[230,35,223,33],[230,36,223,34],[231,8,224,6],[231,9,224,7],[231,10,224,8],[231,11,224,9,"filter"],[231,17,224,15],[231,18,224,16],[231,19,224,17],[231,22,224,20,"screen"],[231,28,224,26],[231,29,224,27],[231,34,224,32,"Object"],[231,40,224,38],[231,41,224,39,"keys"],[231,45,224,43],[231,46,224,44,"screen"],[231,52,224,50],[231,53,224,51],[231,54,224,52,"length"],[231,60,224,58],[231,63,224,61],[231,64,224,62],[231,65,224,63],[231,66,224,64],[232,6,225,4],[232,7,225,5],[233,6,226,4],[233,12,226,10,"screens"],[233,19,226,17],[233,22,226,20],[233,23,226,21],[233,24,226,22],[235,6,228,4],[236,6,229,4],[237,6,230,4],[237,11,230,9],[237,17,230,15,"key"],[237,20,230,18],[237,24,230,22,"t"],[237,25,230,23],[237,26,230,24,"config"],[237,32,230,30],[237,34,230,32],[238,8,231,6],[238,12,231,10,"key"],[238,15,231,13],[238,20,231,18],[238,29,231,27],[238,33,231,31,"t"],[238,34,231,32],[238,35,231,33,"config"],[238,41,231,39],[238,42,231,40,"screens"],[238,49,231,47],[238,51,231,49],[239,10,232,8,"Object"],[239,16,232,14],[239,17,232,15,"assign"],[239,23,232,21],[239,24,232,22,"screens"],[239,31,232,29],[239,33,232,31,"createPathConfigForScreens"],[239,59,232,57],[239,60,232,58,"t"],[239,61,232,59],[239,62,232,60,"config"],[239,68,232,66],[239,69,232,67,"screens"],[239,76,232,74],[239,78,232,76,"o"],[239,79,232,77],[239,81,232,79,"initialRouteName"],[239,97,232,95],[239,101,232,99,"t"],[239,102,232,100],[239,103,232,101,"config"],[239,109,232,107],[239,110,232,108,"initialRouteName"],[239,126,232,124],[239,127,232,125],[239,128,232,126],[240,8,233,6],[241,8,234,6],[241,12,234,10,"key"],[241,15,234,13],[241,20,234,18],[241,28,234,26],[241,32,234,30,"t"],[241,33,234,31],[241,34,234,32,"config"],[241,40,234,38],[241,41,234,39,"groups"],[241,47,234,45],[241,49,234,47],[242,10,235,8,"Object"],[242,16,235,14],[242,17,235,15,"entries"],[242,24,235,22],[242,25,235,23,"t"],[242,26,235,24],[242,27,235,25,"config"],[242,33,235,31],[242,34,235,32,"groups"],[242,40,235,38],[242,41,235,39],[242,42,235,40,"forEach"],[242,49,235,47],[242,50,235,48],[242,51,235,49],[242,54,235,52,"group"],[242,59,235,57],[242,60,235,58],[242,65,235,63],[243,12,236,10,"Object"],[243,18,236,16],[243,19,236,17,"assign"],[243,25,236,23],[243,26,236,24,"screens"],[243,33,236,31],[243,35,236,33,"createPathConfigForScreens"],[243,61,236,59],[243,62,236,60,"group"],[243,67,236,65],[243,68,236,66,"screens"],[243,75,236,73],[243,77,236,75,"o"],[243,78,236,76],[243,80,236,78,"initialRouteName"],[243,96,236,94],[243,100,236,98,"t"],[243,101,236,99],[243,102,236,100,"config"],[243,108,236,106],[243,109,236,107,"initialRouteName"],[243,125,236,123],[243,126,236,124],[243,127,236,125],[244,10,237,8],[244,11,237,9],[244,12,237,10],[245,8,238,6],[246,6,239,4],[247,6,240,4],[247,10,240,8,"Object"],[247,16,240,14],[247,17,240,15,"keys"],[247,21,240,19],[247,22,240,20,"screens"],[247,29,240,27],[247,30,240,28],[247,31,240,29,"length"],[247,37,240,35],[247,42,240,40],[247,43,240,41],[247,45,240,43],[248,8,241,6],[248,15,241,13,"undefined"],[248,24,241,22],[249,6,242,4],[250,6,243,4],[250,13,243,11,"screens"],[250,20,243,18],[251,4,244,2],[251,5,244,3],[252,4,245,2],[252,10,245,8,"screens"],[252,17,245,15],[252,20,245,18,"createPathConfigForTree"],[252,43,245,41],[252,44,245,42,"tree"],[252,48,245,46],[252,50,245,48,"options"],[252,57,245,55],[252,59,245,57],[252,64,245,62],[252,65,245,63],[253,4,246,2],[253,8,246,6,"auto"],[253,12,246,10],[253,16,246,14,"initialScreenConfig"],[253,35,246,33],[253,37,246,35],[254,6,247,4,"initialScreenConfig"],[254,25,247,23],[254,26,247,24,"path"],[254,30,247,28],[254,33,247,31],[254,35,247,33],[255,4,248,2],[256,4,249,2],[256,11,249,9,"screens"],[256,18,249,16],[257,2,250,0],[258,0,250,1],[258,3]],"functionMap":{"names":["<global>","React.memo$argument_0","getItemsFromScreens","Object.entries.map$argument_0","<anonymous>","_jsx$argument_1.children","createComponentForStaticNavigation","groupItems.map$argument_0","NavigatorComponent","items.map$argument_0","createPathConfigForStaticNavigation","createPathConfigForTree","createPathConfigForScreens","Object.entries.sort$argument_0","Object.entries.sort.map$argument_0","Object.entries.sort.map.filter$argument_0","Object.entries.forEach$argument_0"],"mappings":"AAA;+CC+B;CDQ;4BEE;qCCC;WC+B;kBCQ,aD;KDE;GDC;CFC;OMS;+CHwB;eCK;0CGE,cH;SDU;OGC;6BEG;+BCC,cD;GFK;CNG;OUoB;kCCE;uCCC;YCI;ODQ,ME;OFwC,SG,8CH;KDC;gDKU;SLE;GDO;CVM"}},"type":"js/module"}]}