{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.matchDynamicName = matchDynamicName;\n  exports.matchDeepDynamicRouteName = matchDeepDynamicRouteName;\n  exports.testNotFound = testNotFound;\n  exports.matchGroupName = matchGroupName;\n  exports.matchLastGroupName = matchLastGroupName;\n  exports.matchArrayGroupName = matchArrayGroupName;\n  exports.getNameFromFilePath = getNameFromFilePath;\n  exports.getContextKey = getContextKey;\n  exports.removeSupportedExtensions = removeSupportedExtensions;\n  exports.removeFileSystemExtensions = removeFileSystemExtensions;\n  exports.removeFileSystemDots = removeFileSystemDots;\n  exports.stripGroupSegmentsFromPath = stripGroupSegmentsFromPath;\n  exports.stripInvisibleSegmentsFromPath = stripInvisibleSegmentsFromPath;\n  exports.isTypedRoute = isTypedRoute;\n  /** Match `[page]` -> `page` */\n  function matchDynamicName(name) {\n    // Don't match `...` or `[` or `]` inside the brackets\n    // eslint-disable-next-line no-useless-escape\n    return name.match(/^\\[([^[\\](?:\\.\\.\\.)]+?)\\]$/)?.[1];\n  }\n  /** Match `[...page]` -> `page` */\n  function matchDeepDynamicRouteName(name) {\n    return name.match(/^\\[\\.\\.\\.([^/]+?)\\]$/)?.[1];\n  }\n  /** Test `/` -> `page` */\n  function testNotFound(name) {\n    return /\\+not-found$/.test(name);\n  }\n  /** Match `(page)` -> `page` */\n  function matchGroupName(name) {\n    return name.match(/^(?:[^\\\\(\\\\)])*?\\(([^\\\\/]+)\\).*?$/)?.[1];\n  }\n  /** Match `(app)/(page)` -> `page` */\n  function matchLastGroupName(name) {\n    return name.match(/.*(?:\\/|^)\\(([^\\\\/\\s]+)\\)[^\\s]*$/)?.[1];\n  }\n  /** Match the first array group name `(a,b,c)/(d,c)` -> `'a,b,c'` */\n  function matchArrayGroupName(name) {\n    return name.match(/(?:[^\\\\(\\\\)])*?\\(([^\\\\/]+,[^\\\\/]+)\\).*?$/)?.[1];\n  }\n  function getNameFromFilePath(name) {\n    return removeSupportedExtensions(removeFileSystemDots(name));\n  }\n  function getContextKey(name) {\n    // The root path is `` (empty string) so always prepend `/` to ensure\n    // there is some value.\n    const normal = '/' + getNameFromFilePath(name);\n    if (!normal.endsWith('_layout')) {\n      return normal;\n    }\n    return normal.replace(/\\/?_layout$/, '');\n  }\n  /** Remove `.js`, `.ts`, `.jsx`, `.tsx`, and the +api suffix */\n  function removeSupportedExtensions(name) {\n    return name.replace(/(\\+api)?\\.[jt]sx?$/g, '');\n  }\n  /** Remove `.js`, `.ts`, `.jsx`, `.tsx` */\n  function removeFileSystemExtensions(name) {\n    return name.replace(/\\.[jt]sx?$/g, '');\n  }\n  // Remove any amount of `./` and `../` from the start of the string\n  function removeFileSystemDots(filePath) {\n    return filePath.replace(/^(?:\\.\\.?\\/)+/g, '');\n  }\n  function stripGroupSegmentsFromPath(path) {\n    return path.split('/').reduce((acc, v) => {\n      if (matchGroupName(v) == null) {\n        acc.push(v);\n      }\n      return acc;\n    }, []).join('/');\n  }\n  function stripInvisibleSegmentsFromPath(path) {\n    return stripGroupSegmentsFromPath(path).replace(/\\/?index$/, '');\n  }\n  /**\n   * Match:\n   *  - _layout files, +html, +not-found, string+api, etc\n   *  - Routes can still use `+`, but it cannot be in the last segment.\n   */\n  function isTypedRoute(name) {\n    return !name.startsWith('+') && name.match(/(_layout|[^/]*?\\+[^/]*?)\\.[tj]sx?$/) === null;\n  }\n});","lineCount":90,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0,"Object"],[4,8,2,6],[4,9,2,7,"defineProperty"],[4,23,2,21],[4,24,2,22,"exports"],[4,31,2,29],[4,33,2,31],[4,45,2,43],[4,47,2,45],[5,4,2,47,"value"],[5,9,2,52],[5,11,2,54],[6,2,2,59],[6,3,2,60],[6,4,2,61],[7,2,3,0,"exports"],[7,9,3,7],[7,10,3,8,"matchDynamicName"],[7,26,3,24],[7,29,3,27,"matchDynamicName"],[7,45,3,43],[8,2,4,0,"exports"],[8,9,4,7],[8,10,4,8,"matchDeepDynamicRouteName"],[8,35,4,33],[8,38,4,36,"matchDeepDynamicRouteName"],[8,63,4,61],[9,2,5,0,"exports"],[9,9,5,7],[9,10,5,8,"testNotFound"],[9,22,5,20],[9,25,5,23,"testNotFound"],[9,37,5,35],[10,2,6,0,"exports"],[10,9,6,7],[10,10,6,8,"matchGroupName"],[10,24,6,22],[10,27,6,25,"matchGroupName"],[10,41,6,39],[11,2,7,0,"exports"],[11,9,7,7],[11,10,7,8,"matchLastGroupName"],[11,28,7,26],[11,31,7,29,"matchLastGroupName"],[11,49,7,47],[12,2,8,0,"exports"],[12,9,8,7],[12,10,8,8,"matchArrayGroupName"],[12,29,8,27],[12,32,8,30,"matchArrayGroupName"],[12,51,8,49],[13,2,9,0,"exports"],[13,9,9,7],[13,10,9,8,"getNameFromFilePath"],[13,29,9,27],[13,32,9,30,"getNameFromFilePath"],[13,51,9,49],[14,2,10,0,"exports"],[14,9,10,7],[14,10,10,8,"getContextKey"],[14,23,10,21],[14,26,10,24,"getContextKey"],[14,39,10,37],[15,2,11,0,"exports"],[15,9,11,7],[15,10,11,8,"removeSupportedExtensions"],[15,35,11,33],[15,38,11,36,"removeSupportedExtensions"],[15,63,11,61],[16,2,12,0,"exports"],[16,9,12,7],[16,10,12,8,"removeFileSystemExtensions"],[16,36,12,34],[16,39,12,37,"removeFileSystemExtensions"],[16,65,12,63],[17,2,13,0,"exports"],[17,9,13,7],[17,10,13,8,"removeFileSystemDots"],[17,30,13,28],[17,33,13,31,"removeFileSystemDots"],[17,53,13,51],[18,2,14,0,"exports"],[18,9,14,7],[18,10,14,8,"stripGroupSegmentsFromPath"],[18,36,14,34],[18,39,14,37,"stripGroupSegmentsFromPath"],[18,65,14,63],[19,2,15,0,"exports"],[19,9,15,7],[19,10,15,8,"stripInvisibleSegmentsFromPath"],[19,40,15,38],[19,43,15,41,"stripInvisibleSegmentsFromPath"],[19,73,15,71],[20,2,16,0,"exports"],[20,9,16,7],[20,10,16,8,"isTypedRoute"],[20,22,16,20],[20,25,16,23,"isTypedRoute"],[20,37,16,35],[21,2,17,0],[22,2,18,0],[22,11,18,9,"matchDynamicName"],[22,27,18,25,"matchDynamicName"],[22,28,18,26,"name"],[22,32,18,30],[22,34,18,32],[23,4,19,4],[24,4,20,4],[25,4,21,4],[25,11,21,11,"name"],[25,15,21,15],[25,16,21,16,"match"],[25,21,21,21],[25,22,21,22],[25,50,21,50],[25,51,21,51],[25,54,21,54],[25,55,21,55],[25,56,21,56],[26,2,22,0],[27,2,23,0],[28,2,24,0],[28,11,24,9,"matchDeepDynamicRouteName"],[28,36,24,34,"matchDeepDynamicRouteName"],[28,37,24,35,"name"],[28,41,24,39],[28,43,24,41],[29,4,25,4],[29,11,25,11,"name"],[29,15,25,15],[29,16,25,16,"match"],[29,21,25,21],[29,22,25,22],[29,44,25,44],[29,45,25,45],[29,48,25,48],[29,49,25,49],[29,50,25,50],[30,2,26,0],[31,2,27,0],[32,2,28,0],[32,11,28,9,"testNotFound"],[32,23,28,21,"testNotFound"],[32,24,28,22,"name"],[32,28,28,26],[32,30,28,28],[33,4,29,4],[33,11,29,11],[33,25,29,25],[33,26,29,26,"test"],[33,30,29,30],[33,31,29,31,"name"],[33,35,29,35],[33,36,29,36],[34,2,30,0],[35,2,31,0],[36,2,32,0],[36,11,32,9,"matchGroupName"],[36,25,32,23,"matchGroupName"],[36,26,32,24,"name"],[36,30,32,28],[36,32,32,30],[37,4,33,4],[37,11,33,11,"name"],[37,15,33,15],[37,16,33,16,"match"],[37,21,33,21],[37,22,33,22],[37,57,33,57],[37,58,33,58],[37,61,33,61],[37,62,33,62],[37,63,33,63],[38,2,34,0],[39,2,35,0],[40,2,36,0],[40,11,36,9,"matchLastGroupName"],[40,29,36,27,"matchLastGroupName"],[40,30,36,28,"name"],[40,34,36,32],[40,36,36,34],[41,4,37,4],[41,11,37,11,"name"],[41,15,37,15],[41,16,37,16,"match"],[41,21,37,21],[41,22,37,22],[41,56,37,56],[41,57,37,57],[41,60,37,60],[41,61,37,61],[41,62,37,62],[42,2,38,0],[43,2,39,0],[44,2,40,0],[44,11,40,9,"matchArrayGroupName"],[44,30,40,28,"matchArrayGroupName"],[44,31,40,29,"name"],[44,35,40,33],[44,37,40,35],[45,4,41,4],[45,11,41,11,"name"],[45,15,41,15],[45,16,41,16,"match"],[45,21,41,21],[45,22,41,22],[45,64,41,64],[45,65,41,65],[45,68,41,68],[45,69,41,69],[45,70,41,70],[46,2,42,0],[47,2,43,0],[47,11,43,9,"getNameFromFilePath"],[47,30,43,28,"getNameFromFilePath"],[47,31,43,29,"name"],[47,35,43,33],[47,37,43,35],[48,4,44,4],[48,11,44,11,"removeSupportedExtensions"],[48,36,44,36],[48,37,44,37,"removeFileSystemDots"],[48,57,44,57],[48,58,44,58,"name"],[48,62,44,62],[48,63,44,63],[48,64,44,64],[49,2,45,0],[50,2,46,0],[50,11,46,9,"getContextKey"],[50,24,46,22,"getContextKey"],[50,25,46,23,"name"],[50,29,46,27],[50,31,46,29],[51,4,47,4],[52,4,48,4],[53,4,49,4],[53,10,49,10,"normal"],[53,16,49,16],[53,19,49,19],[53,22,49,22],[53,25,49,25,"getNameFromFilePath"],[53,44,49,44],[53,45,49,45,"name"],[53,49,49,49],[53,50,49,50],[54,4,50,4],[54,8,50,8],[54,9,50,9,"normal"],[54,15,50,15],[54,16,50,16,"endsWith"],[54,24,50,24],[54,25,50,25],[54,34,50,34],[54,35,50,35],[54,37,50,37],[55,6,51,8],[55,13,51,15,"normal"],[55,19,51,21],[56,4,52,4],[57,4,53,4],[57,11,53,11,"normal"],[57,17,53,17],[57,18,53,18,"replace"],[57,25,53,25],[57,26,53,26],[57,39,53,39],[57,41,53,41],[57,43,53,43],[57,44,53,44],[58,2,54,0],[59,2,55,0],[60,2,56,0],[60,11,56,9,"removeSupportedExtensions"],[60,36,56,34,"removeSupportedExtensions"],[60,37,56,35,"name"],[60,41,56,39],[60,43,56,41],[61,4,57,4],[61,11,57,11,"name"],[61,15,57,15],[61,16,57,16,"replace"],[61,23,57,23],[61,24,57,24],[61,45,57,45],[61,47,57,47],[61,49,57,49],[61,50,57,50],[62,2,58,0],[63,2,59,0],[64,2,60,0],[64,11,60,9,"removeFileSystemExtensions"],[64,37,60,35,"removeFileSystemExtensions"],[64,38,60,36,"name"],[64,42,60,40],[64,44,60,42],[65,4,61,4],[65,11,61,11,"name"],[65,15,61,15],[65,16,61,16,"replace"],[65,23,61,23],[65,24,61,24],[65,37,61,37],[65,39,61,39],[65,41,61,41],[65,42,61,42],[66,2,62,0],[67,2,63,0],[68,2,64,0],[68,11,64,9,"removeFileSystemDots"],[68,31,64,29,"removeFileSystemDots"],[68,32,64,30,"filePath"],[68,40,64,38],[68,42,64,40],[69,4,65,4],[69,11,65,11,"filePath"],[69,19,65,19],[69,20,65,20,"replace"],[69,27,65,27],[69,28,65,28],[69,44,65,44],[69,46,65,46],[69,48,65,48],[69,49,65,49],[70,2,66,0],[71,2,67,0],[71,11,67,9,"stripGroupSegmentsFromPath"],[71,37,67,35,"stripGroupSegmentsFromPath"],[71,38,67,36,"path"],[71,42,67,40],[71,44,67,42],[72,4,68,4],[72,11,68,11,"path"],[72,15,68,15],[72,16,69,9,"split"],[72,21,69,14],[72,22,69,15],[72,25,69,18],[72,26,69,19],[72,27,70,9,"reduce"],[72,33,70,15],[72,34,70,16],[72,35,70,17,"acc"],[72,38,70,20],[72,40,70,22,"v"],[72,41,70,23],[72,46,70,28],[73,6,71,8],[73,10,71,12,"matchGroupName"],[73,24,71,26],[73,25,71,27,"v"],[73,26,71,28],[73,27,71,29],[73,31,71,33],[73,35,71,37],[73,37,71,39],[74,8,72,12,"acc"],[74,11,72,15],[74,12,72,16,"push"],[74,16,72,20],[74,17,72,21,"v"],[74,18,72,22],[74,19,72,23],[75,6,73,8],[76,6,74,8],[76,13,74,15,"acc"],[76,16,74,18],[77,4,75,4],[77,5,75,5],[77,7,75,7],[77,9,75,9],[77,10,75,10],[77,11,76,9,"join"],[77,15,76,13],[77,16,76,14],[77,19,76,17],[77,20,76,18],[78,2,77,0],[79,2,78,0],[79,11,78,9,"stripInvisibleSegmentsFromPath"],[79,41,78,39,"stripInvisibleSegmentsFromPath"],[79,42,78,40,"path"],[79,46,78,44],[79,48,78,46],[80,4,79,4],[80,11,79,11,"stripGroupSegmentsFromPath"],[80,37,79,37],[80,38,79,38,"path"],[80,42,79,42],[80,43,79,43],[80,44,79,44,"replace"],[80,51,79,51],[80,52,79,52],[80,63,79,63],[80,65,79,65],[80,67,79,67],[80,68,79,68],[81,2,80,0],[82,2,81,0],[83,0,82,0],[84,0,83,0],[85,0,84,0],[86,0,85,0],[87,2,86,0],[87,11,86,9,"isTypedRoute"],[87,23,86,21,"isTypedRoute"],[87,24,86,22,"name"],[87,28,86,26],[87,30,86,28],[88,4,87,4],[88,11,87,11],[88,12,87,12,"name"],[88,16,87,16],[88,17,87,17,"startsWith"],[88,27,87,27],[88,28,87,28],[88,31,87,31],[88,32,87,32],[88,36,87,36,"name"],[88,40,87,40],[88,41,87,41,"match"],[88,46,87,46],[88,47,87,47],[88,83,87,83],[88,84,87,84],[88,89,87,89],[88,93,87,93],[89,2,88,0],[90,0,88,1],[90,3]],"functionMap":{"names":["<global>","matchDynamicName","matchDeepDynamicRouteName","testNotFound","matchGroupName","matchLastGroupName","matchArrayGroupName","getNameFromFilePath","getContextKey","removeSupportedExtensions","removeFileSystemExtensions","removeFileSystemDots","stripGroupSegmentsFromPath","path.split.reduce$argument_0","stripInvisibleSegmentsFromPath","isTypedRoute"],"mappings":"AAA;ACiB;CDI;AEE;CFE;AGE;CHE;AIE;CJE;AKE;CLE;AME;CNE;AOC;CPE;AQC;CRQ;ASE;CTE;AUE;CVE;AWE;CXE;AYC;gBCG;KDK;CZE;AcC;CdE;AeM;CfE"}},"type":"js/module"}]}