{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.resolveBlurhashString = resolveBlurhashString;\n  exports.resolveThumbhashString = resolveThumbhashString;\n  var _slicedToArray2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\"));\n  function hashToUri(type, hash) {\n    var encodedBlurhash = encodeURI(hash).replace(/#/g, '%23').replace(/\\?/g, '%3F');\n    return `${type}:/${encodedBlurhash}`;\n  }\n\n  /**\n   * Converts a blurhash string (`blurhash:/<hash>/<width>/<height>` or <hash>/<width>/<height>) into an `ImageSource`.\n   *\n   * @return An ImageSource representing the provided blurhash.\n   * */\n  function resolveBlurhashString(str) {\n    var _str$replace$split = str.replace(/^blurhash:\\//, '').split('/'),\n      _str$replace$split2 = (0, _slicedToArray2.default)(_str$replace$split, 3),\n      blurhash = _str$replace$split2[0],\n      width = _str$replace$split2[1],\n      height = _str$replace$split2[2];\n    return {\n      uri: hashToUri('blurhash', blurhash),\n      width: parseInt(width, 10) || 16,\n      height: parseInt(height, 10) || 16\n    };\n  }\n\n  /**\n   * Converts a thumbhash string (`thumbhash:/<hash>` or `<hash>`) into an `ImageSource`.\n   *\n   * @return An ImageSource representing the provided thumbhash.\n   * */\n  function resolveThumbhashString(str) {\n    // ThumbHash may contain slashes that could break the url when the slash is at the beginning.\n    // We replace slashes with backslashes to make sure we don't break the url's path.\n    var thumbhash = str.replace(/^thumbhash:\\//, '').replace(/\\//g, '\\\\');\n    return {\n      uri: hashToUri('thumbhash', thumbhash)\n    };\n  }\n});","lineCount":45,"map":[[9,2,5,0],[9,11,5,9,"hashToUri"],[9,20,5,18,"hashToUri"],[9,21,5,19,"type"],[9,25,5,38],[9,27,5,40,"hash"],[9,31,5,52],[9,33,5,62],[10,4,6,2],[10,8,6,8,"encodedBlurhash"],[10,23,6,23],[10,26,6,26,"encodeURI"],[10,35,6,35],[10,36,6,36,"hash"],[10,40,6,40],[10,41,6,41],[10,42,6,42,"replace"],[10,49,6,49],[10,50,6,50],[10,54,6,54],[10,56,6,56],[10,61,6,61],[10,62,6,62],[10,63,6,63,"replace"],[10,70,6,70],[10,71,6,71],[10,76,6,76],[10,78,6,78],[10,83,6,83],[10,84,6,84],[11,4,7,2],[11,11,7,9],[11,14,7,12,"type"],[11,18,7,16],[11,23,7,21,"encodedBlurhash"],[11,38,7,36],[11,40,7,38],[12,2,8,0],[14,2,10,0],[15,0,11,0],[16,0,12,0],[17,0,13,0],[18,0,14,0],[19,2,15,7],[19,11,15,16,"resolveBlurhashString"],[19,32,15,37,"resolveBlurhashString"],[19,33,15,38,"str"],[19,36,15,49],[19,38,15,64],[20,4,16,2],[20,8,16,2,"_str$replace$split"],[20,26,16,2],[20,29,16,36,"str"],[20,32,16,39],[20,33,16,40,"replace"],[20,40,16,47],[20,41,16,48],[20,55,16,62],[20,57,16,64],[20,59,16,66],[20,60,16,67],[20,61,16,68,"split"],[20,66,16,73],[20,67,16,74],[20,70,16,77],[20,71,16,78],[21,6,16,78,"_str$replace$split2"],[21,25,16,78],[21,32,16,78,"_slicedToArray2"],[21,47,16,78],[21,48,16,78,"default"],[21,55,16,78],[21,57,16,78,"_str$replace$split"],[21,75,16,78],[22,6,16,9,"blurhash"],[22,14,16,17],[22,17,16,17,"_str$replace$split2"],[22,36,16,17],[23,6,16,19,"width"],[23,11,16,24],[23,14,16,24,"_str$replace$split2"],[23,33,16,24],[24,6,16,26,"height"],[24,12,16,32],[24,15,16,32,"_str$replace$split2"],[24,34,16,32],[25,4,17,2],[25,11,17,9],[26,6,18,4,"uri"],[26,9,18,7],[26,11,18,9,"hashToUri"],[26,20,18,18],[26,21,18,19],[26,31,18,29],[26,33,18,31,"blurhash"],[26,41,18,39],[26,42,18,40],[27,6,19,4,"width"],[27,11,19,9],[27,13,19,11,"parseInt"],[27,21,19,19],[27,22,19,20,"width"],[27,27,19,25],[27,29,19,27],[27,31,19,29],[27,32,19,30],[27,36,19,34],[27,38,19,36],[28,6,20,4,"height"],[28,12,20,10],[28,14,20,12,"parseInt"],[28,22,20,20],[28,23,20,21,"height"],[28,29,20,27],[28,31,20,29],[28,33,20,31],[28,34,20,32],[28,38,20,36],[29,4,21,2],[29,5,21,3],[30,2,22,0],[32,2,24,0],[33,0,25,0],[34,0,26,0],[35,0,27,0],[36,0,28,0],[37,2,29,7],[37,11,29,16,"resolveThumbhashString"],[37,33,29,38,"resolveThumbhashString"],[37,34,29,39,"str"],[37,37,29,50],[37,39,29,65],[38,4,30,2],[39,4,31,2],[40,4,32,2],[40,8,32,8,"thumbhash"],[40,17,32,17],[40,20,32,20,"str"],[40,23,32,23],[40,24,32,24,"replace"],[40,31,32,31],[40,32,32,32],[40,47,32,47],[40,49,32,49],[40,51,32,51],[40,52,32,52],[40,53,32,53,"replace"],[40,60,32,60],[40,61,32,61],[40,66,32,66],[40,68,32,68],[40,72,32,72],[40,73,32,73],[41,4,33,2],[41,11,33,9],[42,6,34,4,"uri"],[42,9,34,7],[42,11,34,9,"hashToUri"],[42,20,34,18],[42,21,34,19],[42,32,34,30],[42,34,34,32,"thumbhash"],[42,43,34,41],[43,4,35,2],[43,5,35,3],[44,2,36,0],[45,0,36,1],[45,3]],"functionMap":{"names":["<global>","hashToUri","resolveBlurhashString","resolveThumbhashString"],"mappings":"AAA;ACI;CDG;OEO;CFO;OGO;CHO"}},"type":"js/module"}]}