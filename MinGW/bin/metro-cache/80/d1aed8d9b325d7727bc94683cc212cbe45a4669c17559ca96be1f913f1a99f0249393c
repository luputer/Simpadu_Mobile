{"dependencies":[{"name":"expo-modules-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":89},"end":{"line":5,"column":45,"index":134}}],"key":"fU8WLIPqoAGygnPbZ/QJiQQfXEY=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.canGetUserMedia = canGetUserMedia;\n  exports.getAnyUserMediaAsync = getAnyUserMediaAsync;\n  exports.getUserMediaAsync = getUserMediaAsync;\n  exports.isBackCameraAvailableAsync = isBackCameraAvailableAsync;\n  exports.isFrontCameraAvailableAsync = isFrontCameraAvailableAsync;\n  exports.mountedInstances = void 0;\n  exports.requestUserMediaAsync = requestUserMediaAsync;\n  exports.userMediaRequested = void 0;\n  var _expoModulesCore = require(_dependencyMap[0], \"expo-modules-core\");\n  /* eslint-env browser */\n  /**\n   * A web-only module for ponyfilling the UserMedia API.\n   */\n\n  const userMediaRequested = exports.userMediaRequested = false;\n  const mountedInstances = exports.mountedInstances = [];\n  async function requestLegacyUserMediaAsync(\n  // TODO(@kitten): Type this properly\n  props) {\n    // TODO(@kitten): This is never type checked against DOM types\n    const optionalSource = id => ({\n      optional: [{\n        sourceId: id\n      }]\n    });\n    const constraintToSourceId = constraint => {\n      const {\n        deviceId\n      } = constraint;\n      if (typeof deviceId === 'string') {\n        return deviceId;\n      }\n      if (Array.isArray(deviceId)) {\n        return deviceId[0] ?? null;\n      } else if (typeof deviceId === 'object' && deviceId.ideal) {\n        return deviceId.ideal;\n      }\n      return null;\n    };\n    const sources = await new Promise(resolve =>\n    // @ts-ignore: https://caniuse.com/#search=getSources Chrome for Android (78) & Samsung Internet (10.1) use this\n    MediaStreamTrack.getSources(sources => resolve(sources)));\n    let audioSource = null;\n    let videoSource = null;\n    sources.forEach(source => {\n      if (source.kind === 'audio') {\n        audioSource = source.id;\n      } else if (source.kind === 'video') {\n        videoSource = source.id;\n      }\n    });\n    // NOTE(@kitten): This doesn't seem right. The types that should be used here don't contain `audioConstraints`\n    // If this is legacy, the type shouldn't have been dropped but marked as `@deprecated`. Alternatively, remove this code path\n    const audioSourceId = constraintToSourceId(props.audioConstraints);\n    if (audioSourceId) {\n      audioSource = audioSourceId;\n    }\n    // NOTE(@kitten): This doesn't seem right. The types that should be used here don't contain `videoConstraints`\n    // If this is legacy, the type shouldn't have been dropped but marked as `@deprecated`. Alternatively, remove this code path\n    const videoSourceId = constraintToSourceId(props.videoConstraints);\n    if (videoSourceId) {\n      videoSource = videoSourceId;\n    }\n    return [optionalSource(audioSource), optionalSource(videoSource)];\n  }\n  async function sourceSelectedAsync(isMuted, audioConstraints, videoConstraints) {\n    const constraints = {\n      video: typeof videoConstraints !== 'undefined' ? videoConstraints : true\n    };\n    if (!isMuted) {\n      constraints.audio = typeof audioConstraints !== 'undefined' ? audioConstraints : true;\n    }\n    return await getAnyUserMediaAsync(constraints);\n  }\n  async function requestUserMediaAsync(\n  // TODO(@kitten): Type this properly\n  props, isMuted = true) {\n    if (canGetUserMedia()) {\n      return await sourceSelectedAsync(isMuted, props.audio, props.video);\n    }\n    // NOTE(@kitten): This doesn't seem right. The types that should be used here don't contain `videoConstraints`\n    // If this is legacy, the type shouldn't have been dropped but marked as `@deprecated`. Alternatively, remove this code path\n    const [audio, video] = await requestLegacyUserMediaAsync(props);\n    return await sourceSelectedAsync(isMuted, audio, video);\n  }\n  async function getAnyUserMediaAsync(constraints, ignoreConstraints = false) {\n    try {\n      return await getUserMediaAsync(Object.assign({}, constraints, {\n        video: ignoreConstraints || constraints.video\n      }));\n    } catch (error) {\n      if (!ignoreConstraints && typeof error === 'object' && error?.name === 'ConstraintNotSatisfiedError') {\n        return await getAnyUserMediaAsync(constraints, true);\n      }\n      throw error;\n    }\n  }\n  async function getUserMediaAsync(constraints) {\n    if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n      return navigator.mediaDevices.getUserMedia(constraints);\n    }\n    const _getUserMedia = navigator['mozGetUserMedia'] || navigator['webkitGetUserMedia'] ||\n    // @ts-expect-error: TODO(@kitten): Remove / Drop IE support\n    navigator['msGetUserMedia'];\n    return new Promise((resolve, reject) => _getUserMedia.call(navigator, constraints, resolve, reject));\n  }\n  function canGetUserMedia() {\n    // TODO(@kitten): This is misaligned with the implementations in `expo-audio/src/AudioModule.web.ts` and `expo-av`\n    return (\n      // SSR\n      _expoModulesCore.Platform.isDOMAvailable &&\n      // Has any form of media API\n      !!(navigator.mediaDevices && navigator.mediaDevices.getUserMedia || navigator['mozGetUserMedia'] || navigator['webkitGetUserMedia'] ||\n      // @ts-expect-error: TODO(@kitten): Remove / Drop IE support\n      navigator['msGetUserMedia'])\n    );\n  }\n  async function isFrontCameraAvailableAsync(devices) {\n    return await supportsCameraType(['front', 'user', 'facetime'], 'user', devices);\n  }\n  async function isBackCameraAvailableAsync(devices) {\n    return await supportsCameraType(['back', 'rear'], 'environment', devices);\n  }\n  async function supportsCameraType(labels, type, devices) {\n    if (!devices) {\n      if (!navigator.mediaDevices.enumerateDevices) {\n        return null;\n      }\n      devices = await navigator.mediaDevices.enumerateDevices();\n    }\n    const cameras = devices.filter(t => t.kind === 'videoinput');\n    const [hasCamera] = cameras.filter(camera => labels.some(label => camera.label.toLowerCase().includes(label)));\n    const [isCapable] = cameras.filter(camera => {\n      if (!('getCapabilities' in camera)) {\n        return null;\n      }\n      const capabilities = camera.getCapabilities();\n      if (!capabilities.facingMode) {\n        return null;\n      }\n      return capabilities.facingMode.find(_ => type);\n    });\n    return isCapable?.deviceId || hasCamera?.deviceId || null;\n  }\n});","lineCount":149,"map":[[13,2,5,0],[13,6,5,0,"_expoModulesCore"],[13,22,5,0],[13,25,5,0,"require"],[13,32,5,0],[13,33,5,0,"_dependencyMap"],[13,47,5,0],[14,2,1,0],[15,2,2,0],[16,0,3,0],[17,0,4,0],[19,2,6,7],[19,8,6,13,"userMediaRequested"],[19,26,6,31],[19,29,6,31,"exports"],[19,36,6,31],[19,37,6,31,"userMediaRequested"],[19,55,6,31],[19,58,6,34],[19,63,6,39],[20,2,7,7],[20,8,7,13,"mountedInstances"],[20,24,7,29],[20,27,7,29,"exports"],[20,34,7,29],[20,35,7,29,"mountedInstances"],[20,51,7,29],[20,54,7,32],[20,56,7,34],[21,2,8,0],[21,17,8,15,"requestLegacyUserMediaAsync"],[21,44,8,42,"requestLegacyUserMediaAsync"],[22,2,9,0],[23,2,10,0,"props"],[23,7,10,5],[23,9,10,7],[24,4,11,4],[25,4,12,4],[25,10,12,10,"optionalSource"],[25,24,12,24],[25,27,12,28,"id"],[25,29,12,30],[25,34,12,36],[26,6,12,38,"optional"],[26,14,12,46],[26,16,12,48],[26,17,12,49],[27,8,12,51,"sourceId"],[27,16,12,59],[27,18,12,61,"id"],[28,6,12,64],[28,7,12,65],[29,4,12,67],[29,5,12,68],[29,6,12,69],[30,4,13,4],[30,10,13,10,"constraintToSourceId"],[30,30,13,30],[30,33,13,34,"constraint"],[30,43,13,44],[30,47,13,49],[31,6,14,8],[31,12,14,14],[32,8,14,16,"deviceId"],[33,6,14,25],[33,7,14,26],[33,10,14,29,"constraint"],[33,20,14,39],[34,6,15,8],[34,10,15,12],[34,17,15,19,"deviceId"],[34,25,15,27],[34,30,15,32],[34,38,15,40],[34,40,15,42],[35,8,16,12],[35,15,16,19,"deviceId"],[35,23,16,27],[36,6,17,8],[37,6,18,8],[37,10,18,12,"Array"],[37,15,18,17],[37,16,18,18,"isArray"],[37,23,18,25],[37,24,18,26,"deviceId"],[37,32,18,34],[37,33,18,35],[37,35,18,37],[38,8,19,12],[38,15,19,19,"deviceId"],[38,23,19,27],[38,24,19,28],[38,25,19,29],[38,26,19,30],[38,30,19,34],[38,34,19,38],[39,6,20,8],[39,7,20,9],[39,13,21,13],[39,17,21,17],[39,24,21,24,"deviceId"],[39,32,21,32],[39,37,21,37],[39,45,21,45],[39,49,21,49,"deviceId"],[39,57,21,57],[39,58,21,58,"ideal"],[39,63,21,63],[39,65,21,65],[40,8,22,12],[40,15,22,19,"deviceId"],[40,23,22,27],[40,24,22,28,"ideal"],[40,29,22,33],[41,6,23,8],[42,6,24,8],[42,13,24,15],[42,17,24,19],[43,4,25,4],[43,5,25,5],[44,4,26,4],[44,10,26,10,"sources"],[44,17,26,17],[44,20,26,20],[44,26,26,26],[44,30,26,30,"Promise"],[44,37,26,37],[44,38,26,39,"resolve"],[44,45,26,46],[45,4,27,4],[46,4,28,4,"MediaStreamTrack"],[46,20,28,20],[46,21,28,21,"getSources"],[46,31,28,31],[46,32,28,33,"sources"],[46,39,28,40],[46,43,28,45,"resolve"],[46,50,28,52],[46,51,28,53,"sources"],[46,58,28,60],[46,59,28,61],[46,60,28,62],[46,61,28,63],[47,4,29,4],[47,8,29,8,"audioSource"],[47,19,29,19],[47,22,29,22],[47,26,29,26],[48,4,30,4],[48,8,30,8,"videoSource"],[48,19,30,19],[48,22,30,22],[48,26,30,26],[49,4,31,4,"sources"],[49,11,31,11],[49,12,31,12,"forEach"],[49,19,31,19],[49,20,31,21,"source"],[49,26,31,27],[49,30,31,32],[50,6,32,8],[50,10,32,12,"source"],[50,16,32,18],[50,17,32,19,"kind"],[50,21,32,23],[50,26,32,28],[50,33,32,35],[50,35,32,37],[51,8,33,12,"audioSource"],[51,19,33,23],[51,22,33,26,"source"],[51,28,33,32],[51,29,33,33,"id"],[51,31,33,35],[52,6,34,8],[52,7,34,9],[52,13,35,13],[52,17,35,17,"source"],[52,23,35,23],[52,24,35,24,"kind"],[52,28,35,28],[52,33,35,33],[52,40,35,40],[52,42,35,42],[53,8,36,12,"videoSource"],[53,19,36,23],[53,22,36,26,"source"],[53,28,36,32],[53,29,36,33,"id"],[53,31,36,35],[54,6,37,8],[55,4,38,4],[55,5,38,5],[55,6,38,6],[56,4,39,4],[57,4,40,4],[58,4,41,4],[58,10,41,10,"audioSourceId"],[58,23,41,23],[58,26,41,26,"constraintToSourceId"],[58,46,41,46],[58,47,41,47,"props"],[58,52,41,52],[58,53,41,53,"audioConstraints"],[58,69,41,69],[58,70,41,70],[59,4,42,4],[59,8,42,8,"audioSourceId"],[59,21,42,21],[59,23,42,23],[60,6,43,8,"audioSource"],[60,17,43,19],[60,20,43,22,"audioSourceId"],[60,33,43,35],[61,4,44,4],[62,4,45,4],[63,4,46,4],[64,4,47,4],[64,10,47,10,"videoSourceId"],[64,23,47,23],[64,26,47,26,"constraintToSourceId"],[64,46,47,46],[64,47,47,47,"props"],[64,52,47,52],[64,53,47,53,"videoConstraints"],[64,69,47,69],[64,70,47,70],[65,4,48,4],[65,8,48,8,"videoSourceId"],[65,21,48,21],[65,23,48,23],[66,6,49,8,"videoSource"],[66,17,49,19],[66,20,49,22,"videoSourceId"],[66,33,49,35],[67,4,50,4],[68,4,51,4],[68,11,51,11],[68,12,51,12,"optionalSource"],[68,26,51,26],[68,27,51,27,"audioSource"],[68,38,51,38],[68,39,51,39],[68,41,51,41,"optionalSource"],[68,55,51,55],[68,56,51,56,"videoSource"],[68,67,51,67],[68,68,51,68],[68,69,51,69],[69,2,52,0],[70,2,53,0],[70,17,53,15,"sourceSelectedAsync"],[70,36,53,34,"sourceSelectedAsync"],[70,37,53,35,"isMuted"],[70,44,53,42],[70,46,53,44,"audioConstraints"],[70,62,53,60],[70,64,53,62,"videoConstraints"],[70,80,53,78],[70,82,53,80],[71,4,54,4],[71,10,54,10,"constraints"],[71,21,54,21],[71,24,54,24],[72,6,55,8,"video"],[72,11,55,13],[72,13,55,15],[72,20,55,22,"videoConstraints"],[72,36,55,38],[72,41,55,43],[72,52,55,54],[72,55,55,57,"videoConstraints"],[72,71,55,73],[72,74,55,76],[73,4,56,4],[73,5,56,5],[74,4,57,4],[74,8,57,8],[74,9,57,9,"isMuted"],[74,16,57,16],[74,18,57,18],[75,6,58,8,"constraints"],[75,17,58,19],[75,18,58,20,"audio"],[75,23,58,25],[75,26,58,28],[75,33,58,35,"audioConstraints"],[75,49,58,51],[75,54,58,56],[75,65,58,67],[75,68,58,70,"audioConstraints"],[75,84,58,86],[75,87,58,89],[75,91,58,93],[76,4,59,4],[77,4,60,4],[77,11,60,11],[77,17,60,17,"getAnyUserMediaAsync"],[77,37,60,37],[77,38,60,38,"constraints"],[77,49,60,49],[77,50,60,50],[78,2,61,0],[79,2,62,7],[79,17,62,22,"requestUserMediaAsync"],[79,38,62,43,"requestUserMediaAsync"],[80,2,63,0],[81,2,64,0,"props"],[81,7,64,5],[81,9,64,7,"isMuted"],[81,16,64,14],[81,19,64,17],[81,23,64,21],[81,25,64,23],[82,4,65,4],[82,8,65,8,"canGetUserMedia"],[82,23,65,23],[82,24,65,24],[82,25,65,25],[82,27,65,27],[83,6,66,8],[83,13,66,15],[83,19,66,21,"sourceSelectedAsync"],[83,38,66,40],[83,39,66,41,"isMuted"],[83,46,66,48],[83,48,66,50,"props"],[83,53,66,55],[83,54,66,56,"audio"],[83,59,66,61],[83,61,66,63,"props"],[83,66,66,68],[83,67,66,69,"video"],[83,72,66,74],[83,73,66,75],[84,4,67,4],[85,4,68,4],[86,4,69,4],[87,4,70,4],[87,10,70,10],[87,11,70,11,"audio"],[87,16,70,16],[87,18,70,18,"video"],[87,23,70,23],[87,24,70,24],[87,27,70,27],[87,33,70,33,"requestLegacyUserMediaAsync"],[87,60,70,60],[87,61,70,61,"props"],[87,66,70,66],[87,67,70,67],[88,4,71,4],[88,11,71,11],[88,17,71,17,"sourceSelectedAsync"],[88,36,71,36],[88,37,71,37,"isMuted"],[88,44,71,44],[88,46,71,46,"audio"],[88,51,71,51],[88,53,71,53,"video"],[88,58,71,58],[88,59,71,59],[89,2,72,0],[90,2,73,7],[90,17,73,22,"getAnyUserMediaAsync"],[90,37,73,42,"getAnyUserMediaAsync"],[90,38,73,43,"constraints"],[90,49,73,54],[90,51,73,56,"ignoreConstraints"],[90,68,73,73],[90,71,73,76],[90,76,73,81],[90,78,73,83],[91,4,74,4],[91,8,74,8],[92,6,75,8],[92,13,75,15],[92,19,75,21,"getUserMediaAsync"],[92,36,75,38],[92,37,75,38,"Object"],[92,43,75,38],[92,44,75,38,"assign"],[92,50,75,38],[92,55,76,15,"constraints"],[92,66,76,26],[93,8,77,12,"video"],[93,13,77,17],[93,15,77,19,"ignoreConstraints"],[93,32,77,36],[93,36,77,40,"constraints"],[93,47,77,51],[93,48,77,52,"video"],[94,6,77,57],[94,8,78,9],[94,9,78,10],[95,4,79,4],[95,5,79,5],[95,6,80,4],[95,13,80,11,"error"],[95,18,80,16],[95,20,80,18],[96,6,81,8],[96,10,81,12],[96,11,81,13,"ignoreConstraints"],[96,28,81,30],[96,32,82,12],[96,39,82,19,"error"],[96,44,82,24],[96,49,82,29],[96,57,82,37],[96,61,83,12,"error"],[96,66,83,17],[96,68,83,19,"name"],[96,72,83,23],[96,77,83,28],[96,106,83,57],[96,108,83,59],[97,8,84,12],[97,15,84,19],[97,21,84,25,"getAnyUserMediaAsync"],[97,41,84,45],[97,42,84,46,"constraints"],[97,53,84,57],[97,55,84,59],[97,59,84,63],[97,60,84,64],[98,6,85,8],[99,6,86,8],[99,12,86,14,"error"],[99,17,86,19],[100,4,87,4],[101,2,88,0],[102,2,89,7],[102,17,89,22,"getUserMediaAsync"],[102,34,89,39,"getUserMediaAsync"],[102,35,89,40,"constraints"],[102,46,89,51],[102,48,89,53],[103,4,90,4],[103,8,90,8,"navigator"],[103,17,90,17],[103,18,90,18,"mediaDevices"],[103,30,90,30],[103,34,90,34,"navigator"],[103,43,90,43],[103,44,90,44,"mediaDevices"],[103,56,90,56],[103,57,90,57,"getUserMedia"],[103,69,90,69],[103,71,90,71],[104,6,91,8],[104,13,91,15,"navigator"],[104,22,91,24],[104,23,91,25,"mediaDevices"],[104,35,91,37],[104,36,91,38,"getUserMedia"],[104,48,91,50],[104,49,91,51,"constraints"],[104,60,91,62],[104,61,91,63],[105,4,92,4],[106,4,93,4],[106,10,93,10,"_getUserMedia"],[106,23,93,23],[106,26,93,26,"navigator"],[106,35,93,35],[106,36,93,36],[106,53,93,53],[106,54,93,54],[106,58,94,8,"navigator"],[106,67,94,17],[106,68,94,18],[106,88,94,38],[106,89,94,39],[107,4,95,8],[108,4,96,8,"navigator"],[108,13,96,17],[108,14,96,18],[108,30,96,34],[108,31,96,35],[109,4,97,4],[109,11,97,11],[109,15,97,15,"Promise"],[109,22,97,22],[109,23,97,23],[109,24,97,24,"resolve"],[109,31,97,31],[109,33,97,33,"reject"],[109,39,97,39],[109,44,97,44,"_getUserMedia"],[109,57,97,57],[109,58,97,58,"call"],[109,62,97,62],[109,63,97,63,"navigator"],[109,72,97,72],[109,74,97,74,"constraints"],[109,85,97,85],[109,87,97,87,"resolve"],[109,94,97,94],[109,96,97,96,"reject"],[109,102,97,102],[109,103,97,103],[109,104,97,104],[110,2,98,0],[111,2,99,7],[111,11,99,16,"canGetUserMedia"],[111,26,99,31,"canGetUserMedia"],[111,27,99,31],[111,29,99,34],[112,4,100,4],[113,4,101,4],[114,6,102,4],[115,6,103,4,"Platform"],[115,31,103,12],[115,32,103,13,"isDOMAvailable"],[115,46,103,27],[116,6,104,8],[117,6,105,8],[117,7,105,9],[117,9,105,12,"navigator"],[117,18,105,21],[117,19,105,22,"mediaDevices"],[117,31,105,34],[117,35,105,38,"navigator"],[117,44,105,47],[117,45,105,48,"mediaDevices"],[117,57,105,60],[117,58,105,61,"getUserMedia"],[117,70,105,73],[117,74,106,12,"navigator"],[117,83,106,21],[117,84,106,22],[117,101,106,39],[117,102,106,40],[117,106,107,12,"navigator"],[117,115,107,21],[117,116,107,22],[117,136,107,42],[117,137,107,43],[118,6,108,12],[119,6,109,12,"navigator"],[119,15,109,21],[119,16,109,22],[119,32,109,38],[119,33,109,39],[120,4,109,40],[121,2,110,0],[122,2,111,7],[122,17,111,22,"isFrontCameraAvailableAsync"],[122,44,111,49,"isFrontCameraAvailableAsync"],[122,45,111,50,"devices"],[122,52,111,57],[122,54,111,59],[123,4,112,4],[123,11,112,11],[123,17,112,17,"supportsCameraType"],[123,35,112,35],[123,36,112,36],[123,37,112,37],[123,44,112,44],[123,46,112,46],[123,52,112,52],[123,54,112,54],[123,64,112,64],[123,65,112,65],[123,67,112,67],[123,73,112,73],[123,75,112,75,"devices"],[123,82,112,82],[123,83,112,83],[124,2,113,0],[125,2,114,7],[125,17,114,22,"isBackCameraAvailableAsync"],[125,43,114,48,"isBackCameraAvailableAsync"],[125,44,114,49,"devices"],[125,51,114,56],[125,53,114,58],[126,4,115,4],[126,11,115,11],[126,17,115,17,"supportsCameraType"],[126,35,115,35],[126,36,115,36],[126,37,115,37],[126,43,115,43],[126,45,115,45],[126,51,115,51],[126,52,115,52],[126,54,115,54],[126,67,115,67],[126,69,115,69,"devices"],[126,76,115,76],[126,77,115,77],[127,2,116,0],[128,2,117,0],[128,17,117,15,"supportsCameraType"],[128,35,117,33,"supportsCameraType"],[128,36,117,34,"labels"],[128,42,117,40],[128,44,117,42,"type"],[128,48,117,46],[128,50,117,48,"devices"],[128,57,117,55],[128,59,117,57],[129,4,118,4],[129,8,118,8],[129,9,118,9,"devices"],[129,16,118,16],[129,18,118,18],[130,6,119,8],[130,10,119,12],[130,11,119,13,"navigator"],[130,20,119,22],[130,21,119,23,"mediaDevices"],[130,33,119,35],[130,34,119,36,"enumerateDevices"],[130,50,119,52],[130,52,119,54],[131,8,120,12],[131,15,120,19],[131,19,120,23],[132,6,121,8],[133,6,122,8,"devices"],[133,13,122,15],[133,16,122,18],[133,22,122,24,"navigator"],[133,31,122,33],[133,32,122,34,"mediaDevices"],[133,44,122,46],[133,45,122,47,"enumerateDevices"],[133,61,122,63],[133,62,122,64],[133,63,122,65],[134,4,123,4],[135,4,124,4],[135,10,124,10,"cameras"],[135,17,124,17],[135,20,124,20,"devices"],[135,27,124,27],[135,28,124,28,"filter"],[135,34,124,34],[135,35,124,36,"t"],[135,36,124,37],[135,40,124,42,"t"],[135,41,124,43],[135,42,124,44,"kind"],[135,46,124,48],[135,51,124,53],[135,63,124,65],[135,64,124,66],[136,4,125,4],[136,10,125,10],[136,11,125,11,"hasCamera"],[136,20,125,20],[136,21,125,21],[136,24,125,24,"cameras"],[136,31,125,31],[136,32,125,32,"filter"],[136,38,125,38],[136,39,125,40,"camera"],[136,45,125,46],[136,49,125,51,"labels"],[136,55,125,57],[136,56,125,58,"some"],[136,60,125,62],[136,61,125,64,"label"],[136,66,125,69],[136,70,125,74,"camera"],[136,76,125,80],[136,77,125,81,"label"],[136,82,125,86],[136,83,125,87,"toLowerCase"],[136,94,125,98],[136,95,125,99],[136,96,125,100],[136,97,125,101,"includes"],[136,105,125,109],[136,106,125,110,"label"],[136,111,125,115],[136,112,125,116],[136,113,125,117],[136,114,125,118],[137,4,126,4],[137,10,126,10],[137,11,126,11,"isCapable"],[137,20,126,20],[137,21,126,21],[137,24,126,24,"cameras"],[137,31,126,31],[137,32,126,32,"filter"],[137,38,126,38],[137,39,126,40,"camera"],[137,45,126,46],[137,49,126,51],[138,6,127,8],[138,10,127,12],[138,12,127,14],[138,29,127,31],[138,33,127,35,"camera"],[138,39,127,41],[138,40,127,42],[138,42,127,44],[139,8,128,12],[139,15,128,19],[139,19,128,23],[140,6,129,8],[141,6,130,8],[141,12,130,14,"capabilities"],[141,24,130,26],[141,27,130,29,"camera"],[141,33,130,35],[141,34,130,36,"getCapabilities"],[141,49,130,51],[141,50,130,52],[141,51,130,53],[142,6,131,8],[142,10,131,12],[142,11,131,13,"capabilities"],[142,23,131,25],[142,24,131,26,"facingMode"],[142,34,131,36],[142,36,131,38],[143,8,132,12],[143,15,132,19],[143,19,132,23],[144,6,133,8],[145,6,134,8],[145,13,134,15,"capabilities"],[145,25,134,27],[145,26,134,28,"facingMode"],[145,36,134,38],[145,37,134,39,"find"],[145,41,134,43],[145,42,134,45,"_"],[145,43,134,46],[145,47,134,51,"type"],[145,51,134,55],[145,52,134,56],[146,4,135,4],[146,5,135,5],[146,6,135,6],[147,4,136,4],[147,11,136,11,"isCapable"],[147,20,136,20],[147,22,136,22,"deviceId"],[147,30,136,30],[147,34,136,34,"hasCamera"],[147,43,136,43],[147,45,136,45,"deviceId"],[147,53,136,53],[147,57,136,57],[147,61,136,61],[148,2,137,0],[149,0,137,1],[149,3]],"functionMap":{"names":["<global>","requestLegacyUserMediaAsync","optionalSource","constraintToSourceId","Promise$argument_0","MediaStreamTrack.getSources$argument_0","sources.forEach$argument_0","sourceSelectedAsync","requestUserMediaAsync","getAnyUserMediaAsync","getUserMediaAsync","canGetUserMedia","isFrontCameraAvailableAsync","isBackCameraAvailableAsync","supportsCameraType","devices.filter$argument_0","cameras.filter$argument_0","labels.some$argument_0","capabilities.facingMode.find$argument_0"],"mappings":"AAA;ACO;2BCI,0CD;iCEC;KFY;sCGC;gCCE,6BD,CH;oBKG;KLO;CDc;AOC;CPQ;OQC;CRU;OSC;CTe;OUC;uBNQ,gFM;CVC;OWC;CXW;OYC;CZE;OaC;CbE;AcC;mCCO,8BD;uCEC,wBC,qDD,CF;uCEC;4CEQ,WF;KFC;CdE"}},"type":"js/module"}]}