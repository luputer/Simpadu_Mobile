{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":26,"index":26}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"]}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":27},"end":{"line":2,"column":44,"index":71}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.shouldDismissView = shouldDismissView;\n  exports.shouldSetPanResponder = shouldSetPanResponder;\n  exports.usePanResponder = usePanResponder;\n  var _react = _interopRequireDefault(require(_dependencyMap[1], \"react\"));\n  var _reactNative = require(_dependencyMap[2], \"react-native\");\n  function shouldSetPanResponder(_event, gesture) {\n    var dx = gesture.dx,\n      dy = gesture.dy;\n    // Fixes onPress handler\n    // https://github.com/calintamas/react-native-toast-message/issues/113\n    var offset = 2;\n    return Math.abs(dx) > offset || Math.abs(dy) > offset;\n  }\n  function shouldDismissView(newAnimatedValue, gesture) {\n    var dismissThreshold = 0.65;\n    var vy = gesture.vy,\n      dy = gesture.dy;\n    return newAnimatedValue <= dismissThreshold || Math.abs(vy) >= dismissThreshold && dy < 0;\n  }\n  function usePanResponder(_ref) {\n    var animatedValue = _ref.animatedValue,\n      computeNewAnimatedValueForGesture = _ref.computeNewAnimatedValueForGesture,\n      onDismiss = _ref.onDismiss,\n      onRestore = _ref.onRestore,\n      disable = _ref.disable;\n    var onMove = _react.default.useCallback((_event, gesture) => {\n      if (disable) {\n        return;\n      }\n      var newAnimatedValue = computeNewAnimatedValueForGesture(gesture);\n      animatedValue.current?.setValue(newAnimatedValue);\n    }, [animatedValue, computeNewAnimatedValueForGesture, disable]);\n    var onRelease = _react.default.useCallback((_event, gesture) => {\n      if (disable) {\n        return;\n      }\n      var newAnimatedValue = computeNewAnimatedValueForGesture(gesture);\n      if (shouldDismissView(newAnimatedValue, gesture)) {\n        onDismiss();\n      } else {\n        onRestore();\n      }\n    }, [computeNewAnimatedValueForGesture, onDismiss, onRestore, disable]);\n    var panResponder = _react.default.useMemo(() => _reactNative.PanResponder.create({\n      onMoveShouldSetPanResponder: shouldSetPanResponder,\n      onMoveShouldSetPanResponderCapture: shouldSetPanResponder,\n      onPanResponderMove: onMove,\n      onPanResponderRelease: onRelease\n    }), [onMove, onRelease]);\n    return {\n      panResponder,\n      onMove,\n      onRelease\n    };\n  }\n});","lineCount":61,"map":[[9,2,1,0],[9,6,1,0,"_react"],[9,12,1,0],[9,15,1,0,"_interopRequireDefault"],[9,37,1,0],[9,38,1,0,"require"],[9,45,1,0],[9,46,1,0,"_dependencyMap"],[9,60,1,0],[10,2,2,0],[10,6,2,0,"_reactNative"],[10,18,2,0],[10,21,2,0,"require"],[10,28,2,0],[10,29,2,0,"_dependencyMap"],[10,43,2,0],[11,2,3,7],[11,11,3,16,"shouldSetPanResponder"],[11,32,3,37,"shouldSetPanResponder"],[11,33,3,38,"_event"],[11,39,3,44],[11,41,3,46,"gesture"],[11,48,3,53],[11,50,3,55],[12,4,4,4],[12,8,4,12,"dx"],[12,10,4,14],[12,13,4,23,"gesture"],[12,20,4,30],[12,21,4,12,"dx"],[12,23,4,14],[13,6,4,16,"dy"],[13,8,4,18],[13,11,4,23,"gesture"],[13,18,4,30],[13,19,4,16,"dy"],[13,21,4,18],[14,4,5,4],[15,4,6,4],[16,4,7,4],[16,8,7,10,"offset"],[16,14,7,16],[16,17,7,19],[16,18,7,20],[17,4,8,4],[17,11,8,11,"Math"],[17,15,8,15],[17,16,8,16,"abs"],[17,19,8,19],[17,20,8,20,"dx"],[17,22,8,22],[17,23,8,23],[17,26,8,26,"offset"],[17,32,8,32],[17,36,8,36,"Math"],[17,40,8,40],[17,41,8,41,"abs"],[17,44,8,44],[17,45,8,45,"dy"],[17,47,8,47],[17,48,8,48],[17,51,8,51,"offset"],[17,57,8,57],[18,2,9,0],[19,2,10,7],[19,11,10,16,"shouldDismissView"],[19,28,10,33,"shouldDismissView"],[19,29,10,34,"newAnimatedValue"],[19,45,10,50],[19,47,10,52,"gesture"],[19,54,10,59],[19,56,10,61],[20,4,11,4],[20,8,11,10,"dismissThreshold"],[20,24,11,26],[20,27,11,29],[20,31,11,33],[21,4,12,4],[21,8,12,12,"vy"],[21,10,12,14],[21,13,12,23,"gesture"],[21,20,12,30],[21,21,12,12,"vy"],[21,23,12,14],[22,6,12,16,"dy"],[22,8,12,18],[22,11,12,23,"gesture"],[22,18,12,30],[22,19,12,16,"dy"],[22,21,12,18],[23,4,13,4],[23,11,13,12,"newAnimatedValue"],[23,27,13,28],[23,31,13,32,"dismissThreshold"],[23,47,13,48],[23,51,14,9,"Math"],[23,55,14,13],[23,56,14,14,"abs"],[23,59,14,17],[23,60,14,18,"vy"],[23,62,14,20],[23,63,14,21],[23,67,14,25,"dismissThreshold"],[23,83,14,41],[23,87,14,45,"dy"],[23,89,14,47],[23,92,14,50],[23,93,14,52],[24,2,15,0],[25,2,16,7],[25,11,16,16,"usePanResponder"],[25,26,16,31,"usePanResponder"],[25,27,16,31,"_ref"],[25,31,16,31],[25,33,16,117],[26,4,16,117],[26,8,16,34,"animatedValue"],[26,21,16,47],[26,24,16,47,"_ref"],[26,28,16,47],[26,29,16,34,"animatedValue"],[26,42,16,47],[27,6,16,49,"computeNewAnimatedValueForGesture"],[27,39,16,82],[27,42,16,82,"_ref"],[27,46,16,82],[27,47,16,49,"computeNewAnimatedValueForGesture"],[27,80,16,82],[28,6,16,84,"onDismiss"],[28,15,16,93],[28,18,16,93,"_ref"],[28,22,16,93],[28,23,16,84,"onDismiss"],[28,32,16,93],[29,6,16,95,"onRestore"],[29,15,16,104],[29,18,16,104,"_ref"],[29,22,16,104],[29,23,16,95,"onRestore"],[29,32,16,104],[30,6,16,106,"disable"],[30,13,16,113],[30,16,16,113,"_ref"],[30,20,16,113],[30,21,16,106,"disable"],[30,28,16,113],[31,4,17,4],[31,8,17,10,"onMove"],[31,14,17,16],[31,17,17,19,"React"],[31,31,17,24],[31,32,17,25,"useCallback"],[31,43,17,36],[31,44,17,37],[31,45,17,38,"_event"],[31,51,17,44],[31,53,17,46,"gesture"],[31,60,17,53],[31,65,17,58],[32,6,18,8],[32,10,18,12,"disable"],[32,17,18,19],[32,19,18,21],[33,8,19,12],[34,6,20,8],[35,6,21,8],[35,10,21,14,"newAnimatedValue"],[35,26,21,30],[35,29,21,33,"computeNewAnimatedValueForGesture"],[35,62,21,66],[35,63,21,67,"gesture"],[35,70,21,74],[35,71,21,75],[36,6,22,8,"animatedValue"],[36,19,22,21],[36,20,22,22,"current"],[36,27,22,29],[36,29,22,31,"setValue"],[36,37,22,39],[36,38,22,40,"newAnimatedValue"],[36,54,22,56],[36,55,22,57],[37,4,23,4],[37,5,23,5],[37,7,23,7],[37,8,23,8,"animatedValue"],[37,21,23,21],[37,23,23,23,"computeNewAnimatedValueForGesture"],[37,56,23,56],[37,58,23,58,"disable"],[37,65,23,65],[37,66,23,66],[37,67,23,67],[38,4,24,4],[38,8,24,10,"onRelease"],[38,17,24,19],[38,20,24,22,"React"],[38,34,24,27],[38,35,24,28,"useCallback"],[38,46,24,39],[38,47,24,40],[38,48,24,41,"_event"],[38,54,24,47],[38,56,24,49,"gesture"],[38,63,24,56],[38,68,24,61],[39,6,25,8],[39,10,25,12,"disable"],[39,17,25,19],[39,19,25,21],[40,8,26,12],[41,6,27,8],[42,6,28,8],[42,10,28,14,"newAnimatedValue"],[42,26,28,30],[42,29,28,33,"computeNewAnimatedValueForGesture"],[42,62,28,66],[42,63,28,67,"gesture"],[42,70,28,74],[42,71,28,75],[43,6,29,8],[43,10,29,12,"shouldDismissView"],[43,27,29,29],[43,28,29,30,"newAnimatedValue"],[43,44,29,46],[43,46,29,48,"gesture"],[43,53,29,55],[43,54,29,56],[43,56,29,58],[44,8,30,12,"onDismiss"],[44,17,30,21],[44,18,30,22],[44,19,30,23],[45,6,31,8],[45,7,31,9],[45,13,32,13],[46,8,33,12,"onRestore"],[46,17,33,21],[46,18,33,22],[46,19,33,23],[47,6,34,8],[48,4,35,4],[48,5,35,5],[48,7,35,7],[48,8,35,8,"computeNewAnimatedValueForGesture"],[48,41,35,41],[48,43,35,43,"onDismiss"],[48,52,35,52],[48,54,35,54,"onRestore"],[48,63,35,63],[48,65,35,65,"disable"],[48,72,35,72],[48,73,35,73],[48,74,35,74],[49,4,36,4],[49,8,36,10,"panResponder"],[49,20,36,22],[49,23,36,25,"React"],[49,37,36,30],[49,38,36,31,"useMemo"],[49,45,36,38],[49,46,36,39],[49,52,36,45,"PanResponder"],[49,77,36,57],[49,78,36,58,"create"],[49,84,36,64],[49,85,36,65],[50,6,37,8,"onMoveShouldSetPanResponder"],[50,33,37,35],[50,35,37,37,"shouldSetPanResponder"],[50,56,37,58],[51,6,38,8,"onMoveShouldSetPanResponderCapture"],[51,40,38,42],[51,42,38,44,"shouldSetPanResponder"],[51,63,38,65],[52,6,39,8,"onPanResponderMove"],[52,24,39,26],[52,26,39,28,"onMove"],[52,32,39,34],[53,6,40,8,"onPanResponderRelease"],[53,27,40,29],[53,29,40,31,"onRelease"],[54,4,41,4],[54,5,41,5],[54,6,41,6],[54,8,41,8],[54,9,41,9,"onMove"],[54,15,41,15],[54,17,41,17,"onRelease"],[54,26,41,26],[54,27,41,27],[54,28,41,28],[55,4,42,4],[55,11,42,11],[56,6,43,8,"panResponder"],[56,18,43,20],[57,6,44,8,"onMove"],[57,12,44,14],[58,6,45,8,"onRelease"],[59,4,46,4],[59,5,46,5],[60,2,47,0],[61,0,47,1],[61,3]],"functionMap":{"names":["<global>","shouldSetPanResponder","shouldDismissView","usePanResponder","onMove","onRelease","React.useMemo$argument_0"],"mappings":"AAA;OCE;CDM;OEC;CFK;OGC;qCCC;KDM;wCEC;KFW;uCGC;MHK;CHM"}},"type":"js/module"}]}